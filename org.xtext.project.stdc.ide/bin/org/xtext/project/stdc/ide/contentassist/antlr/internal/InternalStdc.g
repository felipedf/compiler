/*
 * generated by Xtext 2.9.2
 */
grammar InternalStdc;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
}

@lexer::header {
package org.xtext.project.stdc.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.project.stdc.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.project.stdc.services.StdcGrammarAccess;

}
@parser::members {
	private StdcGrammarAccess grammarAccess;

	public void setGrammarAccess(StdcGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getGreetingsAssignment()); }
		(rule__Model__GreetingsAssignment)
		{ after(grammarAccess.getModelAccess().getGreetingsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTranslationUnit
entryRuleTranslationUnit
:
{ before(grammarAccess.getTranslationUnitRule()); }
	 ruleTranslationUnit
{ after(grammarAccess.getTranslationUnitRule()); } 
	 EOF 
;

// Rule TranslationUnit
ruleTranslationUnit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTranslationUnitAccess().getExDeclarationAssignment()); }
		(rule__TranslationUnit__ExDeclarationAssignment)*
		{ after(grammarAccess.getTranslationUnitAccess().getExDeclarationAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExternalDeclaration
entryRuleExternalDeclaration
:
{ before(grammarAccess.getExternalDeclarationRule()); }
	 ruleExternalDeclaration
{ after(grammarAccess.getExternalDeclarationRule()); } 
	 EOF 
;

// Rule ExternalDeclaration
ruleExternalDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExternalDeclarationAccess().getAlternatives()); }
		(rule__ExternalDeclaration__Alternatives)
		{ after(grammarAccess.getExternalDeclarationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionDefinition
entryRuleFunctionDefinition
:
{ before(grammarAccess.getFunctionDefinitionRule()); }
	 ruleFunctionDefinition
{ after(grammarAccess.getFunctionDefinitionRule()); } 
	 EOF 
;

// Rule FunctionDefinition
ruleFunctionDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionDefinitionAccess().getGroup()); }
		(rule__FunctionDefinition__Group__0)
		{ after(grammarAccess.getFunctionDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstantExpression
entryRuleConstantExpression
:
{ before(grammarAccess.getConstantExpressionRule()); }
	 ruleConstantExpression
{ after(grammarAccess.getConstantExpressionRule()); } 
	 EOF 
;

// Rule ConstantExpression
ruleConstantExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstantExpressionAccess().getConditionalExpressionParserRuleCall()); }
		ruleConditionalExpression
		{ after(grammarAccess.getConstantExpressionAccess().getConditionalExpressionParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionC
entryRuleExpressionC
:
{ before(grammarAccess.getExpressionCRule()); }
	 ruleExpressionC
{ after(grammarAccess.getExpressionCRule()); } 
	 EOF 
;

// Rule ExpressionC
ruleExpressionC 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionCAccess().getGroup()); }
		(rule__ExpressionC__Group__0)
		{ after(grammarAccess.getExpressionCAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssignmentExpression
entryRuleAssignmentExpression
:
{ before(grammarAccess.getAssignmentExpressionRule()); }
	 ruleAssignmentExpression
{ after(grammarAccess.getAssignmentExpressionRule()); } 
	 EOF 
;

// Rule AssignmentExpression
ruleAssignmentExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssignmentExpressionAccess().getGroup()); }
		(rule__AssignmentExpression__Group__0)
		{ after(grammarAccess.getAssignmentExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOpAssign
entryRuleOpAssign
:
{ before(grammarAccess.getOpAssignRule()); }
	 ruleOpAssign
{ after(grammarAccess.getOpAssignRule()); } 
	 EOF 
;

// Rule OpAssign
ruleOpAssign 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOpAssignAccess().getAlternatives()); }
		(rule__OpAssign__Alternatives)
		{ after(grammarAccess.getOpAssignAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConditionalExpression
entryRuleConditionalExpression
:
{ before(grammarAccess.getConditionalExpressionRule()); }
	 ruleConditionalExpression
{ after(grammarAccess.getConditionalExpressionRule()); } 
	 EOF 
;

// Rule ConditionalExpression
ruleConditionalExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionalExpressionAccess().getGroup()); }
		(rule__ConditionalExpression__Group__0)
		{ after(grammarAccess.getConditionalExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLogicalOrExpression
entryRuleLogicalOrExpression
:
{ before(grammarAccess.getLogicalOrExpressionRule()); }
	 ruleLogicalOrExpression
{ after(grammarAccess.getLogicalOrExpressionRule()); } 
	 EOF 
;

// Rule LogicalOrExpression
ruleLogicalOrExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLogicalOrExpressionAccess().getGroup()); }
		(rule__LogicalOrExpression__Group__0)
		{ after(grammarAccess.getLogicalOrExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOpOr
entryRuleOpOr
:
{ before(grammarAccess.getOpOrRule()); }
	 ruleOpOr
{ after(grammarAccess.getOpOrRule()); } 
	 EOF 
;

// Rule OpOr
ruleOpOr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOpOrAccess().getVerticalLineVerticalLineKeyword()); }
		'||'
		{ after(grammarAccess.getOpOrAccess().getVerticalLineVerticalLineKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLogicalAndExpression
entryRuleLogicalAndExpression
:
{ before(grammarAccess.getLogicalAndExpressionRule()); }
	 ruleLogicalAndExpression
{ after(grammarAccess.getLogicalAndExpressionRule()); } 
	 EOF 
;

// Rule LogicalAndExpression
ruleLogicalAndExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLogicalAndExpressionAccess().getGroup()); }
		(rule__LogicalAndExpression__Group__0)
		{ after(grammarAccess.getLogicalAndExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOpAnd
entryRuleOpAnd
:
{ before(grammarAccess.getOpAndRule()); }
	 ruleOpAnd
{ after(grammarAccess.getOpAndRule()); } 
	 EOF 
;

// Rule OpAnd
ruleOpAnd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOpAndAccess().getAmpersandAmpersandKeyword()); }
		'&&'
		{ after(grammarAccess.getOpAndAccess().getAmpersandAmpersandKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInclusiveOrExpression
entryRuleInclusiveOrExpression
:
{ before(grammarAccess.getInclusiveOrExpressionRule()); }
	 ruleInclusiveOrExpression
{ after(grammarAccess.getInclusiveOrExpressionRule()); } 
	 EOF 
;

// Rule InclusiveOrExpression
ruleInclusiveOrExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInclusiveOrExpressionAccess().getGroup()); }
		(rule__InclusiveOrExpression__Group__0)
		{ after(grammarAccess.getInclusiveOrExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExclusiveOrExpression
entryRuleExclusiveOrExpression
:
{ before(grammarAccess.getExclusiveOrExpressionRule()); }
	 ruleExclusiveOrExpression
{ after(grammarAccess.getExclusiveOrExpressionRule()); } 
	 EOF 
;

// Rule ExclusiveOrExpression
ruleExclusiveOrExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExclusiveOrExpressionAccess().getGroup()); }
		(rule__ExclusiveOrExpression__Group__0)
		{ after(grammarAccess.getExclusiveOrExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAndExpression
entryRuleAndExpression
:
{ before(grammarAccess.getAndExpressionRule()); }
	 ruleAndExpression
{ after(grammarAccess.getAndExpressionRule()); } 
	 EOF 
;

// Rule AndExpression
ruleAndExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAndExpressionAccess().getGroup()); }
		(rule__AndExpression__Group__0)
		{ after(grammarAccess.getAndExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEqualityExpression
entryRuleEqualityExpression
:
{ before(grammarAccess.getEqualityExpressionRule()); }
	 ruleEqualityExpression
{ after(grammarAccess.getEqualityExpressionRule()); } 
	 EOF 
;

// Rule EqualityExpression
ruleEqualityExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEqualityExpressionAccess().getGroup()); }
		(rule__EqualityExpression__Group__0)
		{ after(grammarAccess.getEqualityExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOpEqual
entryRuleOpEqual
:
{ before(grammarAccess.getOpEqualRule()); }
	 ruleOpEqual
{ after(grammarAccess.getOpEqualRule()); } 
	 EOF 
;

// Rule OpEqual
ruleOpEqual 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOpEqualAccess().getAlternatives()); }
		(rule__OpEqual__Alternatives)
		{ after(grammarAccess.getOpEqualAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelationalExpression
entryRuleRelationalExpression
:
{ before(grammarAccess.getRelationalExpressionRule()); }
	 ruleRelationalExpression
{ after(grammarAccess.getRelationalExpressionRule()); } 
	 EOF 
;

// Rule RelationalExpression
ruleRelationalExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationalExpressionAccess().getGroup()); }
		(rule__RelationalExpression__Group__0)
		{ after(grammarAccess.getRelationalExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOpRel
entryRuleOpRel
:
{ before(grammarAccess.getOpRelRule()); }
	 ruleOpRel
{ after(grammarAccess.getOpRelRule()); } 
	 EOF 
;

// Rule OpRel
ruleOpRel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOpRelAccess().getAlternatives()); }
		(rule__OpRel__Alternatives)
		{ after(grammarAccess.getOpRelAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleShiftExpression
entryRuleShiftExpression
:
{ before(grammarAccess.getShiftExpressionRule()); }
	 ruleShiftExpression
{ after(grammarAccess.getShiftExpressionRule()); } 
	 EOF 
;

// Rule ShiftExpression
ruleShiftExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getShiftExpressionAccess().getGroup()); }
		(rule__ShiftExpression__Group__0)
		{ after(grammarAccess.getShiftExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOpShift
entryRuleOpShift
:
{ before(grammarAccess.getOpShiftRule()); }
	 ruleOpShift
{ after(grammarAccess.getOpShiftRule()); } 
	 EOF 
;

// Rule OpShift
ruleOpShift 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOpShiftAccess().getAlternatives()); }
		(rule__OpShift__Alternatives)
		{ after(grammarAccess.getOpShiftAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAdditiveExpression
entryRuleAdditiveExpression
:
{ before(grammarAccess.getAdditiveExpressionRule()); }
	 ruleAdditiveExpression
{ after(grammarAccess.getAdditiveExpressionRule()); } 
	 EOF 
;

// Rule AdditiveExpression
ruleAdditiveExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAdditiveExpressionAccess().getGroup()); }
		(rule__AdditiveExpression__Group__0)
		{ after(grammarAccess.getAdditiveExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOpAdd
entryRuleOpAdd
:
{ before(grammarAccess.getOpAddRule()); }
	 ruleOpAdd
{ after(grammarAccess.getOpAddRule()); } 
	 EOF 
;

// Rule OpAdd
ruleOpAdd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOpAddAccess().getAlternatives()); }
		(rule__OpAdd__Alternatives)
		{ after(grammarAccess.getOpAddAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultiplicativeExpression
entryRuleMultiplicativeExpression
:
{ before(grammarAccess.getMultiplicativeExpressionRule()); }
	 ruleMultiplicativeExpression
{ after(grammarAccess.getMultiplicativeExpressionRule()); } 
	 EOF 
;

// Rule MultiplicativeExpression
ruleMultiplicativeExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultiplicativeExpressionAccess().getGroup()); }
		(rule__MultiplicativeExpression__Group__0)
		{ after(grammarAccess.getMultiplicativeExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOpMult
entryRuleOpMult
:
{ before(grammarAccess.getOpMultRule()); }
	 ruleOpMult
{ after(grammarAccess.getOpMultRule()); } 
	 EOF 
;

// Rule OpMult
ruleOpMult 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOpMultAccess().getAlternatives()); }
		(rule__OpMult__Alternatives)
		{ after(grammarAccess.getOpMultAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnaryExpression
entryRuleUnaryExpression
:
{ before(grammarAccess.getUnaryExpressionRule()); }
	 ruleUnaryExpression
{ after(grammarAccess.getUnaryExpressionRule()); } 
	 EOF 
;

// Rule UnaryExpression
ruleUnaryExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getAlternatives()); }
		(rule__UnaryExpression__Alternatives)
		{ after(grammarAccess.getUnaryExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCastRule
entryRuleCastRule
:
{ before(grammarAccess.getCastRuleRule()); }
	 ruleCastRule
{ after(grammarAccess.getCastRuleRule()); } 
	 EOF 
;

// Rule CastRule
ruleCastRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCastRuleAccess().getGroup()); }
		(rule__CastRule__Group__0)
		{ after(grammarAccess.getCastRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOpInc
entryRuleOpInc
:
{ before(grammarAccess.getOpIncRule()); }
	 ruleOpInc
{ after(grammarAccess.getOpIncRule()); } 
	 EOF 
;

// Rule OpInc
ruleOpInc 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOpIncAccess().getAlternatives()); }
		(rule__OpInc__Alternatives)
		{ after(grammarAccess.getOpIncAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOpUnary
entryRuleOpUnary
:
{ before(grammarAccess.getOpUnaryRule()); }
	 ruleOpUnary
{ after(grammarAccess.getOpUnaryRule()); } 
	 EOF 
;

// Rule OpUnary
ruleOpUnary 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOpUnaryAccess().getAlternatives()); }
		(rule__OpUnary__Alternatives)
		{ after(grammarAccess.getOpUnaryAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePostfixExpression
entryRulePostfixExpression
:
{ before(grammarAccess.getPostfixExpressionRule()); }
	 rulePostfixExpression
{ after(grammarAccess.getPostfixExpressionRule()); } 
	 EOF 
;

// Rule PostfixExpression
rulePostfixExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPostfixExpressionAccess().getGroup()); }
		(rule__PostfixExpression__Group__0)
		{ after(grammarAccess.getPostfixExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePostfixExpression2
entryRulePostfixExpression2
:
{ before(grammarAccess.getPostfixExpression2Rule()); }
	 rulePostfixExpression2
{ after(grammarAccess.getPostfixExpression2Rule()); } 
	 EOF 
;

// Rule PostfixExpression2
rulePostfixExpression2 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPostfixExpression2Access().getAlternatives()); }
		(rule__PostfixExpression2__Alternatives)
		{ after(grammarAccess.getPostfixExpression2Access().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOpPtr
entryRuleOpPtr
:
{ before(grammarAccess.getOpPtrRule()); }
	 ruleOpPtr
{ after(grammarAccess.getOpPtrRule()); } 
	 EOF 
;

// Rule OpPtr
ruleOpPtr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOpPtrAccess().getHyphenMinusGreaterThanSignKeyword()); }
		'->'
		{ after(grammarAccess.getOpPtrAccess().getHyphenMinusGreaterThanSignKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePostfixType
entryRulePostfixType
:
{ before(grammarAccess.getPostfixTypeRule()); }
	 rulePostfixType
{ after(grammarAccess.getPostfixTypeRule()); } 
	 EOF 
;

// Rule PostfixType
rulePostfixType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPostfixTypeAccess().getGroup()); }
		(rule__PostfixType__Group__0)
		{ after(grammarAccess.getPostfixTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression
:
{ before(grammarAccess.getPrimaryExpressionRule()); }
	 rulePrimaryExpression
{ after(grammarAccess.getPrimaryExpressionRule()); } 
	 EOF 
;

// Rule PrimaryExpression
rulePrimaryExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
		(rule__PrimaryExpression__Alternatives)
		{ after(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArgumentExpressionList
entryRuleArgumentExpressionList
:
{ before(grammarAccess.getArgumentExpressionListRule()); }
	 ruleArgumentExpressionList
{ after(grammarAccess.getArgumentExpressionListRule()); } 
	 EOF 
;

// Rule ArgumentExpressionList
ruleArgumentExpressionList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArgumentExpressionListAccess().getGroup()); }
		(rule__ArgumentExpressionList__Group__0)
		{ after(grammarAccess.getArgumentExpressionListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstant
entryRuleConstant
:
{ before(grammarAccess.getConstantRule()); }
	 ruleConstant
{ after(grammarAccess.getConstantRule()); } 
	 EOF 
;

// Rule Constant
ruleConstant 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstantAccess().getAlternatives()); }
		(rule__Constant__Alternatives)
		{ after(grammarAccess.getConstantAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnumerationConstant
entryRuleEnumerationConstant
:
{ before(grammarAccess.getEnumerationConstantRule()); }
	 ruleEnumerationConstant
{ after(grammarAccess.getEnumerationConstantRule()); } 
	 EOF 
;

// Rule EnumerationConstant
ruleEnumerationConstant 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnumerationConstantAccess().get_IDAssignment()); }
		(rule__EnumerationConstant___IDAssignment)
		{ after(grammarAccess.getEnumerationConstantAccess().get_IDAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGenericSelection
entryRuleGenericSelection
:
{ before(grammarAccess.getGenericSelectionRule()); }
	 ruleGenericSelection
{ after(grammarAccess.getGenericSelectionRule()); } 
	 EOF 
;

// Rule GenericSelection
ruleGenericSelection 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGenericSelectionAccess().getGroup()); }
		(rule__GenericSelection__Group__0)
		{ after(grammarAccess.getGenericSelectionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGenericAssocList
entryRuleGenericAssocList
:
{ before(grammarAccess.getGenericAssocListRule()); }
	 ruleGenericAssocList
{ after(grammarAccess.getGenericAssocListRule()); } 
	 EOF 
;

// Rule GenericAssocList
ruleGenericAssocList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGenericAssocListAccess().getGroup()); }
		(rule__GenericAssocList__Group__0)
		{ after(grammarAccess.getGenericAssocListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGenericAssociation
entryRuleGenericAssociation
:
{ before(grammarAccess.getGenericAssociationRule()); }
	 ruleGenericAssociation
{ after(grammarAccess.getGenericAssociationRule()); } 
	 EOF 
;

// Rule GenericAssociation
ruleGenericAssociation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGenericAssociationAccess().getAlternatives()); }
		(rule__GenericAssociation__Alternatives)
		{ after(grammarAccess.getGenericAssociationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeclaration
entryRuleDeclaration
:
{ before(grammarAccess.getDeclarationRule()); }
	 ruleDeclaration
{ after(grammarAccess.getDeclarationRule()); } 
	 EOF 
;

// Rule Declaration
ruleDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeclarationAccess().getAlternatives()); }
		(rule__Declaration__Alternatives)
		{ after(grammarAccess.getDeclarationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeclarationSpecifier
entryRuleDeclarationSpecifier
:
{ before(grammarAccess.getDeclarationSpecifierRule()); }
	 ruleDeclarationSpecifier
{ after(grammarAccess.getDeclarationSpecifierRule()); } 
	 EOF 
;

// Rule DeclarationSpecifier
ruleDeclarationSpecifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeclarationSpecifierAccess().getAlternatives()); }
		(rule__DeclarationSpecifier__Alternatives)
		{ after(grammarAccess.getDeclarationSpecifierAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInitDeclaratorList
entryRuleInitDeclaratorList
:
{ before(grammarAccess.getInitDeclaratorListRule()); }
	 ruleInitDeclaratorList
{ after(grammarAccess.getInitDeclaratorListRule()); } 
	 EOF 
;

// Rule InitDeclaratorList
ruleInitDeclaratorList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInitDeclaratorListAccess().getGroup()); }
		(rule__InitDeclaratorList__Group__0)
		{ after(grammarAccess.getInitDeclaratorListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInitDeclarator
entryRuleInitDeclarator
:
{ before(grammarAccess.getInitDeclaratorRule()); }
	 ruleInitDeclarator
{ after(grammarAccess.getInitDeclaratorRule()); } 
	 EOF 
;

// Rule InitDeclarator
ruleInitDeclarator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInitDeclaratorAccess().getGroup()); }
		(rule__InitDeclarator__Group__0)
		{ after(grammarAccess.getInitDeclaratorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStorageClassSpecifier
entryRuleStorageClassSpecifier
:
{ before(grammarAccess.getStorageClassSpecifierRule()); }
	 ruleStorageClassSpecifier
{ after(grammarAccess.getStorageClassSpecifierRule()); } 
	 EOF 
;

// Rule StorageClassSpecifier
ruleStorageClassSpecifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStorageClassSpecifierAccess().getAlternatives()); }
		(rule__StorageClassSpecifier__Alternatives)
		{ after(grammarAccess.getStorageClassSpecifierAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeSpecifier
entryRuleTypeSpecifier
:
{ before(grammarAccess.getTypeSpecifierRule()); }
	 ruleTypeSpecifier
{ after(grammarAccess.getTypeSpecifierRule()); } 
	 EOF 
;

// Rule TypeSpecifier
ruleTypeSpecifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeSpecifierAccess().getGroup()); }
		(rule__TypeSpecifier__Group__0)
		{ after(grammarAccess.getTypeSpecifierAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypes
entryRuleTypes
:
{ before(grammarAccess.getTypesRule()); }
	 ruleTypes
{ after(grammarAccess.getTypesRule()); } 
	 EOF 
;

// Rule Types
ruleTypes 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypesAccess().getAlternatives()); }
		(rule__Types__Alternatives)
		{ after(grammarAccess.getTypesAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStructOrUnionSpecifier
entryRuleStructOrUnionSpecifier
:
{ before(grammarAccess.getStructOrUnionSpecifierRule()); }
	 ruleStructOrUnionSpecifier
{ after(grammarAccess.getStructOrUnionSpecifierRule()); } 
	 EOF 
;

// Rule StructOrUnionSpecifier
ruleStructOrUnionSpecifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStructOrUnionSpecifierAccess().getGroup()); }
		(rule__StructOrUnionSpecifier__Group__0)
		{ after(grammarAccess.getStructOrUnionSpecifierAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStructOrUnion
entryRuleStructOrUnion
:
{ before(grammarAccess.getStructOrUnionRule()); }
	 ruleStructOrUnion
{ after(grammarAccess.getStructOrUnionRule()); } 
	 EOF 
;

// Rule StructOrUnion
ruleStructOrUnion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStructOrUnionAccess().getAlternatives()); }
		(rule__StructOrUnion__Alternatives)
		{ after(grammarAccess.getStructOrUnionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStructDeclarationList
entryRuleStructDeclarationList
:
{ before(grammarAccess.getStructDeclarationListRule()); }
	 ruleStructDeclarationList
{ after(grammarAccess.getStructDeclarationListRule()); } 
	 EOF 
;

// Rule StructDeclarationList
ruleStructDeclarationList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		(
			{ before(grammarAccess.getStructDeclarationListAccess().getStructDeclarationAssignment()); }
			(rule__StructDeclarationList__StructDeclarationAssignment)
			{ after(grammarAccess.getStructDeclarationListAccess().getStructDeclarationAssignment()); }
		)
		(
			{ before(grammarAccess.getStructDeclarationListAccess().getStructDeclarationAssignment()); }
			(rule__StructDeclarationList__StructDeclarationAssignment)*
			{ after(grammarAccess.getStructDeclarationListAccess().getStructDeclarationAssignment()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStructDeclaration
entryRuleStructDeclaration
:
{ before(grammarAccess.getStructDeclarationRule()); }
	 ruleStructDeclaration
{ after(grammarAccess.getStructDeclarationRule()); } 
	 EOF 
;

// Rule StructDeclaration
ruleStructDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStructDeclarationAccess().getAlternatives()); }
		(rule__StructDeclaration__Alternatives)
		{ after(grammarAccess.getStructDeclarationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSpecifierQualifierList
entryRuleSpecifierQualifierList
:
{ before(grammarAccess.getSpecifierQualifierListRule()); }
	 ruleSpecifierQualifierList
{ after(grammarAccess.getSpecifierQualifierListRule()); } 
	 EOF 
;

// Rule SpecifierQualifierList
ruleSpecifierQualifierList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSpecifierQualifierListAccess().getGroup()); }
		(rule__SpecifierQualifierList__Group__0)
		{ after(grammarAccess.getSpecifierQualifierListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStructDeclaratorList
entryRuleStructDeclaratorList
:
{ before(grammarAccess.getStructDeclaratorListRule()); }
	 ruleStructDeclaratorList
{ after(grammarAccess.getStructDeclaratorListRule()); } 
	 EOF 
;

// Rule StructDeclaratorList
ruleStructDeclaratorList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStructDeclaratorListAccess().getGroup()); }
		(rule__StructDeclaratorList__Group__0)
		{ after(grammarAccess.getStructDeclaratorListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStructDeclarator
entryRuleStructDeclarator
:
{ before(grammarAccess.getStructDeclaratorRule()); }
	 ruleStructDeclarator
{ after(grammarAccess.getStructDeclaratorRule()); } 
	 EOF 
;

// Rule StructDeclarator
ruleStructDeclarator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStructDeclaratorAccess().getAlternatives()); }
		(rule__StructDeclarator__Alternatives)
		{ after(grammarAccess.getStructDeclaratorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnumSpecifier
entryRuleEnumSpecifier
:
{ before(grammarAccess.getEnumSpecifierRule()); }
	 ruleEnumSpecifier
{ after(grammarAccess.getEnumSpecifierRule()); } 
	 EOF 
;

// Rule EnumSpecifier
ruleEnumSpecifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnumSpecifierAccess().getGroup()); }
		(rule__EnumSpecifier__Group__0)
		{ after(grammarAccess.getEnumSpecifierAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnumeratorList
entryRuleEnumeratorList
:
{ before(grammarAccess.getEnumeratorListRule()); }
	 ruleEnumeratorList
{ after(grammarAccess.getEnumeratorListRule()); } 
	 EOF 
;

// Rule EnumeratorList
ruleEnumeratorList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnumeratorListAccess().getGroup()); }
		(rule__EnumeratorList__Group__0)
		{ after(grammarAccess.getEnumeratorListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnumerator
entryRuleEnumerator
:
{ before(grammarAccess.getEnumeratorRule()); }
	 ruleEnumerator
{ after(grammarAccess.getEnumeratorRule()); } 
	 EOF 
;

// Rule Enumerator
ruleEnumerator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnumeratorAccess().getGroup()); }
		(rule__Enumerator__Group__0)
		{ after(grammarAccess.getEnumeratorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAtomicTypeSpecifier
entryRuleAtomicTypeSpecifier
:
{ before(grammarAccess.getAtomicTypeSpecifierRule()); }
	 ruleAtomicTypeSpecifier
{ after(grammarAccess.getAtomicTypeSpecifierRule()); } 
	 EOF 
;

// Rule AtomicTypeSpecifier
ruleAtomicTypeSpecifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAtomicTypeSpecifierAccess().getGroup()); }
		(rule__AtomicTypeSpecifier__Group__0)
		{ after(grammarAccess.getAtomicTypeSpecifierAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeQualifier
entryRuleTypeQualifier
:
{ before(grammarAccess.getTypeQualifierRule()); }
	 ruleTypeQualifier
{ after(grammarAccess.getTypeQualifierRule()); } 
	 EOF 
;

// Rule TypeQualifier
ruleTypeQualifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeQualifierAccess().getAlternatives()); }
		(rule__TypeQualifier__Alternatives)
		{ after(grammarAccess.getTypeQualifierAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionSpecifier
entryRuleFunctionSpecifier
:
{ before(grammarAccess.getFunctionSpecifierRule()); }
	 ruleFunctionSpecifier
{ after(grammarAccess.getFunctionSpecifierRule()); } 
	 EOF 
;

// Rule FunctionSpecifier
ruleFunctionSpecifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionSpecifierAccess().getAlternatives()); }
		(rule__FunctionSpecifier__Alternatives)
		{ after(grammarAccess.getFunctionSpecifierAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAlignmentSpecifier
entryRuleAlignmentSpecifier
:
{ before(grammarAccess.getAlignmentSpecifierRule()); }
	 ruleAlignmentSpecifier
{ after(grammarAccess.getAlignmentSpecifierRule()); } 
	 EOF 
;

// Rule AlignmentSpecifier
ruleAlignmentSpecifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAlignmentSpecifierAccess().getGroup()); }
		(rule__AlignmentSpecifier__Group__0)
		{ after(grammarAccess.getAlignmentSpecifierAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAlignas
entryRuleAlignas
:
{ before(grammarAccess.getAlignasRule()); }
	 ruleAlignas
{ after(grammarAccess.getAlignasRule()); } 
	 EOF 
;

// Rule Alignas
ruleAlignas 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAlignasAccess().get_AlignasKeyword()); }
		'_Alignas'
		{ after(grammarAccess.getAlignasAccess().get_AlignasKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeclarator
entryRuleDeclarator
:
{ before(grammarAccess.getDeclaratorRule()); }
	 ruleDeclarator
{ after(grammarAccess.getDeclaratorRule()); } 
	 EOF 
;

// Rule Declarator
ruleDeclarator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeclaratorAccess().getGroup()); }
		(rule__Declarator__Group__0)
		{ after(grammarAccess.getDeclaratorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDirectDeclarator
entryRuleDirectDeclarator
:
{ before(grammarAccess.getDirectDeclaratorRule()); }
	 ruleDirectDeclarator
{ after(grammarAccess.getDirectDeclaratorRule()); } 
	 EOF 
;

// Rule DirectDeclarator
ruleDirectDeclarator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDirectDeclaratorAccess().getGroup()); }
		(rule__DirectDeclarator__Group__0)
		{ after(grammarAccess.getDirectDeclaratorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDirectDeclarator2
entryRuleDirectDeclarator2
:
{ before(grammarAccess.getDirectDeclarator2Rule()); }
	 ruleDirectDeclarator2
{ after(grammarAccess.getDirectDeclarator2Rule()); } 
	 EOF 
;

// Rule DirectDeclarator2
ruleDirectDeclarator2 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDirectDeclarator2Access().getAlternatives()); }
		(rule__DirectDeclarator2__Alternatives)
		{ after(grammarAccess.getDirectDeclarator2Access().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePointer
entryRulePointer
:
{ before(grammarAccess.getPointerRule()); }
	 rulePointer
{ after(grammarAccess.getPointerRule()); } 
	 EOF 
;

// Rule Pointer
rulePointer 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPointerAccess().getGroup()); }
		(rule__Pointer__Group__0)
		{ after(grammarAccess.getPointerAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeQualifierList
entryRuleTypeQualifierList
:
{ before(grammarAccess.getTypeQualifierListRule()); }
	 ruleTypeQualifierList
{ after(grammarAccess.getTypeQualifierListRule()); } 
	 EOF 
;

// Rule TypeQualifierList
ruleTypeQualifierList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		(
			{ before(grammarAccess.getTypeQualifierListAccess().getTypeQualListAssignment()); }
			(rule__TypeQualifierList__TypeQualListAssignment)
			{ after(grammarAccess.getTypeQualifierListAccess().getTypeQualListAssignment()); }
		)
		(
			{ before(grammarAccess.getTypeQualifierListAccess().getTypeQualListAssignment()); }
			(rule__TypeQualifierList__TypeQualListAssignment)*
			{ after(grammarAccess.getTypeQualifierListAccess().getTypeQualListAssignment()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameterTypeList
entryRuleParameterTypeList
:
{ before(grammarAccess.getParameterTypeListRule()); }
	 ruleParameterTypeList
{ after(grammarAccess.getParameterTypeListRule()); } 
	 EOF 
;

// Rule ParameterTypeList
ruleParameterTypeList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterTypeListAccess().getGroup()); }
		(rule__ParameterTypeList__Group__0)
		{ after(grammarAccess.getParameterTypeListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameterList
entryRuleParameterList
:
{ before(grammarAccess.getParameterListRule()); }
	 ruleParameterList
{ after(grammarAccess.getParameterListRule()); } 
	 EOF 
;

// Rule ParameterList
ruleParameterList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterListAccess().getGroup()); }
		(rule__ParameterList__Group__0)
		{ after(grammarAccess.getParameterListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameterDeclaration
entryRuleParameterDeclaration
:
{ before(grammarAccess.getParameterDeclarationRule()); }
	 ruleParameterDeclaration
{ after(grammarAccess.getParameterDeclarationRule()); } 
	 EOF 
;

// Rule ParameterDeclaration
ruleParameterDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterDeclarationAccess().getGroup()); }
		(rule__ParameterDeclaration__Group__0)
		{ after(grammarAccess.getParameterDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIdentifierList
entryRuleIdentifierList
:
{ before(grammarAccess.getIdentifierListRule()); }
	 ruleIdentifierList
{ after(grammarAccess.getIdentifierListRule()); } 
	 EOF 
;

// Rule IdentifierList
ruleIdentifierList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIdentifierListAccess().getGroup()); }
		(rule__IdentifierList__Group__0)
		{ after(grammarAccess.getIdentifierListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeName
entryRuleTypeName
:
{ before(grammarAccess.getTypeNameRule()); }
	 ruleTypeName
{ after(grammarAccess.getTypeNameRule()); } 
	 EOF 
;

// Rule TypeName
ruleTypeName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeNameAccess().getGroup()); }
		(rule__TypeName__Group__0)
		{ after(grammarAccess.getTypeNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAbstractDeclarator
entryRuleAbstractDeclarator
:
{ before(grammarAccess.getAbstractDeclaratorRule()); }
	 ruleAbstractDeclarator
{ after(grammarAccess.getAbstractDeclaratorRule()); } 
	 EOF 
;

// Rule AbstractDeclarator
ruleAbstractDeclarator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAbstractDeclaratorAccess().getAlternatives()); }
		(rule__AbstractDeclarator__Alternatives)
		{ after(grammarAccess.getAbstractDeclaratorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDirectAbstractDeclarator
entryRuleDirectAbstractDeclarator
:
{ before(grammarAccess.getDirectAbstractDeclaratorRule()); }
	 ruleDirectAbstractDeclarator
{ after(grammarAccess.getDirectAbstractDeclaratorRule()); } 
	 EOF 
;

// Rule DirectAbstractDeclarator
ruleDirectAbstractDeclarator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDirectAbstractDeclaratorAccess().getGroup()); }
		(rule__DirectAbstractDeclarator__Group__0)
		{ after(grammarAccess.getDirectAbstractDeclaratorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDirectAbstractDeclarator2
entryRuleDirectAbstractDeclarator2
:
{ before(grammarAccess.getDirectAbstractDeclarator2Rule()); }
	 ruleDirectAbstractDeclarator2
{ after(grammarAccess.getDirectAbstractDeclarator2Rule()); } 
	 EOF 
;

// Rule DirectAbstractDeclarator2
ruleDirectAbstractDeclarator2 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDirectAbstractDeclarator2Access().getGroup()); }
		(rule__DirectAbstractDeclarator2__Group__0)
		{ after(grammarAccess.getDirectAbstractDeclarator2Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInitializer
entryRuleInitializer
:
{ before(grammarAccess.getInitializerRule()); }
	 ruleInitializer
{ after(grammarAccess.getInitializerRule()); } 
	 EOF 
;

// Rule Initializer
ruleInitializer 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInitializerAccess().getAlternatives()); }
		(rule__Initializer__Alternatives)
		{ after(grammarAccess.getInitializerAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInitializerList
entryRuleInitializerList
:
{ before(grammarAccess.getInitializerListRule()); }
	 ruleInitializerList
{ after(grammarAccess.getInitializerListRule()); } 
	 EOF 
;

// Rule InitializerList
ruleInitializerList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInitializerListAccess().getGroup()); }
		(rule__InitializerList__Group__0)
		{ after(grammarAccess.getInitializerListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInitializerList2
entryRuleInitializerList2
:
{ before(grammarAccess.getInitializerList2Rule()); }
	 ruleInitializerList2
{ after(grammarAccess.getInitializerList2Rule()); } 
	 EOF 
;

// Rule InitializerList2
ruleInitializerList2 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInitializerList2Access().getGroup()); }
		(rule__InitializerList2__Group__0)
		{ after(grammarAccess.getInitializerList2Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDesignation
entryRuleDesignation
:
{ before(grammarAccess.getDesignationRule()); }
	 ruleDesignation
{ after(grammarAccess.getDesignationRule()); } 
	 EOF 
;

// Rule Designation
ruleDesignation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDesignationAccess().getGroup()); }
		(rule__Designation__Group__0)
		{ after(grammarAccess.getDesignationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDesignatorList
entryRuleDesignatorList
:
{ before(grammarAccess.getDesignatorListRule()); }
	 ruleDesignatorList
{ after(grammarAccess.getDesignatorListRule()); } 
	 EOF 
;

// Rule DesignatorList
ruleDesignatorList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDesignatorListAccess().getDesignatorListAssignment()); }
		(rule__DesignatorList__DesignatorListAssignment)
		{ after(grammarAccess.getDesignatorListAccess().getDesignatorListAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDesignator
entryRuleDesignator
:
{ before(grammarAccess.getDesignatorRule()); }
	 ruleDesignator
{ after(grammarAccess.getDesignatorRule()); } 
	 EOF 
;

// Rule Designator
ruleDesignator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDesignatorAccess().getAlternatives()); }
		(rule__Designator__Alternatives)
		{ after(grammarAccess.getDesignatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStaticAssertDeclaration
entryRuleStaticAssertDeclaration
:
{ before(grammarAccess.getStaticAssertDeclarationRule()); }
	 ruleStaticAssertDeclaration
{ after(grammarAccess.getStaticAssertDeclarationRule()); } 
	 EOF 
;

// Rule StaticAssertDeclaration
ruleStaticAssertDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStaticAssertDeclarationAccess().getGroup()); }
		(rule__StaticAssertDeclaration__Group__0)
		{ after(grammarAccess.getStaticAssertDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatement
entryRuleStatement
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementAccess().getAlternatives()); }
		(rule__Statement__Alternatives)
		{ after(grammarAccess.getStatementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLabeledStatement
entryRuleLabeledStatement
:
{ before(grammarAccess.getLabeledStatementRule()); }
	 ruleLabeledStatement
{ after(grammarAccess.getLabeledStatementRule()); } 
	 EOF 
;

// Rule LabeledStatement
ruleLabeledStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLabeledStatementAccess().getAlternatives()); }
		(rule__LabeledStatement__Alternatives)
		{ after(grammarAccess.getLabeledStatementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCompoundStatement
entryRuleCompoundStatement
:
{ before(grammarAccess.getCompoundStatementRule()); }
	 ruleCompoundStatement
{ after(grammarAccess.getCompoundStatementRule()); } 
	 EOF 
;

// Rule CompoundStatement
ruleCompoundStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCompoundStatementAccess().getGroup()); }
		(rule__CompoundStatement__Group__0)
		{ after(grammarAccess.getCompoundStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBlockItem
entryRuleBlockItem
:
{ before(grammarAccess.getBlockItemRule()); }
	 ruleBlockItem
{ after(grammarAccess.getBlockItemRule()); } 
	 EOF 
;

// Rule BlockItem
ruleBlockItem 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBlockItemAccess().getAlternatives()); }
		(rule__BlockItem__Alternatives)
		{ after(grammarAccess.getBlockItemAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionStatement
entryRuleExpressionStatement
:
{ before(grammarAccess.getExpressionStatementRule()); }
	 ruleExpressionStatement
{ after(grammarAccess.getExpressionStatementRule()); } 
	 EOF 
;

// Rule ExpressionStatement
ruleExpressionStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionStatementAccess().getGroup()); }
		(rule__ExpressionStatement__Group__0)
		{ after(grammarAccess.getExpressionStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSelectionStatement
entryRuleSelectionStatement
:
{ before(grammarAccess.getSelectionStatementRule()); }
	 ruleSelectionStatement
{ after(grammarAccess.getSelectionStatementRule()); } 
	 EOF 
;

// Rule SelectionStatement
ruleSelectionStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSelectionStatementAccess().getAlternatives()); }
		(rule__SelectionStatement__Alternatives)
		{ after(grammarAccess.getSelectionStatementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIterationStatement
entryRuleIterationStatement
:
{ before(grammarAccess.getIterationStatementRule()); }
	 ruleIterationStatement
{ after(grammarAccess.getIterationStatementRule()); } 
	 EOF 
;

// Rule IterationStatement
ruleIterationStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIterationStatementAccess().getAlternatives()); }
		(rule__IterationStatement__Alternatives)
		{ after(grammarAccess.getIterationStatementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIfStatement
entryRuleIfStatement
:
{ before(grammarAccess.getIfStatementRule()); }
	 ruleIfStatement
{ after(grammarAccess.getIfStatementRule()); } 
	 EOF 
;

// Rule IfStatement
ruleIfStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIfStatementAccess().getGroup()); }
		(rule__IfStatement__Group__0)
		{ after(grammarAccess.getIfStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSwitchStatement
entryRuleSwitchStatement
:
{ before(grammarAccess.getSwitchStatementRule()); }
	 ruleSwitchStatement
{ after(grammarAccess.getSwitchStatementRule()); } 
	 EOF 
;

// Rule SwitchStatement
ruleSwitchStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSwitchStatementAccess().getGroup()); }
		(rule__SwitchStatement__Group__0)
		{ after(grammarAccess.getSwitchStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleForLoop
entryRuleForLoop
:
{ before(grammarAccess.getForLoopRule()); }
	 ruleForLoop
{ after(grammarAccess.getForLoopRule()); } 
	 EOF 
;

// Rule ForLoop
ruleForLoop 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForLoopAccess().getGroup()); }
		(rule__ForLoop__Group__0)
		{ after(grammarAccess.getForLoopAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWhileLoop
entryRuleWhileLoop
:
{ before(grammarAccess.getWhileLoopRule()); }
	 ruleWhileLoop
{ after(grammarAccess.getWhileLoopRule()); } 
	 EOF 
;

// Rule WhileLoop
ruleWhileLoop 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWhileLoopAccess().getGroup()); }
		(rule__WhileLoop__Group__0)
		{ after(grammarAccess.getWhileLoopAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDoWhileLoop
entryRuleDoWhileLoop
:
{ before(grammarAccess.getDoWhileLoopRule()); }
	 ruleDoWhileLoop
{ after(grammarAccess.getDoWhileLoopRule()); } 
	 EOF 
;

// Rule DoWhileLoop
ruleDoWhileLoop 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDoWhileLoopAccess().getGroup()); }
		(rule__DoWhileLoop__Group__0)
		{ after(grammarAccess.getDoWhileLoopAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJumpStatement
entryRuleJumpStatement
:
{ before(grammarAccess.getJumpStatementRule()); }
	 ruleJumpStatement
{ after(grammarAccess.getJumpStatementRule()); } 
	 EOF 
;

// Rule JumpStatement
ruleJumpStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJumpStatementAccess().getGroup()); }
		(rule__JumpStatement__Group__0)
		{ after(grammarAccess.getJumpStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCReturn
entryRuleCReturn
:
{ before(grammarAccess.getCReturnRule()); }
	 ruleCReturn
{ after(grammarAccess.getCReturnRule()); } 
	 EOF 
;

// Rule CReturn
ruleCReturn 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCReturnAccess().getGroup()); }
		(rule__CReturn__Group__0)
		{ after(grammarAccess.getCReturnAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalDeclaration__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExternalDeclarationAccess().getFunctionDefinitionParserRuleCall_0()); }
		(ruleFunctionDefinition)
		{ after(grammarAccess.getExternalDeclarationAccess().getFunctionDefinitionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getExternalDeclarationAccess().getDeclarationParserRuleCall_1()); }
		ruleDeclaration
		{ after(grammarAccess.getExternalDeclarationAccess().getDeclarationParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpAssign__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOpAssignAccess().getEqualsSignKeyword_0()); }
		'='
		{ after(grammarAccess.getOpAssignAccess().getEqualsSignKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getOpAssignAccess().getPlusSignEqualsSignKeyword_1()); }
		'+='
		{ after(grammarAccess.getOpAssignAccess().getPlusSignEqualsSignKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getOpAssignAccess().getHyphenMinusEqualsSignKeyword_2()); }
		'-='
		{ after(grammarAccess.getOpAssignAccess().getHyphenMinusEqualsSignKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getOpAssignAccess().getAsteriskEqualsSignKeyword_3()); }
		'*='
		{ after(grammarAccess.getOpAssignAccess().getAsteriskEqualsSignKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getOpAssignAccess().getSolidusEqualsSignKeyword_4()); }
		'/='
		{ after(grammarAccess.getOpAssignAccess().getSolidusEqualsSignKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getOpAssignAccess().getPercentSignEqualsSignKeyword_5()); }
		'%='
		{ after(grammarAccess.getOpAssignAccess().getPercentSignEqualsSignKeyword_5()); }
	)
	|
	(
		{ before(grammarAccess.getOpAssignAccess().getAmpersandEqualsSignKeyword_6()); }
		'&='
		{ after(grammarAccess.getOpAssignAccess().getAmpersandEqualsSignKeyword_6()); }
	)
	|
	(
		{ before(grammarAccess.getOpAssignAccess().getVerticalLineEqualsSignKeyword_7()); }
		'|='
		{ after(grammarAccess.getOpAssignAccess().getVerticalLineEqualsSignKeyword_7()); }
	)
	|
	(
		{ before(grammarAccess.getOpAssignAccess().getGroup_8()); }
		(rule__OpAssign__Group_8__0)
		{ after(grammarAccess.getOpAssignAccess().getGroup_8()); }
	)
	|
	(
		{ before(grammarAccess.getOpAssignAccess().getGroup_9()); }
		(rule__OpAssign__Group_9__0)
		{ after(grammarAccess.getOpAssignAccess().getGroup_9()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpEqual__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOpEqualAccess().getEqualsSignEqualsSignKeyword_0()); }
		'=='
		{ after(grammarAccess.getOpEqualAccess().getEqualsSignEqualsSignKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getOpEqualAccess().getExclamationMarkEqualsSignKeyword_1()); }
		'!='
		{ after(grammarAccess.getOpEqualAccess().getExclamationMarkEqualsSignKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpRel__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOpRelAccess().getLessThanSignEqualsSignKeyword_0()); }
		'<='
		{ after(grammarAccess.getOpRelAccess().getLessThanSignEqualsSignKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getOpRelAccess().getGreaterThanSignEqualsSignKeyword_1()); }
		'>='
		{ after(grammarAccess.getOpRelAccess().getGreaterThanSignEqualsSignKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getOpRelAccess().getLessThanSignKeyword_2()); }
		'<'
		{ after(grammarAccess.getOpRelAccess().getLessThanSignKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getOpRelAccess().getGreaterThanSignKeyword_3()); }
		'>'
		{ after(grammarAccess.getOpRelAccess().getGreaterThanSignKeyword_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpShift__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOpShiftAccess().getLessThanSignLessThanSignKeyword_0()); }
		'<<'
		{ after(grammarAccess.getOpShiftAccess().getLessThanSignLessThanSignKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getOpShiftAccess().getGreaterThanSignGreaterThanSignKeyword_1()); }
		'>>'
		{ after(grammarAccess.getOpShiftAccess().getGreaterThanSignGreaterThanSignKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpAdd__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOpAddAccess().getPlusSignKeyword_0()); }
		'+'
		{ after(grammarAccess.getOpAddAccess().getPlusSignKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getOpAddAccess().getHyphenMinusKeyword_1()); }
		'-'
		{ after(grammarAccess.getOpAddAccess().getHyphenMinusKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpMult__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOpMultAccess().getAsteriskKeyword_0()); }
		'*'
		{ after(grammarAccess.getOpMultAccess().getAsteriskKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getOpMultAccess().getSolidusKeyword_1()); }
		'/'
		{ after(grammarAccess.getOpMultAccess().getSolidusKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getOpMultAccess().getPercentSignKeyword_2()); }
		'%'
		{ after(grammarAccess.getOpMultAccess().getPercentSignKeyword_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getPostExpAssignment_0()); }
		(rule__UnaryExpression__PostExpAssignment_0)
		{ after(grammarAccess.getUnaryExpressionAccess().getPostExpAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getGroup_1()); }
		(rule__UnaryExpression__Group_1__0)
		{ after(grammarAccess.getUnaryExpressionAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getCAssignment_1_0_0()); }
		(rule__UnaryExpression__CAssignment_1_0_0)
		{ after(grammarAccess.getUnaryExpressionAccess().getCAssignment_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getSizeofKeyword_1_0_1()); }
		'sizeof'
		{ after(grammarAccess.getUnaryExpressionAccess().getSizeofKeyword_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getOpUnaryParserRuleCall_1_0_2()); }
		ruleOpUnary
		{ after(grammarAccess.getUnaryExpressionAccess().getOpUnaryParserRuleCall_1_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getOpIncParserRuleCall_1_0_3()); }
		ruleOpInc
		{ after(grammarAccess.getUnaryExpressionAccess().getOpIncParserRuleCall_1_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryExpressionAccess().get_AlignofKeyword_1_0_4()); }
		'_Alignof'
		{ after(grammarAccess.getUnaryExpressionAccess().get_AlignofKeyword_1_0_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpInc__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOpIncAccess().getPlusSignPlusSignKeyword_0()); }
		'++'
		{ after(grammarAccess.getOpIncAccess().getPlusSignPlusSignKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getOpIncAccess().getHyphenMinusHyphenMinusKeyword_1()); }
		'--'
		{ after(grammarAccess.getOpIncAccess().getHyphenMinusHyphenMinusKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpUnary__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOpUnaryAccess().getAmpersandKeyword_0()); }
		'&'
		{ after(grammarAccess.getOpUnaryAccess().getAmpersandKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getOpUnaryAccess().getAsteriskKeyword_1()); }
		'*'
		{ after(grammarAccess.getOpUnaryAccess().getAsteriskKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getOpUnaryAccess().getPlusSignKeyword_2()); }
		'+'
		{ after(grammarAccess.getOpUnaryAccess().getPlusSignKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getOpUnaryAccess().getHyphenMinusKeyword_3()); }
		'-'
		{ after(grammarAccess.getOpUnaryAccess().getHyphenMinusKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getOpUnaryAccess().getTildeKeyword_4()); }
		'~'
		{ after(grammarAccess.getOpUnaryAccess().getTildeKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getOpUnaryAccess().getExclamationMarkKeyword_5()); }
		'!'
		{ after(grammarAccess.getOpUnaryAccess().getExclamationMarkKeyword_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostfixExpressionAccess().getPrimaryExpAssignment_1_0()); }
		(rule__PostfixExpression__PrimaryExpAssignment_1_0)
		{ after(grammarAccess.getPostfixExpressionAccess().getPrimaryExpAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getPostfixExpressionAccess().getPostTypeAssignment_1_1()); }
		(rule__PostfixExpression__PostTypeAssignment_1_1)
		{ after(grammarAccess.getPostfixExpressionAccess().getPostTypeAssignment_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression2__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostfixExpression2Access().getGroup_0()); }
		(rule__PostfixExpression2__Group_0__0)
		{ after(grammarAccess.getPostfixExpression2Access().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getPostfixExpression2Access().getGroup_1()); }
		(rule__PostfixExpression2__Group_1__0)
		{ after(grammarAccess.getPostfixExpression2Access().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getPostfixExpression2Access().getGroup_2()); }
		(rule__PostfixExpression2__Group_2__0)
		{ after(grammarAccess.getPostfixExpression2Access().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getPostfixExpression2Access().getGroup_3()); }
		(rule__PostfixExpression2__Group_3__0)
		{ after(grammarAccess.getPostfixExpression2Access().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getPostfixExpression2Access().getGroup_4()); }
		(rule__PostfixExpression2__Group_4__0)
		{ after(grammarAccess.getPostfixExpression2Access().getGroup_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_0()); }
		(rule__PrimaryExpression__Group_0__0)
		{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_1()); }
		(rule__PrimaryExpression__Group_1__0)
		{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getConstantParserRuleCall_2()); }
		ruleConstant
		{ after(grammarAccess.getPrimaryExpressionAccess().getConstantParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_3()); }
		(rule__PrimaryExpression__Group_3__0)
		{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_4()); }
		(rule__PrimaryExpression__Group_4__0)
		{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getGenericSelectionParserRuleCall_5()); }
		ruleGenericSelection
		{ after(grammarAccess.getPrimaryExpressionAccess().getGenericSelectionParserRuleCall_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantAccess().getGroup_0()); }
		(rule__Constant__Group_0__0)
		{ after(grammarAccess.getConstantAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getConstantAccess().getGroup_1()); }
		(rule__Constant__Group_1__0)
		{ after(grammarAccess.getConstantAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericAssociation__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGenericAssociationAccess().getGroup_0()); }
		(rule__GenericAssociation__Group_0__0)
		{ after(grammarAccess.getGenericAssociationAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getGenericAssociationAccess().getGroup_1()); }
		(rule__GenericAssociation__Group_1__0)
		{ after(grammarAccess.getGenericAssociationAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclarationAccess().getGroup_0()); }
		(rule__Declaration__Group_0__0)
		{ after(grammarAccess.getDeclarationAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getDeclarationAccess().getStaticAssertDeclarationParserRuleCall_1()); }
		ruleStaticAssertDeclaration
		{ after(grammarAccess.getDeclarationAccess().getStaticAssertDeclarationParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarationSpecifier__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclarationSpecifierAccess().getStoreClassAssignment_0()); }
		(rule__DeclarationSpecifier__StoreClassAssignment_0)
		{ after(grammarAccess.getDeclarationSpecifierAccess().getStoreClassAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getDeclarationSpecifierAccess().getTypeSpecifierParserRuleCall_1()); }
		ruleTypeSpecifier
		{ after(grammarAccess.getDeclarationSpecifierAccess().getTypeSpecifierParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getDeclarationSpecifierAccess().getFuncSpecAssignment_2()); }
		(rule__DeclarationSpecifier__FuncSpecAssignment_2)
		{ after(grammarAccess.getDeclarationSpecifierAccess().getFuncSpecAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getDeclarationSpecifierAccess().getAlignmentSpecifierParserRuleCall_3()); }
		ruleAlignmentSpecifier
		{ after(grammarAccess.getDeclarationSpecifierAccess().getAlignmentSpecifierParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageClassSpecifier__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStorageClassSpecifierAccess().getTypedefKeyword_0()); }
		'typedef'
		{ after(grammarAccess.getStorageClassSpecifierAccess().getTypedefKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getStorageClassSpecifierAccess().getExternKeyword_1()); }
		'extern'
		{ after(grammarAccess.getStorageClassSpecifierAccess().getExternKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getStorageClassSpecifierAccess().getStaticKeyword_2()); }
		'static'
		{ after(grammarAccess.getStorageClassSpecifierAccess().getStaticKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getStorageClassSpecifierAccess().get_Thread_localKeyword_3()); }
		'_Thread_local'
		{ after(grammarAccess.getStorageClassSpecifierAccess().get_Thread_localKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getStorageClassSpecifierAccess().getAutoKeyword_4()); }
		'auto'
		{ after(grammarAccess.getStorageClassSpecifierAccess().getAutoKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getStorageClassSpecifierAccess().getRegisterKeyword_5()); }
		'register'
		{ after(grammarAccess.getStorageClassSpecifierAccess().getRegisterKeyword_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeSpecifierAccess().getTypeAssignment_1_0()); }
		(rule__TypeSpecifier__TypeAssignment_1_0)
		{ after(grammarAccess.getTypeSpecifierAccess().getTypeAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeSpecifierAccess().getAtomicTypeAssignment_1_1()); }
		(rule__TypeSpecifier__AtomicTypeAssignment_1_1)
		{ after(grammarAccess.getTypeSpecifierAccess().getAtomicTypeAssignment_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeSpecifierAccess().getStructSpecAssignment_1_2()); }
		(rule__TypeSpecifier__StructSpecAssignment_1_2)
		{ after(grammarAccess.getTypeSpecifierAccess().getStructSpecAssignment_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getTypeSpecifierAccess().getEnumSpecAssignment_1_3()); }
		(rule__TypeSpecifier__EnumSpecAssignment_1_3)
		{ after(grammarAccess.getTypeSpecifierAccess().getEnumSpecAssignment_1_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Types__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypesAccess().getVoidKeyword_0()); }
		'void'
		{ after(grammarAccess.getTypesAccess().getVoidKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypesAccess().getCharKeyword_1()); }
		'char'
		{ after(grammarAccess.getTypesAccess().getCharKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypesAccess().getShortKeyword_2()); }
		'short'
		{ after(grammarAccess.getTypesAccess().getShortKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getTypesAccess().getIntKeyword_3()); }
		'int'
		{ after(grammarAccess.getTypesAccess().getIntKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getTypesAccess().getLongKeyword_4()); }
		'long'
		{ after(grammarAccess.getTypesAccess().getLongKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getTypesAccess().getFloatKeyword_5()); }
		'float'
		{ after(grammarAccess.getTypesAccess().getFloatKeyword_5()); }
	)
	|
	(
		{ before(grammarAccess.getTypesAccess().getDoubleKeyword_6()); }
		'double'
		{ after(grammarAccess.getTypesAccess().getDoubleKeyword_6()); }
	)
	|
	(
		{ before(grammarAccess.getTypesAccess().getSignedKeyword_7()); }
		'signed'
		{ after(grammarAccess.getTypesAccess().getSignedKeyword_7()); }
	)
	|
	(
		{ before(grammarAccess.getTypesAccess().getUnsignedKeyword_8()); }
		'unsigned'
		{ after(grammarAccess.getTypesAccess().getUnsignedKeyword_8()); }
	)
	|
	(
		{ before(grammarAccess.getTypesAccess().getBoolKeyword_9()); }
		'bool'
		{ after(grammarAccess.getTypesAccess().getBoolKeyword_9()); }
	)
	|
	(
		{ before(grammarAccess.getTypesAccess().getComplexKeyword_10()); }
		'complex'
		{ after(grammarAccess.getTypesAccess().getComplexKeyword_10()); }
	)
	|
	(
		{ before(grammarAccess.getTypesAccess().getImaginaryKeyword_11()); }
		'imaginary'
		{ after(grammarAccess.getTypesAccess().getImaginaryKeyword_11()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructOrUnionSpecifier__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructOrUnionSpecifierAccess().getGroup_2_0()); }
		(rule__StructOrUnionSpecifier__Group_2_0__0)
		{ after(grammarAccess.getStructOrUnionSpecifierAccess().getGroup_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getStructOrUnionSpecifierAccess().getGroup_2_1()); }
		(rule__StructOrUnionSpecifier__Group_2_1__0)
		{ after(grammarAccess.getStructOrUnionSpecifierAccess().getGroup_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructOrUnion__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructOrUnionAccess().getStructKeyword_0()); }
		'struct'
		{ after(grammarAccess.getStructOrUnionAccess().getStructKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getStructOrUnionAccess().getUnionKeyword_1()); }
		'union'
		{ after(grammarAccess.getStructOrUnionAccess().getUnionKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaration__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructDeclarationAccess().getGroup_0()); }
		(rule__StructDeclaration__Group_0__0)
		{ after(grammarAccess.getStructDeclarationAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getStructDeclarationAccess().getStaticAssertDeclarationParserRuleCall_1()); }
		ruleStaticAssertDeclaration
		{ after(grammarAccess.getStructDeclarationAccess().getStaticAssertDeclarationParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecifierQualifierList__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSpecifierQualifierListAccess().getTypeAssignment_1_0()); }
		(rule__SpecifierQualifierList__TypeAssignment_1_0)
		{ after(grammarAccess.getSpecifierQualifierListAccess().getTypeAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getSpecifierQualifierListAccess().getTypeQualAssignment_1_1()); }
		(rule__SpecifierQualifierList__TypeQualAssignment_1_1)
		{ after(grammarAccess.getSpecifierQualifierListAccess().getTypeQualAssignment_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclarator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructDeclaratorAccess().getGroup_0()); }
		(rule__StructDeclarator__Group_0__0)
		{ after(grammarAccess.getStructDeclaratorAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getStructDeclaratorAccess().getGroup_1()); }
		(rule__StructDeclarator__Group_1__0)
		{ after(grammarAccess.getStructDeclaratorAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumSpecifier__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumSpecifierAccess().getGroup_2_0()); }
		(rule__EnumSpecifier__Group_2_0__0)
		{ after(grammarAccess.getEnumSpecifierAccess().getGroup_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getEnumSpecifierAccess().getGroup_2_1()); }
		(rule__EnumSpecifier__Group_2_1__0)
		{ after(grammarAccess.getEnumSpecifierAccess().getGroup_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeQualifier__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeQualifierAccess().getConstKeyword_0()); }
		'const'
		{ after(grammarAccess.getTypeQualifierAccess().getConstKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeQualifierAccess().getRestrictKeyword_1()); }
		'restrict'
		{ after(grammarAccess.getTypeQualifierAccess().getRestrictKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeQualifierAccess().getVolatileKeyword_2()); }
		'volatile'
		{ after(grammarAccess.getTypeQualifierAccess().getVolatileKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getTypeQualifierAccess().get_AtomicKeyword_3()); }
		'_Atomic'
		{ after(grammarAccess.getTypeQualifierAccess().get_AtomicKeyword_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionSpecifier__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionSpecifierAccess().getInlineKeyword_0()); }
		'inline'
		{ after(grammarAccess.getFunctionSpecifierAccess().getInlineKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionSpecifierAccess().get_NoreturnKeyword_1()); }
		'_Noreturn'
		{ after(grammarAccess.getFunctionSpecifierAccess().get_NoreturnKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlignmentSpecifier__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlignmentSpecifierAccess().getTypeAssignment_3_0()); }
		(rule__AlignmentSpecifier__TypeAssignment_3_0)
		{ after(grammarAccess.getAlignmentSpecifierAccess().getTypeAssignment_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getAlignmentSpecifierAccess().getExpAssignment_3_1()); }
		(rule__AlignmentSpecifier__ExpAssignment_3_1)
		{ after(grammarAccess.getAlignmentSpecifierAccess().getExpAssignment_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectDeclaratorAccess().getNameAssignment_1_0()); }
		(rule__DirectDeclarator__NameAssignment_1_0)
		{ after(grammarAccess.getDirectDeclaratorAccess().getNameAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getDirectDeclaratorAccess().getGroup_1_1()); }
		(rule__DirectDeclarator__Group_1_1__0)
		{ after(grammarAccess.getDirectDeclaratorAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectDeclarator2Access().getGroup_0()); }
		(rule__DirectDeclarator2__Group_0__0)
		{ after(grammarAccess.getDirectDeclarator2Access().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getDirectDeclarator2Access().getGroup_1()); }
		(rule__DirectDeclarator2__Group_1__0)
		{ after(grammarAccess.getDirectDeclarator2Access().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getDirectDeclarator2Access().getGroup_2()); }
		(rule__DirectDeclarator2__Group_2__0)
		{ after(grammarAccess.getDirectDeclarator2Access().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getDirectDeclarator2Access().getGroup_3()); }
		(rule__DirectDeclarator2__Group_3__0)
		{ after(grammarAccess.getDirectDeclarator2Access().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getDirectDeclarator2Access().getGroup_4()); }
		(rule__DirectDeclarator2__Group_4__0)
		{ after(grammarAccess.getDirectDeclarator2Access().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getDirectDeclarator2Access().getGroup_5()); }
		(rule__DirectDeclarator2__Group_5__0)
		{ after(grammarAccess.getDirectDeclarator2Access().getGroup_5()); }
	)
	|
	(
		{ before(grammarAccess.getDirectDeclarator2Access().getGroup_6()); }
		(rule__DirectDeclarator2__Group_6__0)
		{ after(grammarAccess.getDirectDeclarator2Access().getGroup_6()); }
	)
	|
	(
		{ before(grammarAccess.getDirectDeclarator2Access().getGroup_7()); }
		(rule__DirectDeclarator2__Group_7__0)
		{ after(grammarAccess.getDirectDeclarator2Access().getGroup_7()); }
	)
	|
	(
		{ before(grammarAccess.getDirectDeclarator2Access().getGroup_8()); }
		(rule__DirectDeclarator2__Group_8__0)
		{ after(grammarAccess.getDirectDeclarator2Access().getGroup_8()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Alternatives_8_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectDeclarator2Access().getIdListAssignment_8_2_0()); }
		(rule__DirectDeclarator2__IdListAssignment_8_2_0)
		{ after(grammarAccess.getDirectDeclarator2Access().getIdListAssignment_8_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getDirectDeclarator2Access().getParamListAssignment_8_2_1()); }
		(rule__DirectDeclarator2__ParamListAssignment_8_2_1)
		{ after(grammarAccess.getDirectDeclarator2Access().getParamListAssignment_8_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointer__Alternatives_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPointerAccess().getTypeQualListAssignment_2_0_0()); }
		(rule__Pointer__TypeQualListAssignment_2_0_0)
		{ after(grammarAccess.getPointerAccess().getTypeQualListAssignment_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getPointerAccess().getAsteriskKeyword_2_0_1()); }
		'*'
		{ after(grammarAccess.getPointerAccess().getAsteriskKeyword_2_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterDeclarationAccess().getAbstractAssignment_2_0()); }
		(rule__ParameterDeclaration__AbstractAssignment_2_0)
		{ after(grammarAccess.getParameterDeclarationAccess().getAbstractAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getParameterDeclarationAccess().getDeclaratorAssignment_2_1()); }
		(rule__ParameterDeclaration__DeclaratorAssignment_2_1)
		{ after(grammarAccess.getParameterDeclarationAccess().getDeclaratorAssignment_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractDeclarator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractDeclaratorAccess().getGroup_0()); }
		(rule__AbstractDeclarator__Group_0__0)
		{ after(grammarAccess.getAbstractDeclaratorAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractDeclaratorAccess().getAbstractDeclaratorAssignment_1()); }
		(rule__AbstractDeclarator__AbstractDeclaratorAssignment_1)
		{ after(grammarAccess.getAbstractDeclaratorAccess().getAbstractDeclaratorAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator2__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectAbstractDeclarator2Access().getGroup_1_0()); }
		(rule__DirectAbstractDeclarator2__Group_1_0__0)
		{ after(grammarAccess.getDirectAbstractDeclarator2Access().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getDirectAbstractDeclarator2Access().getGroup_1_1()); }
		(rule__DirectAbstractDeclarator2__Group_1_1__0)
		{ after(grammarAccess.getDirectAbstractDeclarator2Access().getGroup_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getDirectAbstractDeclarator2Access().getGroup_1_2()); }
		(rule__DirectAbstractDeclarator2__Group_1_2__0)
		{ after(grammarAccess.getDirectAbstractDeclarator2Access().getGroup_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getDirectAbstractDeclarator2Access().getGroup_1_3()); }
		(rule__DirectAbstractDeclarator2__Group_1_3__0)
		{ after(grammarAccess.getDirectAbstractDeclarator2Access().getGroup_1_3()); }
	)
	|
	(
		{ before(grammarAccess.getDirectAbstractDeclarator2Access().getGroup_1_4()); }
		(rule__DirectAbstractDeclarator2__Group_1_4__0)
		{ after(grammarAccess.getDirectAbstractDeclarator2Access().getGroup_1_4()); }
	)
	|
	(
		{ before(grammarAccess.getDirectAbstractDeclarator2Access().getGroup_1_5()); }
		(rule__DirectAbstractDeclarator2__Group_1_5__0)
		{ after(grammarAccess.getDirectAbstractDeclarator2Access().getGroup_1_5()); }
	)
	|
	(
		{ before(grammarAccess.getDirectAbstractDeclarator2Access().getGroup_1_6()); }
		(rule__DirectAbstractDeclarator2__Group_1_6__0)
		{ after(grammarAccess.getDirectAbstractDeclarator2Access().getGroup_1_6()); }
	)
	|
	(
		{ before(grammarAccess.getDirectAbstractDeclarator2Access().getGroup_1_7()); }
		(rule__DirectAbstractDeclarator2__Group_1_7__0)
		{ after(grammarAccess.getDirectAbstractDeclarator2Access().getGroup_1_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitializerAccess().getGroup_0()); }
		(rule__Initializer__Group_0__0)
		{ after(grammarAccess.getInitializerAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getInitializerAccess().getExpAssignment_1()); }
		(rule__Initializer__ExpAssignment_1)
		{ after(grammarAccess.getInitializerAccess().getExpAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Designator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDesignatorAccess().getGroup_0()); }
		(rule__Designator__Group_0__0)
		{ after(grammarAccess.getDesignatorAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getDesignatorAccess().getGroup_1()); }
		(rule__Designator__Group_1__0)
		{ after(grammarAccess.getDesignatorAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getLabeledStatementParserRuleCall_0()); }
		ruleLabeledStatement
		{ after(grammarAccess.getStatementAccess().getLabeledStatementParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getCompoundStatementParserRuleCall_1()); }
		ruleCompoundStatement
		{ after(grammarAccess.getStatementAccess().getCompoundStatementParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getExpressionStatementParserRuleCall_2()); }
		ruleExpressionStatement
		{ after(grammarAccess.getStatementAccess().getExpressionStatementParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getSelectionStatementParserRuleCall_3()); }
		ruleSelectionStatement
		{ after(grammarAccess.getStatementAccess().getSelectionStatementParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getIterationStatementParserRuleCall_4()); }
		ruleIterationStatement
		{ after(grammarAccess.getStatementAccess().getIterationStatementParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getJumpStatementParserRuleCall_5()); }
		ruleJumpStatement
		{ after(grammarAccess.getStatementAccess().getJumpStatementParserRuleCall_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStatement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLabeledStatementAccess().getGroup_0()); }
		(rule__LabeledStatement__Group_0__0)
		{ after(grammarAccess.getLabeledStatementAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getLabeledStatementAccess().getGroup_1()); }
		(rule__LabeledStatement__Group_1__0)
		{ after(grammarAccess.getLabeledStatementAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getLabeledStatementAccess().getGroup_2()); }
		(rule__LabeledStatement__Group_2__0)
		{ after(grammarAccess.getLabeledStatementAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockItem__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlockItemAccess().getDeclarationParserRuleCall_0()); }
		ruleDeclaration
		{ after(grammarAccess.getBlockItemAccess().getDeclarationParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getBlockItemAccess().getStatementParserRuleCall_1()); }
		ruleStatement
		{ after(grammarAccess.getBlockItemAccess().getStatementParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionStatement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectionStatementAccess().getIfStatementParserRuleCall_0()); }
		ruleIfStatement
		{ after(grammarAccess.getSelectionStatementAccess().getIfStatementParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getSelectionStatementAccess().getSwitchStatementParserRuleCall_1()); }
		ruleSwitchStatement
		{ after(grammarAccess.getSelectionStatementAccess().getSwitchStatementParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IterationStatement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIterationStatementAccess().getWhileLoopParserRuleCall_0()); }
		ruleWhileLoop
		{ after(grammarAccess.getIterationStatementAccess().getWhileLoopParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getIterationStatementAccess().getDoWhileLoopParserRuleCall_1()); }
		ruleDoWhileLoop
		{ after(grammarAccess.getIterationStatementAccess().getDoWhileLoopParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getIterationStatementAccess().getForLoopParserRuleCall_2()); }
		ruleForLoop
		{ after(grammarAccess.getIterationStatementAccess().getForLoopParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForLoopAccess().getExp1Assignment_3_0()); }
		(rule__ForLoop__Exp1Assignment_3_0)
		{ after(grammarAccess.getForLoopAccess().getExp1Assignment_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getForLoopAccess().getDeclarationAssignment_3_1()); }
		(rule__ForLoop__DeclarationAssignment_3_1)
		{ after(grammarAccess.getForLoopAccess().getDeclarationAssignment_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JumpStatement__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJumpStatementAccess().getGroup_1_0()); }
		(rule__JumpStatement__Group_1_0__0)
		{ after(grammarAccess.getJumpStatementAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getJumpStatementAccess().getGroup_1_1()); }
		(rule__JumpStatement__Group_1_1__0)
		{ after(grammarAccess.getJumpStatementAccess().getGroup_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getJumpStatementAccess().getGroup_1_2()); }
		(rule__JumpStatement__Group_1_2__0)
		{ after(grammarAccess.getJumpStatementAccess().getGroup_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getJumpStatementAccess().getRetAssignment_1_3()); }
		(rule__JumpStatement__RetAssignment_1_3)
		{ after(grammarAccess.getJumpStatementAccess().getRetAssignment_1_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDefinition__Group__0__Impl
	rule__FunctionDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getFunctionDefinitionAccess().getDeclarationSpecAssignment_0()); }
		(rule__FunctionDefinition__DeclarationSpecAssignment_0)
		{ after(grammarAccess.getFunctionDefinitionAccess().getDeclarationSpecAssignment_0()); }
	)
	(
		{ before(grammarAccess.getFunctionDefinitionAccess().getDeclarationSpecAssignment_0()); }
		(rule__FunctionDefinition__DeclarationSpecAssignment_0)*
		{ after(grammarAccess.getFunctionDefinitionAccess().getDeclarationSpecAssignment_0()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDefinition__Group__1__Impl
	rule__FunctionDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDefinitionAccess().getDeclaAssignment_1()); }
	(rule__FunctionDefinition__DeclaAssignment_1)
	{ after(grammarAccess.getFunctionDefinitionAccess().getDeclaAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDefinition__Group__2__Impl
	rule__FunctionDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDefinitionAccess().getDeclaListAssignment_2()); }
	(rule__FunctionDefinition__DeclaListAssignment_2)*
	{ after(grammarAccess.getFunctionDefinitionAccess().getDeclaListAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDefinition__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDefinitionAccess().getBodyAssignment_3()); }
	(rule__FunctionDefinition__BodyAssignment_3)
	{ after(grammarAccess.getFunctionDefinitionAccess().getBodyAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionC__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionC__Group__0__Impl
	rule__ExpressionC__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionC__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionCAccess().getAssignmentExpressionParserRuleCall_0()); }
	ruleAssignmentExpression
	{ after(grammarAccess.getExpressionCAccess().getAssignmentExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionC__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionC__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionC__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionCAccess().getGroup_1()); }
	(rule__ExpressionC__Group_1__0)*
	{ after(grammarAccess.getExpressionCAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionC__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionC__Group_1__0__Impl
	rule__ExpressionC__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionC__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionCAccess().getGroup_1_0()); }
	(rule__ExpressionC__Group_1_0__0)
	{ after(grammarAccess.getExpressionCAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionC__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionC__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionC__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionCAccess().getRightAssignment_1_1()); }
	(rule__ExpressionC__RightAssignment_1_1)
	{ after(grammarAccess.getExpressionCAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionC__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionC__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionC__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionCAccess().getGroup_1_0_0()); }
	(rule__ExpressionC__Group_1_0_0__0)
	{ after(grammarAccess.getExpressionCAccess().getGroup_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionC__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionC__Group_1_0_0__0__Impl
	rule__ExpressionC__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionC__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionCAccess().getExpLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getExpressionCAccess().getExpLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionC__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionC__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionC__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionCAccess().getCommaKeyword_1_0_0_1()); }
	','
	{ after(grammarAccess.getExpressionCAccess().getCommaKeyword_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AssignmentExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssignmentExpression__Group__0__Impl
	rule__AssignmentExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentExpressionAccess().getConditionalExpressionParserRuleCall_0()); }
	ruleConditionalExpression
	{ after(grammarAccess.getAssignmentExpressionAccess().getConditionalExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssignmentExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentExpressionAccess().getGroup_1()); }
	(rule__AssignmentExpression__Group_1__0)?
	{ after(grammarAccess.getAssignmentExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AssignmentExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssignmentExpression__Group_1__0__Impl
	rule__AssignmentExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentExpressionAccess().getAssignmentExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getAssignmentExpressionAccess().getAssignmentExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssignmentExpression__Group_1__1__Impl
	rule__AssignmentExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentExpressionAccess().getOpAssignParserRuleCall_1_1()); }
	ruleOpAssign
	{ after(grammarAccess.getAssignmentExpressionAccess().getOpAssignParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssignmentExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentExpressionAccess().getRightAssignment_1_2()); }
	(rule__AssignmentExpression__RightAssignment_1_2)
	{ after(grammarAccess.getAssignmentExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OpAssign__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpAssign__Group_8__0__Impl
	rule__OpAssign__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OpAssign__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpAssignAccess().getLessThanSignKeyword_8_0()); }
	'<'
	{ after(grammarAccess.getOpAssignAccess().getLessThanSignKeyword_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpAssign__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpAssign__Group_8__1__Impl
	rule__OpAssign__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OpAssign__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpAssignAccess().getLessThanSignKeyword_8_1()); }
	'<'
	{ after(grammarAccess.getOpAssignAccess().getLessThanSignKeyword_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpAssign__Group_8__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpAssign__Group_8__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpAssign__Group_8__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpAssignAccess().getEqualsSignKeyword_8_2()); }
	'='
	{ after(grammarAccess.getOpAssignAccess().getEqualsSignKeyword_8_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OpAssign__Group_9__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpAssign__Group_9__0__Impl
	rule__OpAssign__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OpAssign__Group_9__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpAssignAccess().getGreaterThanSignKeyword_9_0()); }
	'>'
	{ after(grammarAccess.getOpAssignAccess().getGreaterThanSignKeyword_9_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpAssign__Group_9__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpAssign__Group_9__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpAssign__Group_9__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpAssignAccess().getGreaterThanSignEqualsSignKeyword_9_1()); }
	'>='
	{ after(grammarAccess.getOpAssignAccess().getGreaterThanSignEqualsSignKeyword_9_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalExpression__Group__0__Impl
	rule__ConditionalExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalExpressionAccess().getLogicalOrExpressionParserRuleCall_0()); }
	ruleLogicalOrExpression
	{ after(grammarAccess.getConditionalExpressionAccess().getLogicalOrExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalExpressionAccess().getGroup_1()); }
	(rule__ConditionalExpression__Group_1__0)?
	{ after(grammarAccess.getConditionalExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalExpression__Group_1__0__Impl
	rule__ConditionalExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalExpressionAccess().getConditionalExpressionFirstAction_1_0()); }
	()
	{ after(grammarAccess.getConditionalExpressionAccess().getConditionalExpressionFirstAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalExpression__Group_1__1__Impl
	rule__ConditionalExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalExpressionAccess().getGroup_1_1()); }
	(rule__ConditionalExpression__Group_1_1__0)
	{ after(grammarAccess.getConditionalExpressionAccess().getGroup_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalExpression__Group_1__2__Impl
	rule__ConditionalExpression__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalExpressionAccess().getColonKeyword_1_2()); }
	':'
	{ after(grammarAccess.getConditionalExpressionAccess().getColonKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalExpression__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalExpressionAccess().getThirdAssignment_1_3()); }
	(rule__ConditionalExpression__ThirdAssignment_1_3)
	{ after(grammarAccess.getConditionalExpressionAccess().getThirdAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalExpression__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalExpression__Group_1_1__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalExpressionAccess().getGroup_1_1_0()); }
	(rule__ConditionalExpression__Group_1_1_0__0)
	{ after(grammarAccess.getConditionalExpressionAccess().getGroup_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalExpression__Group_1_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalExpression__Group_1_1_0__0__Impl
	rule__ConditionalExpression__Group_1_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group_1_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalExpressionAccess().getQuestionMarkKeyword_1_1_0_0()); }
	'?'
	{ after(grammarAccess.getConditionalExpressionAccess().getQuestionMarkKeyword_1_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group_1_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalExpression__Group_1_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group_1_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalExpressionAccess().getSecondAssignment_1_1_0_1()); }
	(rule__ConditionalExpression__SecondAssignment_1_1_0_1)
	{ after(grammarAccess.getConditionalExpressionAccess().getSecondAssignment_1_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalOrExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalOrExpression__Group__0__Impl
	rule__LogicalOrExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalOrExpressionAccess().getLogicalAndExpressionParserRuleCall_0()); }
	ruleLogicalAndExpression
	{ after(grammarAccess.getLogicalOrExpressionAccess().getLogicalAndExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalOrExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalOrExpressionAccess().getGroup_1()); }
	(rule__LogicalOrExpression__Group_1__0)*
	{ after(grammarAccess.getLogicalOrExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalOrExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalOrExpression__Group_1__0__Impl
	rule__LogicalOrExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalOrExpressionAccess().getGroup_1_0()); }
	(rule__LogicalOrExpression__Group_1_0__0)
	{ after(grammarAccess.getLogicalOrExpressionAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalOrExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalOrExpressionAccess().getRightAssignment_1_1()); }
	(rule__LogicalOrExpression__RightAssignment_1_1)
	{ after(grammarAccess.getLogicalOrExpressionAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalOrExpression__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalOrExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpression__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalOrExpressionAccess().getGroup_1_0_0()); }
	(rule__LogicalOrExpression__Group_1_0_0__0)
	{ after(grammarAccess.getLogicalOrExpressionAccess().getGroup_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalOrExpression__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalOrExpression__Group_1_0_0__0__Impl
	rule__LogicalOrExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpression__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalOrExpressionAccess().getLogicOrLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getLogicalOrExpressionAccess().getLogicOrLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpression__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalOrExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpression__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalOrExpressionAccess().getOpOrParserRuleCall_1_0_0_1()); }
	ruleOpOr
	{ after(grammarAccess.getLogicalOrExpressionAccess().getOpOrParserRuleCall_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalAndExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalAndExpression__Group__0__Impl
	rule__LogicalAndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalAndExpressionAccess().getInclusiveOrExpressionParserRuleCall_0()); }
	ruleInclusiveOrExpression
	{ after(grammarAccess.getLogicalAndExpressionAccess().getInclusiveOrExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalAndExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalAndExpressionAccess().getGroup_1()); }
	(rule__LogicalAndExpression__Group_1__0)*
	{ after(grammarAccess.getLogicalAndExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalAndExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalAndExpression__Group_1__0__Impl
	rule__LogicalAndExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalAndExpressionAccess().getGroup_1_0()); }
	(rule__LogicalAndExpression__Group_1_0__0)
	{ after(grammarAccess.getLogicalAndExpressionAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalAndExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalAndExpressionAccess().getRightAssignment_1_1()); }
	(rule__LogicalAndExpression__RightAssignment_1_1)
	{ after(grammarAccess.getLogicalAndExpressionAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalAndExpression__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalAndExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpression__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalAndExpressionAccess().getGroup_1_0_0()); }
	(rule__LogicalAndExpression__Group_1_0_0__0)
	{ after(grammarAccess.getLogicalAndExpressionAccess().getGroup_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalAndExpression__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalAndExpression__Group_1_0_0__0__Impl
	rule__LogicalAndExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpression__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalAndExpressionAccess().getLogicalExpLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getLogicalAndExpressionAccess().getLogicalExpLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpression__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalAndExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpression__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalAndExpressionAccess().getOpAndParserRuleCall_1_0_0_1()); }
	ruleOpAnd
	{ after(grammarAccess.getLogicalAndExpressionAccess().getOpAndParserRuleCall_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InclusiveOrExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InclusiveOrExpression__Group__0__Impl
	rule__InclusiveOrExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InclusiveOrExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInclusiveOrExpressionAccess().getExclusiveOrExpressionParserRuleCall_0()); }
	ruleExclusiveOrExpression
	{ after(grammarAccess.getInclusiveOrExpressionAccess().getExclusiveOrExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InclusiveOrExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InclusiveOrExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InclusiveOrExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInclusiveOrExpressionAccess().getGroup_1()); }
	(rule__InclusiveOrExpression__Group_1__0)*
	{ after(grammarAccess.getInclusiveOrExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InclusiveOrExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InclusiveOrExpression__Group_1__0__Impl
	rule__InclusiveOrExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InclusiveOrExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInclusiveOrExpressionAccess().getGroup_1_0()); }
	(rule__InclusiveOrExpression__Group_1_0__0)
	{ after(grammarAccess.getInclusiveOrExpressionAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InclusiveOrExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InclusiveOrExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InclusiveOrExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInclusiveOrExpressionAccess().getRightAssignment_1_1()); }
	(rule__InclusiveOrExpression__RightAssignment_1_1)
	{ after(grammarAccess.getInclusiveOrExpressionAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InclusiveOrExpression__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InclusiveOrExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InclusiveOrExpression__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInclusiveOrExpressionAccess().getGroup_1_0_0()); }
	(rule__InclusiveOrExpression__Group_1_0_0__0)
	{ after(grammarAccess.getInclusiveOrExpressionAccess().getGroup_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InclusiveOrExpression__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InclusiveOrExpression__Group_1_0_0__0__Impl
	rule__InclusiveOrExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InclusiveOrExpression__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInclusiveOrExpressionAccess().getInclusiveOrLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getInclusiveOrExpressionAccess().getInclusiveOrLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InclusiveOrExpression__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InclusiveOrExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InclusiveOrExpression__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInclusiveOrExpressionAccess().getVerticalLineKeyword_1_0_0_1()); }
	'|'
	{ after(grammarAccess.getInclusiveOrExpressionAccess().getVerticalLineKeyword_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExclusiveOrExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExclusiveOrExpression__Group__0__Impl
	rule__ExclusiveOrExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExclusiveOrExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExclusiveOrExpressionAccess().getAndExpressionParserRuleCall_0()); }
	ruleAndExpression
	{ after(grammarAccess.getExclusiveOrExpressionAccess().getAndExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExclusiveOrExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExclusiveOrExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExclusiveOrExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExclusiveOrExpressionAccess().getGroup_1()); }
	(rule__ExclusiveOrExpression__Group_1__0)*
	{ after(grammarAccess.getExclusiveOrExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExclusiveOrExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExclusiveOrExpression__Group_1__0__Impl
	rule__ExclusiveOrExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExclusiveOrExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExclusiveOrExpressionAccess().getGroup_1_0()); }
	(rule__ExclusiveOrExpression__Group_1_0__0)
	{ after(grammarAccess.getExclusiveOrExpressionAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExclusiveOrExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExclusiveOrExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExclusiveOrExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExclusiveOrExpressionAccess().getRightAssignment_1_1()); }
	(rule__ExclusiveOrExpression__RightAssignment_1_1)
	{ after(grammarAccess.getExclusiveOrExpressionAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExclusiveOrExpression__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExclusiveOrExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExclusiveOrExpression__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExclusiveOrExpressionAccess().getGroup_1_0_0()); }
	(rule__ExclusiveOrExpression__Group_1_0_0__0)
	{ after(grammarAccess.getExclusiveOrExpressionAccess().getGroup_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExclusiveOrExpression__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExclusiveOrExpression__Group_1_0_0__0__Impl
	rule__ExclusiveOrExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExclusiveOrExpression__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExclusiveOrExpressionAccess().getExclusiveOrLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getExclusiveOrExpressionAccess().getExclusiveOrLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExclusiveOrExpression__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExclusiveOrExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExclusiveOrExpression__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExclusiveOrExpressionAccess().getCircumflexAccentKeyword_1_0_0_1()); }
	'^'
	{ after(grammarAccess.getExclusiveOrExpressionAccess().getCircumflexAccentKeyword_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group__0__Impl
	rule__AndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getEqualityExpressionParserRuleCall_0()); }
	ruleEqualityExpression
	{ after(grammarAccess.getAndExpressionAccess().getEqualityExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getGroup_1()); }
	(rule__AndExpression__Group_1__0)*
	{ after(grammarAccess.getAndExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group_1__0__Impl
	rule__AndExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getGroup_1_0()); }
	(rule__AndExpression__Group_1_0__0)
	{ after(grammarAccess.getAndExpressionAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getRightAssignment_1_1()); }
	(rule__AndExpression__RightAssignment_1_1)
	{ after(grammarAccess.getAndExpressionAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getGroup_1_0_0()); }
	(rule__AndExpression__Group_1_0_0__0)
	{ after(grammarAccess.getAndExpressionAccess().getGroup_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group_1_0_0__0__Impl
	rule__AndExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getAndExpLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getAndExpressionAccess().getAndExpLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getAmpersandKeyword_1_0_0_1()); }
	'&'
	{ after(grammarAccess.getAndExpressionAccess().getAmpersandKeyword_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpression__Group__0__Impl
	rule__EqualityExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExpressionAccess().getRelationalExpressionParserRuleCall_0()); }
	ruleRelationalExpression
	{ after(grammarAccess.getEqualityExpressionAccess().getRelationalExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExpressionAccess().getGroup_1()); }
	(rule__EqualityExpression__Group_1__0)*
	{ after(grammarAccess.getEqualityExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpression__Group_1__0__Impl
	rule__EqualityExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExpressionAccess().getGroup_1_0()); }
	(rule__EqualityExpression__Group_1_0__0)
	{ after(grammarAccess.getEqualityExpressionAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExpressionAccess().getRightAssignment_1_1()); }
	(rule__EqualityExpression__RightAssignment_1_1)
	{ after(grammarAccess.getEqualityExpressionAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpression__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExpressionAccess().getGroup_1_0_0()); }
	(rule__EqualityExpression__Group_1_0_0__0)
	{ after(grammarAccess.getEqualityExpressionAccess().getGroup_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpression__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpression__Group_1_0_0__0__Impl
	rule__EqualityExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExpressionAccess().getEqualExpLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getEqualityExpressionAccess().getEqualExpLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExpressionAccess().getOpEqualParserRuleCall_1_0_0_1()); }
	ruleOpEqual
	{ after(grammarAccess.getEqualityExpressionAccess().getOpEqualParserRuleCall_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExpression__Group__0__Impl
	rule__RelationalExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpressionAccess().getShiftExpressionParserRuleCall_0()); }
	ruleShiftExpression
	{ after(grammarAccess.getRelationalExpressionAccess().getShiftExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpressionAccess().getGroup_1()); }
	(rule__RelationalExpression__Group_1__0)*
	{ after(grammarAccess.getRelationalExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExpression__Group_1__0__Impl
	rule__RelationalExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpressionAccess().getGroup_1_0()); }
	(rule__RelationalExpression__Group_1_0__0)
	{ after(grammarAccess.getRelationalExpressionAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpressionAccess().getRightAssignment_1_1()); }
	(rule__RelationalExpression__RightAssignment_1_1)
	{ after(grammarAccess.getRelationalExpressionAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpression__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpressionAccess().getGroup_1_0_0()); }
	(rule__RelationalExpression__Group_1_0_0__0)
	{ after(grammarAccess.getRelationalExpressionAccess().getGroup_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpression__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExpression__Group_1_0_0__0__Impl
	rule__RelationalExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpressionAccess().getRelExpLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getRelationalExpressionAccess().getRelExpLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpressionAccess().getOpRelParserRuleCall_1_0_0_1()); }
	ruleOpRel
	{ after(grammarAccess.getRelationalExpressionAccess().getOpRelParserRuleCall_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ShiftExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShiftExpression__Group__0__Impl
	rule__ShiftExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShiftExpressionAccess().getAdditiveExpressionParserRuleCall_0()); }
	ruleAdditiveExpression
	{ after(grammarAccess.getShiftExpressionAccess().getAdditiveExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShiftExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShiftExpressionAccess().getGroup_1()); }
	(rule__ShiftExpression__Group_1__0)*
	{ after(grammarAccess.getShiftExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ShiftExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShiftExpression__Group_1__0__Impl
	rule__ShiftExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShiftExpressionAccess().getGroup_1_0()); }
	(rule__ShiftExpression__Group_1_0__0)
	{ after(grammarAccess.getShiftExpressionAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShiftExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShiftExpressionAccess().getRightAssignment_1_1()); }
	(rule__ShiftExpression__RightAssignment_1_1)
	{ after(grammarAccess.getShiftExpressionAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ShiftExpression__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShiftExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpression__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShiftExpressionAccess().getGroup_1_0_0()); }
	(rule__ShiftExpression__Group_1_0_0__0)
	{ after(grammarAccess.getShiftExpressionAccess().getGroup_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ShiftExpression__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShiftExpression__Group_1_0_0__0__Impl
	rule__ShiftExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpression__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShiftExpressionAccess().getShiftExpLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getShiftExpressionAccess().getShiftExpLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpression__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShiftExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpression__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShiftExpressionAccess().getOpShiftParserRuleCall_1_0_0_1()); }
	ruleOpShift
	{ after(grammarAccess.getShiftExpressionAccess().getOpShiftParserRuleCall_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpression__Group__0__Impl
	rule__AdditiveExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0()); }
	ruleMultiplicativeExpression
	{ after(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionAccess().getGroup_1()); }
	(rule__AdditiveExpression__Group_1__0)*
	{ after(grammarAccess.getAdditiveExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpression__Group_1__0__Impl
	rule__AdditiveExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionAccess().getGroup_1_0()); }
	(rule__AdditiveExpression__Group_1_0__0)
	{ after(grammarAccess.getAdditiveExpressionAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionAccess().getRightAssignment_1_1()); }
	(rule__AdditiveExpression__RightAssignment_1_1)
	{ after(grammarAccess.getAdditiveExpressionAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionAccess().getGroup_1_0_0()); }
	(rule__AdditiveExpression__Group_1_0_0__0)
	{ after(grammarAccess.getAdditiveExpressionAccess().getGroup_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpression__Group_1_0_0__0__Impl
	rule__AdditiveExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionAccess().getAddExpLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getAdditiveExpressionAccess().getAddExpLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionAccess().getOpAddParserRuleCall_1_0_0_1()); }
	ruleOpAdd
	{ after(grammarAccess.getAdditiveExpressionAccess().getOpAddParserRuleCall_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpression__Group__0__Impl
	rule__MultiplicativeExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionAccess().getUnaryExpressionParserRuleCall_0()); }
	ruleUnaryExpression
	{ after(grammarAccess.getMultiplicativeExpressionAccess().getUnaryExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1()); }
	(rule__MultiplicativeExpression__Group_1__0)*
	{ after(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpression__Group_1__0__Impl
	rule__MultiplicativeExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1_0()); }
	(rule__MultiplicativeExpression__Group_1_0__0)
	{ after(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionAccess().getRightAssignment_1_1()); }
	(rule__MultiplicativeExpression__RightAssignment_1_1)
	{ after(grammarAccess.getMultiplicativeExpressionAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpression__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1_0_0()); }
	(rule__MultiplicativeExpression__Group_1_0_0__0)
	{ after(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpression__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpression__Group_1_0_0__0__Impl
	rule__MultiplicativeExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionAccess().getMultExpLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getMultiplicativeExpressionAccess().getMultExpLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionAccess().getOpMultParserRuleCall_1_0_0_1()); }
	ruleOpMult
	{ after(grammarAccess.getMultiplicativeExpressionAccess().getOpMultParserRuleCall_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpression__Group_1__0__Impl
	rule__UnaryExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExpressionAccess().getAlternatives_1_0()); }
	(rule__UnaryExpression__Alternatives_1_0)
	{ after(grammarAccess.getUnaryExpressionAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExpressionAccess().getUnExpAssignment_1_1()); }
	(rule__UnaryExpression__UnExpAssignment_1_1)
	{ after(grammarAccess.getUnaryExpressionAccess().getUnExpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CastRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CastRule__Group__0__Impl
	rule__CastRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CastRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCastRuleAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getCastRuleAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CastRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CastRule__Group__1__Impl
	rule__CastRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CastRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCastRuleAccess().getTypeAssignment_1()); }
	(rule__CastRule__TypeAssignment_1)
	{ after(grammarAccess.getCastRuleAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CastRule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CastRule__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CastRule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCastRuleAccess().getRightParenthesisKeyword_2()); }
	')'
	{ after(grammarAccess.getCastRuleAccess().getRightParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression__Group__0__Impl
	rule__PostfixExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpressionAccess().getPostfixExpressionAction_0()); }
	()
	{ after(grammarAccess.getPostfixExpressionAccess().getPostfixExpressionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression__Group__1__Impl
	rule__PostfixExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpressionAccess().getAlternatives_1()); }
	(rule__PostfixExpression__Alternatives_1)
	{ after(grammarAccess.getPostfixExpressionAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpressionAccess().getPostfix2Assignment_2()); }
	(rule__PostfixExpression__Postfix2Assignment_2)*
	{ after(grammarAccess.getPostfixExpressionAccess().getPostfix2Assignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixExpression2__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression2__Group_0__0__Impl
	rule__PostfixExpression2__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression2__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpression2Access().getArrayCallAction_0_0()); }
	()
	{ after(grammarAccess.getPostfixExpression2Access().getArrayCallAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression2__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression2__Group_0__1__Impl
	rule__PostfixExpression2__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression2__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpression2Access().getLeftSquareBracketKeyword_0_1()); }
	'['
	{ after(grammarAccess.getPostfixExpression2Access().getLeftSquareBracketKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression2__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression2__Group_0__2__Impl
	rule__PostfixExpression2__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression2__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpression2Access().getExppostAssignment_0_2()); }
	(rule__PostfixExpression2__ExppostAssignment_0_2)
	{ after(grammarAccess.getPostfixExpression2Access().getExppostAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression2__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression2__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression2__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpression2Access().getRightSquareBracketKeyword_0_3()); }
	']'
	{ after(grammarAccess.getPostfixExpression2Access().getRightSquareBracketKeyword_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixExpression2__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression2__Group_1__0__Impl
	rule__PostfixExpression2__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression2__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpression2Access().getFunctionCallAction_1_0()); }
	()
	{ after(grammarAccess.getPostfixExpression2Access().getFunctionCallAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression2__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression2__Group_1__1__Impl
	rule__PostfixExpression2__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression2__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpression2Access().getLeftParenthesisKeyword_1_1()); }
	'('
	{ after(grammarAccess.getPostfixExpression2Access().getLeftParenthesisKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression2__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression2__Group_1__2__Impl
	rule__PostfixExpression2__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression2__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpression2Access().getArgumentExpListAssignment_1_2()); }
	(rule__PostfixExpression2__ArgumentExpListAssignment_1_2)?
	{ after(grammarAccess.getPostfixExpression2Access().getArgumentExpListAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression2__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression2__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression2__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpression2Access().getRightParenthesisKeyword_1_3()); }
	')'
	{ after(grammarAccess.getPostfixExpression2Access().getRightParenthesisKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixExpression2__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression2__Group_2__0__Impl
	rule__PostfixExpression2__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression2__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpression2Access().getDotIDAction_2_0()); }
	()
	{ after(grammarAccess.getPostfixExpression2Access().getDotIDAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression2__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression2__Group_2__1__Impl
	rule__PostfixExpression2__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression2__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpression2Access().getFullStopKeyword_2_1()); }
	'.'
	{ after(grammarAccess.getPostfixExpression2Access().getFullStopKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression2__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression2__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression2__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpression2Access().getNameAssignment_2_2()); }
	(rule__PostfixExpression2__NameAssignment_2_2)
	{ after(grammarAccess.getPostfixExpression2Access().getNameAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixExpression2__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression2__Group_3__0__Impl
	rule__PostfixExpression2__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression2__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpression2Access().getPointerCallAction_3_0()); }
	()
	{ after(grammarAccess.getPostfixExpression2Access().getPointerCallAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression2__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression2__Group_3__1__Impl
	rule__PostfixExpression2__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression2__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpression2Access().getOpPtrParserRuleCall_3_1()); }
	ruleOpPtr
	{ after(grammarAccess.getPostfixExpression2Access().getOpPtrParserRuleCall_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression2__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression2__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression2__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpression2Access().getNameAssignment_3_2()); }
	(rule__PostfixExpression2__NameAssignment_3_2)
	{ after(grammarAccess.getPostfixExpression2Access().getNameAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixExpression2__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression2__Group_4__0__Impl
	rule__PostfixExpression2__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression2__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpression2Access().getIncDecAction_4_0()); }
	()
	{ after(grammarAccess.getPostfixExpression2Access().getIncDecAction_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression2__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression2__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression2__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpression2Access().getOpAssignment_4_1()); }
	(rule__PostfixExpression2__OpAssignment_4_1)
	{ after(grammarAccess.getPostfixExpression2Access().getOpAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixType__Group__0__Impl
	rule__PostfixType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixTypeAccess().getCastRuleParserRuleCall_0()); }
	ruleCastRule
	{ after(grammarAccess.getPostfixTypeAccess().getCastRuleParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixType__Group__1__Impl
	rule__PostfixType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixTypeAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getPostfixTypeAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixType__Group__2__Impl
	rule__PostfixType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixTypeAccess().getInitAssignment_2()); }
	(rule__PostfixType__InitAssignment_2)
	{ after(grammarAccess.getPostfixTypeAccess().getInitAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixType__Group__3__Impl
	rule__PostfixType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixTypeAccess().getCommaKeyword_3()); }
	(',')?
	{ after(grammarAccess.getPostfixTypeAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixType__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixType__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixType__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixTypeAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getPostfixTypeAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_0__0__Impl
	rule__PrimaryExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getCharConstAction_0_0()); }
	()
	{ after(grammarAccess.getPrimaryExpressionAccess().getCharConstAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getChAssignment_0_1()); }
	(rule__PrimaryExpression__ChAssignment_0_1)
	{ after(grammarAccess.getPrimaryExpressionAccess().getChAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_1__0__Impl
	rule__PrimaryExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getStrConstAction_1_0()); }
	()
	{ after(grammarAccess.getPrimaryExpressionAccess().getStrConstAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getStrAssignment_1_1()); }
	(rule__PrimaryExpression__StrAssignment_1_1)
	{ after(grammarAccess.getPrimaryExpressionAccess().getStrAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_3__0__Impl
	rule__PrimaryExpression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getIdentifierAction_3_0()); }
	()
	{ after(grammarAccess.getPrimaryExpressionAccess().getIdentifierAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getNameAssignment_3_1()); }
	(rule__PrimaryExpression__NameAssignment_3_1)
	{ after(grammarAccess.getPrimaryExpressionAccess().getNameAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_4__0__Impl
	rule__PrimaryExpression__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_4_0()); }
	'('
	{ after(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_4__1__Impl
	rule__PrimaryExpression__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getExpressionCParserRuleCall_4_1()); }
	ruleExpressionC
	{ after(grammarAccess.getPrimaryExpressionAccess().getExpressionCParserRuleCall_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_4_2()); }
	')'
	{ after(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArgumentExpressionList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentExpressionList__Group__0__Impl
	rule__ArgumentExpressionList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentExpressionList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentExpressionListAccess().getAssignmentExpressionParserRuleCall_0()); }
	ruleAssignmentExpression
	{ after(grammarAccess.getArgumentExpressionListAccess().getAssignmentExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentExpressionList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentExpressionList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentExpressionList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentExpressionListAccess().getGroup_1()); }
	(rule__ArgumentExpressionList__Group_1__0)*
	{ after(grammarAccess.getArgumentExpressionListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArgumentExpressionList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentExpressionList__Group_1__0__Impl
	rule__ArgumentExpressionList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentExpressionList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentExpressionListAccess().getGroup_1_0()); }
	(rule__ArgumentExpressionList__Group_1_0__0)
	{ after(grammarAccess.getArgumentExpressionListAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentExpressionList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentExpressionList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentExpressionList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentExpressionListAccess().getRightAssignment_1_1()); }
	(rule__ArgumentExpressionList__RightAssignment_1_1)
	{ after(grammarAccess.getArgumentExpressionListAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArgumentExpressionList__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentExpressionList__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentExpressionList__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentExpressionListAccess().getGroup_1_0_0()); }
	(rule__ArgumentExpressionList__Group_1_0_0__0)
	{ after(grammarAccess.getArgumentExpressionListAccess().getGroup_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArgumentExpressionList__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentExpressionList__Group_1_0_0__0__Impl
	rule__ArgumentExpressionList__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentExpressionList__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentExpressionListAccess().getArgumentExpLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getArgumentExpressionListAccess().getArgumentExpLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentExpressionList__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentExpressionList__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentExpressionList__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentExpressionListAccess().getCommaKeyword_1_0_0_1()); }
	','
	{ after(grammarAccess.getArgumentExpressionListAccess().getCommaKeyword_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Constant__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant__Group_0__0__Impl
	rule__Constant__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantAccess().getIntConstAction_0_0()); }
	()
	{ after(grammarAccess.getConstantAccess().getIntConstAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantAccess().getIntCAssignment_0_1()); }
	(rule__Constant__IntCAssignment_0_1)
	{ after(grammarAccess.getConstantAccess().getIntCAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Constant__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant__Group_1__0__Impl
	rule__Constant__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantAccess().getFloatConstAction_1_0()); }
	()
	{ after(grammarAccess.getConstantAccess().getFloatConstAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantAccess().getFloatCAssignment_1_1()); }
	(rule__Constant__FloatCAssignment_1_1)
	{ after(grammarAccess.getConstantAccess().getFloatCAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GenericSelection__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GenericSelection__Group__0__Impl
	rule__GenericSelection__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericSelection__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGenericSelectionAccess().get_GenericKeyword_0()); }
	'_Generic'
	{ after(grammarAccess.getGenericSelectionAccess().get_GenericKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericSelection__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GenericSelection__Group__1__Impl
	rule__GenericSelection__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericSelection__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGenericSelectionAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getGenericSelectionAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericSelection__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GenericSelection__Group__2__Impl
	rule__GenericSelection__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericSelection__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGenericSelectionAccess().getExpAssignment_2()); }
	(rule__GenericSelection__ExpAssignment_2)
	{ after(grammarAccess.getGenericSelectionAccess().getExpAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericSelection__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GenericSelection__Group__3__Impl
	rule__GenericSelection__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericSelection__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGenericSelectionAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getGenericSelectionAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericSelection__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GenericSelection__Group__4__Impl
	rule__GenericSelection__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericSelection__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGenericSelectionAccess().getGenericAssocListAssignment_4()); }
	(rule__GenericSelection__GenericAssocListAssignment_4)
	{ after(grammarAccess.getGenericSelectionAccess().getGenericAssocListAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericSelection__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GenericSelection__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericSelection__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGenericSelectionAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getGenericSelectionAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GenericAssocList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GenericAssocList__Group__0__Impl
	rule__GenericAssocList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericAssocList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGenericAssocListAccess().getGenericAssociationParserRuleCall_0()); }
	ruleGenericAssociation
	{ after(grammarAccess.getGenericAssocListAccess().getGenericAssociationParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericAssocList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GenericAssocList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericAssocList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGenericAssocListAccess().getGroup_1()); }
	(rule__GenericAssocList__Group_1__0)*
	{ after(grammarAccess.getGenericAssocListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GenericAssocList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GenericAssocList__Group_1__0__Impl
	rule__GenericAssocList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericAssocList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGenericAssocListAccess().getGroup_1_0()); }
	(rule__GenericAssocList__Group_1_0__0)
	{ after(grammarAccess.getGenericAssocListAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericAssocList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GenericAssocList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericAssocList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGenericAssocListAccess().getRightAssignment_1_1()); }
	(rule__GenericAssocList__RightAssignment_1_1)
	{ after(grammarAccess.getGenericAssocListAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GenericAssocList__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GenericAssocList__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericAssocList__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGenericAssocListAccess().getGroup_1_0_0()); }
	(rule__GenericAssocList__Group_1_0_0__0)
	{ after(grammarAccess.getGenericAssocListAccess().getGroup_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GenericAssocList__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GenericAssocList__Group_1_0_0__0__Impl
	rule__GenericAssocList__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericAssocList__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGenericAssocListAccess().getGenericAssocLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getGenericAssocListAccess().getGenericAssocLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericAssocList__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GenericAssocList__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericAssocList__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGenericAssocListAccess().getCommaKeyword_1_0_0_1()); }
	','
	{ after(grammarAccess.getGenericAssocListAccess().getCommaKeyword_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GenericAssociation__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GenericAssociation__Group_0__0__Impl
	rule__GenericAssociation__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericAssociation__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGenericAssociationAccess().getTypeAssignment_0_0()); }
	(rule__GenericAssociation__TypeAssignment_0_0)
	{ after(grammarAccess.getGenericAssociationAccess().getTypeAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericAssociation__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GenericAssociation__Group_0__1__Impl
	rule__GenericAssociation__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericAssociation__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGenericAssociationAccess().getColonKeyword_0_1()); }
	':'
	{ after(grammarAccess.getGenericAssociationAccess().getColonKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericAssociation__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GenericAssociation__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericAssociation__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGenericAssociationAccess().getAssExpAssignment_0_2()); }
	(rule__GenericAssociation__AssExpAssignment_0_2)
	{ after(grammarAccess.getGenericAssociationAccess().getAssExpAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GenericAssociation__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GenericAssociation__Group_1__0__Impl
	rule__GenericAssociation__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericAssociation__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGenericAssociationAccess().getDefaultKeyword_1_0()); }
	'default'
	{ after(grammarAccess.getGenericAssociationAccess().getDefaultKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericAssociation__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GenericAssociation__Group_1__1__Impl
	rule__GenericAssociation__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericAssociation__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGenericAssociationAccess().getColonKeyword_1_1()); }
	':'
	{ after(grammarAccess.getGenericAssociationAccess().getColonKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericAssociation__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GenericAssociation__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericAssociation__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGenericAssociationAccess().getExpAssignment_1_2()); }
	(rule__GenericAssociation__ExpAssignment_1_2)
	{ after(grammarAccess.getGenericAssociationAccess().getExpAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declaration__Group_0__0__Impl
	rule__Declaration__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclarationAccess().getDeclarationInitDeclaratorListAction_0_0()); }
	()
	{ after(grammarAccess.getDeclarationAccess().getDeclarationInitDeclaratorListAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declaration__Group_0__1__Impl
	rule__Declaration__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getDeclarationAccess().getDeclarationSpecAssignment_0_1()); }
		(rule__Declaration__DeclarationSpecAssignment_0_1)
		{ after(grammarAccess.getDeclarationAccess().getDeclarationSpecAssignment_0_1()); }
	)
	(
		{ before(grammarAccess.getDeclarationAccess().getDeclarationSpecAssignment_0_1()); }
		(rule__Declaration__DeclarationSpecAssignment_0_1)*
		{ after(grammarAccess.getDeclarationAccess().getDeclarationSpecAssignment_0_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declaration__Group_0__2__Impl
	rule__Declaration__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclarationAccess().getDeclaratorListAssignment_0_2()); }
	(rule__Declaration__DeclaratorListAssignment_0_2)?
	{ after(grammarAccess.getDeclarationAccess().getDeclaratorListAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declaration__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclarationAccess().getSemicolonKeyword_0_3()); }
	';'
	{ after(grammarAccess.getDeclarationAccess().getSemicolonKeyword_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InitDeclaratorList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitDeclaratorList__Group__0__Impl
	rule__InitDeclaratorList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InitDeclaratorList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitDeclaratorListAccess().getIniDecAssignment_0()); }
	(rule__InitDeclaratorList__IniDecAssignment_0)
	{ after(grammarAccess.getInitDeclaratorListAccess().getIniDecAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitDeclaratorList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitDeclaratorList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InitDeclaratorList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitDeclaratorListAccess().getGroup_1()); }
	(rule__InitDeclaratorList__Group_1__0)*
	{ after(grammarAccess.getInitDeclaratorListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InitDeclaratorList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitDeclaratorList__Group_1__0__Impl
	rule__InitDeclaratorList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InitDeclaratorList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitDeclaratorListAccess().getGroup_1_0()); }
	(rule__InitDeclaratorList__Group_1_0__0)
	{ after(grammarAccess.getInitDeclaratorListAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitDeclaratorList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitDeclaratorList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InitDeclaratorList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitDeclaratorListAccess().getRightAssignment_1_1()); }
	(rule__InitDeclaratorList__RightAssignment_1_1)
	{ after(grammarAccess.getInitDeclaratorListAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InitDeclaratorList__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitDeclaratorList__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InitDeclaratorList__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitDeclaratorListAccess().getGroup_1_0_0()); }
	(rule__InitDeclaratorList__Group_1_0_0__0)
	{ after(grammarAccess.getInitDeclaratorListAccess().getGroup_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InitDeclaratorList__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitDeclaratorList__Group_1_0_0__0__Impl
	rule__InitDeclaratorList__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InitDeclaratorList__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitDeclaratorListAccess().getInitDeclaListLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getInitDeclaratorListAccess().getInitDeclaListLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitDeclaratorList__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitDeclaratorList__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InitDeclaratorList__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitDeclaratorListAccess().getCommaKeyword_1_0_0_1()); }
	','
	{ after(grammarAccess.getInitDeclaratorListAccess().getCommaKeyword_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InitDeclarator__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitDeclarator__Group__0__Impl
	rule__InitDeclarator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InitDeclarator__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitDeclaratorAccess().getDecAssignment_0()); }
	(rule__InitDeclarator__DecAssignment_0)
	{ after(grammarAccess.getInitDeclaratorAccess().getDecAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitDeclarator__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitDeclarator__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InitDeclarator__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitDeclaratorAccess().getGroup_1()); }
	(rule__InitDeclarator__Group_1__0)?
	{ after(grammarAccess.getInitDeclaratorAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InitDeclarator__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitDeclarator__Group_1__0__Impl
	rule__InitDeclarator__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InitDeclarator__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitDeclaratorAccess().getEqualsSignKeyword_1_0()); }
	'='
	{ after(grammarAccess.getInitDeclaratorAccess().getEqualsSignKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitDeclarator__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitDeclarator__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InitDeclarator__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitDeclaratorAccess().getInitAssignment_1_1()); }
	(rule__InitDeclarator__InitAssignment_1_1)
	{ after(grammarAccess.getInitDeclaratorAccess().getInitAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeSpecifier__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSpecifier__Group__0__Impl
	rule__TypeSpecifier__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSpecifierAccess().getTypeSpecifierAction_0()); }
	()
	{ after(grammarAccess.getTypeSpecifierAccess().getTypeSpecifierAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSpecifier__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSpecifierAccess().getAlternatives_1()); }
	(rule__TypeSpecifier__Alternatives_1)
	{ after(grammarAccess.getTypeSpecifierAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StructOrUnionSpecifier__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructOrUnionSpecifier__Group__0__Impl
	rule__StructOrUnionSpecifier__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructOrUnionSpecifier__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructOrUnionSpecifierAccess().getStructListAction_0()); }
	()
	{ after(grammarAccess.getStructOrUnionSpecifierAccess().getStructListAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructOrUnionSpecifier__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructOrUnionSpecifier__Group__1__Impl
	rule__StructOrUnionSpecifier__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StructOrUnionSpecifier__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructOrUnionSpecifierAccess().getStructOrUnionParserRuleCall_1()); }
	ruleStructOrUnion
	{ after(grammarAccess.getStructOrUnionSpecifierAccess().getStructOrUnionParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructOrUnionSpecifier__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructOrUnionSpecifier__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructOrUnionSpecifier__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructOrUnionSpecifierAccess().getAlternatives_2()); }
	(rule__StructOrUnionSpecifier__Alternatives_2)
	{ after(grammarAccess.getStructOrUnionSpecifierAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StructOrUnionSpecifier__Group_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructOrUnionSpecifier__Group_2_0__0__Impl
	rule__StructOrUnionSpecifier__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructOrUnionSpecifier__Group_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructOrUnionSpecifierAccess().getLeftCurlyBracketKeyword_2_0_0()); }
	'{'
	{ after(grammarAccess.getStructOrUnionSpecifierAccess().getLeftCurlyBracketKeyword_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructOrUnionSpecifier__Group_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructOrUnionSpecifier__Group_2_0__1__Impl
	rule__StructOrUnionSpecifier__Group_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StructOrUnionSpecifier__Group_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructOrUnionSpecifierAccess().getStructListAssignment_2_0_1()); }
	(rule__StructOrUnionSpecifier__StructListAssignment_2_0_1)
	{ after(grammarAccess.getStructOrUnionSpecifierAccess().getStructListAssignment_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructOrUnionSpecifier__Group_2_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructOrUnionSpecifier__Group_2_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructOrUnionSpecifier__Group_2_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructOrUnionSpecifierAccess().getRightCurlyBracketKeyword_2_0_2()); }
	'}'
	{ after(grammarAccess.getStructOrUnionSpecifierAccess().getRightCurlyBracketKeyword_2_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StructOrUnionSpecifier__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructOrUnionSpecifier__Group_2_1__0__Impl
	rule__StructOrUnionSpecifier__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructOrUnionSpecifier__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructOrUnionSpecifierAccess().getIDTerminalRuleCall_2_1_0()); }
	RULE_ID
	{ after(grammarAccess.getStructOrUnionSpecifierAccess().getIDTerminalRuleCall_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructOrUnionSpecifier__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructOrUnionSpecifier__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructOrUnionSpecifier__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructOrUnionSpecifierAccess().getGroup_2_1_1()); }
	(rule__StructOrUnionSpecifier__Group_2_1_1__0)?
	{ after(grammarAccess.getStructOrUnionSpecifierAccess().getGroup_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StructOrUnionSpecifier__Group_2_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructOrUnionSpecifier__Group_2_1_1__0__Impl
	rule__StructOrUnionSpecifier__Group_2_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructOrUnionSpecifier__Group_2_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructOrUnionSpecifierAccess().getLeftCurlyBracketKeyword_2_1_1_0()); }
	'{'
	{ after(grammarAccess.getStructOrUnionSpecifierAccess().getLeftCurlyBracketKeyword_2_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructOrUnionSpecifier__Group_2_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructOrUnionSpecifier__Group_2_1_1__1__Impl
	rule__StructOrUnionSpecifier__Group_2_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StructOrUnionSpecifier__Group_2_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructOrUnionSpecifierAccess().getStructListAssignment_2_1_1_1()); }
	(rule__StructOrUnionSpecifier__StructListAssignment_2_1_1_1)
	{ after(grammarAccess.getStructOrUnionSpecifierAccess().getStructListAssignment_2_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructOrUnionSpecifier__Group_2_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructOrUnionSpecifier__Group_2_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructOrUnionSpecifier__Group_2_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructOrUnionSpecifierAccess().getRightCurlyBracketKeyword_2_1_1_2()); }
	'}'
	{ after(grammarAccess.getStructOrUnionSpecifierAccess().getRightCurlyBracketKeyword_2_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StructDeclaration__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructDeclaration__Group_0__0__Impl
	rule__StructDeclaration__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaration__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructDeclarationAccess().getSpecifierStuctListAction_0_0()); }
	()
	{ after(grammarAccess.getStructDeclarationAccess().getSpecifierStuctListAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaration__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructDeclaration__Group_0__1__Impl
	rule__StructDeclaration__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaration__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructDeclarationAccess().getSpecifierListAssignment_0_1()); }
	(rule__StructDeclaration__SpecifierListAssignment_0_1)
	{ after(grammarAccess.getStructDeclarationAccess().getSpecifierListAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaration__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructDeclaration__Group_0__2__Impl
	rule__StructDeclaration__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaration__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructDeclarationAccess().getStructListAssignment_0_2()); }
	(rule__StructDeclaration__StructListAssignment_0_2)?
	{ after(grammarAccess.getStructDeclarationAccess().getStructListAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaration__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructDeclaration__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaration__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructDeclarationAccess().getSemicolonKeyword_0_3()); }
	';'
	{ after(grammarAccess.getStructDeclarationAccess().getSemicolonKeyword_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SpecifierQualifierList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SpecifierQualifierList__Group__0__Impl
	rule__SpecifierQualifierList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecifierQualifierList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpecifierQualifierListAccess().getTypeSpecifierListAction_0()); }
	()
	{ after(grammarAccess.getSpecifierQualifierListAccess().getTypeSpecifierListAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecifierQualifierList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SpecifierQualifierList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecifierQualifierList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getSpecifierQualifierListAccess().getAlternatives_1()); }
		(rule__SpecifierQualifierList__Alternatives_1)
		{ after(grammarAccess.getSpecifierQualifierListAccess().getAlternatives_1()); }
	)
	(
		{ before(grammarAccess.getSpecifierQualifierListAccess().getAlternatives_1()); }
		(rule__SpecifierQualifierList__Alternatives_1)*
		{ after(grammarAccess.getSpecifierQualifierListAccess().getAlternatives_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StructDeclaratorList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructDeclaratorList__Group__0__Impl
	rule__StructDeclaratorList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaratorList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructDeclaratorListAccess().getStructDeclaratorParserRuleCall_0()); }
	ruleStructDeclarator
	{ after(grammarAccess.getStructDeclaratorListAccess().getStructDeclaratorParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaratorList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructDeclaratorList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaratorList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructDeclaratorListAccess().getGroup_1()); }
	(rule__StructDeclaratorList__Group_1__0)*
	{ after(grammarAccess.getStructDeclaratorListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StructDeclaratorList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructDeclaratorList__Group_1__0__Impl
	rule__StructDeclaratorList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaratorList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructDeclaratorListAccess().getGroup_1_0()); }
	(rule__StructDeclaratorList__Group_1_0__0)
	{ after(grammarAccess.getStructDeclaratorListAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaratorList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructDeclaratorList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaratorList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructDeclaratorListAccess().getRightAssignment_1_1()); }
	(rule__StructDeclaratorList__RightAssignment_1_1)
	{ after(grammarAccess.getStructDeclaratorListAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StructDeclaratorList__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructDeclaratorList__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaratorList__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructDeclaratorListAccess().getGroup_1_0_0()); }
	(rule__StructDeclaratorList__Group_1_0_0__0)
	{ after(grammarAccess.getStructDeclaratorListAccess().getGroup_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StructDeclaratorList__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructDeclaratorList__Group_1_0_0__0__Impl
	rule__StructDeclaratorList__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaratorList__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructDeclaratorListAccess().getStructListLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getStructDeclaratorListAccess().getStructListLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaratorList__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructDeclaratorList__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaratorList__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructDeclaratorListAccess().getCommaKeyword_1_0_0_1()); }
	','
	{ after(grammarAccess.getStructDeclaratorListAccess().getCommaKeyword_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StructDeclarator__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructDeclarator__Group_0__0__Impl
	rule__StructDeclarator__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclarator__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructDeclaratorAccess().getStructConstantExpAction_0_0()); }
	()
	{ after(grammarAccess.getStructDeclaratorAccess().getStructConstantExpAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclarator__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructDeclarator__Group_0__1__Impl
	rule__StructDeclarator__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclarator__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructDeclaratorAccess().getColonKeyword_0_1()); }
	':'
	{ after(grammarAccess.getStructDeclaratorAccess().getColonKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclarator__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructDeclarator__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclarator__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructDeclaratorAccess().getConstantExpAssignment_0_2()); }
	(rule__StructDeclarator__ConstantExpAssignment_0_2)
	{ after(grammarAccess.getStructDeclaratorAccess().getConstantExpAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StructDeclarator__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructDeclarator__Group_1__0__Impl
	rule__StructDeclarator__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclarator__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructDeclaratorAccess().getDeclaratorConstantExpAction_1_0()); }
	()
	{ after(grammarAccess.getStructDeclaratorAccess().getDeclaratorConstantExpAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclarator__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructDeclarator__Group_1__1__Impl
	rule__StructDeclarator__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclarator__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructDeclaratorAccess().getDeclAssignment_1_1()); }
	(rule__StructDeclarator__DeclAssignment_1_1)
	{ after(grammarAccess.getStructDeclaratorAccess().getDeclAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclarator__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructDeclarator__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclarator__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructDeclaratorAccess().getGroup_1_2()); }
	(rule__StructDeclarator__Group_1_2__0)?
	{ after(grammarAccess.getStructDeclaratorAccess().getGroup_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StructDeclarator__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructDeclarator__Group_1_2__0__Impl
	rule__StructDeclarator__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclarator__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructDeclaratorAccess().getColonKeyword_1_2_0()); }
	':'
	{ after(grammarAccess.getStructDeclaratorAccess().getColonKeyword_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclarator__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructDeclarator__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclarator__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructDeclaratorAccess().getConstantExpAssignment_1_2_1()); }
	(rule__StructDeclarator__ConstantExpAssignment_1_2_1)
	{ after(grammarAccess.getStructDeclaratorAccess().getConstantExpAssignment_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumSpecifier__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumSpecifier__Group__0__Impl
	rule__EnumSpecifier__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumSpecifier__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumSpecifierAccess().getEnumSpecificAction_0()); }
	()
	{ after(grammarAccess.getEnumSpecifierAccess().getEnumSpecificAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumSpecifier__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumSpecifier__Group__1__Impl
	rule__EnumSpecifier__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumSpecifier__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumSpecifierAccess().getEnumKeyword_1()); }
	'enum'
	{ after(grammarAccess.getEnumSpecifierAccess().getEnumKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumSpecifier__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumSpecifier__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumSpecifier__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumSpecifierAccess().getAlternatives_2()); }
	(rule__EnumSpecifier__Alternatives_2)
	{ after(grammarAccess.getEnumSpecifierAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumSpecifier__Group_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumSpecifier__Group_2_0__0__Impl
	rule__EnumSpecifier__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumSpecifier__Group_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumSpecifierAccess().getLeftCurlyBracketKeyword_2_0_0()); }
	'{'
	{ after(grammarAccess.getEnumSpecifierAccess().getLeftCurlyBracketKeyword_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumSpecifier__Group_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumSpecifier__Group_2_0__1__Impl
	rule__EnumSpecifier__Group_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumSpecifier__Group_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumSpecifierAccess().getEnumListAssignment_2_0_1()); }
	(rule__EnumSpecifier__EnumListAssignment_2_0_1)
	{ after(grammarAccess.getEnumSpecifierAccess().getEnumListAssignment_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumSpecifier__Group_2_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumSpecifier__Group_2_0__2__Impl
	rule__EnumSpecifier__Group_2_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumSpecifier__Group_2_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumSpecifierAccess().getCommaKeyword_2_0_2()); }
	(',')?
	{ after(grammarAccess.getEnumSpecifierAccess().getCommaKeyword_2_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumSpecifier__Group_2_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumSpecifier__Group_2_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumSpecifier__Group_2_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumSpecifierAccess().getRightCurlyBracketKeyword_2_0_3()); }
	'}'
	{ after(grammarAccess.getEnumSpecifierAccess().getRightCurlyBracketKeyword_2_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumSpecifier__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumSpecifier__Group_2_1__0__Impl
	rule__EnumSpecifier__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumSpecifier__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumSpecifierAccess().getIDTerminalRuleCall_2_1_0()); }
	RULE_ID
	{ after(grammarAccess.getEnumSpecifierAccess().getIDTerminalRuleCall_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumSpecifier__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumSpecifier__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumSpecifier__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumSpecifierAccess().getGroup_2_1_1()); }
	(rule__EnumSpecifier__Group_2_1_1__0)?
	{ after(grammarAccess.getEnumSpecifierAccess().getGroup_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumSpecifier__Group_2_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumSpecifier__Group_2_1_1__0__Impl
	rule__EnumSpecifier__Group_2_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumSpecifier__Group_2_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumSpecifierAccess().getLeftCurlyBracketKeyword_2_1_1_0()); }
	'{'
	{ after(grammarAccess.getEnumSpecifierAccess().getLeftCurlyBracketKeyword_2_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumSpecifier__Group_2_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumSpecifier__Group_2_1_1__1__Impl
	rule__EnumSpecifier__Group_2_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumSpecifier__Group_2_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumSpecifierAccess().getEnumListAssignment_2_1_1_1()); }
	(rule__EnumSpecifier__EnumListAssignment_2_1_1_1)
	{ after(grammarAccess.getEnumSpecifierAccess().getEnumListAssignment_2_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumSpecifier__Group_2_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumSpecifier__Group_2_1_1__2__Impl
	rule__EnumSpecifier__Group_2_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumSpecifier__Group_2_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumSpecifierAccess().getCommaKeyword_2_1_1_2()); }
	(',')?
	{ after(grammarAccess.getEnumSpecifierAccess().getCommaKeyword_2_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumSpecifier__Group_2_1_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumSpecifier__Group_2_1_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumSpecifier__Group_2_1_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumSpecifierAccess().getRightCurlyBracketKeyword_2_1_1_3()); }
	'}'
	{ after(grammarAccess.getEnumSpecifierAccess().getRightCurlyBracketKeyword_2_1_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumeratorList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumeratorList__Group__0__Impl
	rule__EnumeratorList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratorList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumeratorListAccess().getEnumeratorParserRuleCall_0()); }
	ruleEnumerator
	{ after(grammarAccess.getEnumeratorListAccess().getEnumeratorParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratorList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumeratorList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratorList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumeratorListAccess().getGroup_1()); }
	(rule__EnumeratorList__Group_1__0)*
	{ after(grammarAccess.getEnumeratorListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumeratorList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumeratorList__Group_1__0__Impl
	rule__EnumeratorList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratorList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumeratorListAccess().getGroup_1_0()); }
	(rule__EnumeratorList__Group_1_0__0)
	{ after(grammarAccess.getEnumeratorListAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratorList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumeratorList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratorList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumeratorListAccess().getRightAssignment_1_1()); }
	(rule__EnumeratorList__RightAssignment_1_1)
	{ after(grammarAccess.getEnumeratorListAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumeratorList__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumeratorList__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratorList__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumeratorListAccess().getGroup_1_0_0()); }
	(rule__EnumeratorList__Group_1_0_0__0)
	{ after(grammarAccess.getEnumeratorListAccess().getGroup_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumeratorList__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumeratorList__Group_1_0_0__0__Impl
	rule__EnumeratorList__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratorList__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumeratorListAccess().getEnumListLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getEnumeratorListAccess().getEnumListLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratorList__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumeratorList__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratorList__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumeratorListAccess().getCommaKeyword_1_0_0_1()); }
	','
	{ after(grammarAccess.getEnumeratorListAccess().getCommaKeyword_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Enumerator__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enumerator__Group__0__Impl
	rule__Enumerator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumerator__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumeratorAccess().getEnumAttAction_0()); }
	()
	{ after(grammarAccess.getEnumeratorAccess().getEnumAttAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumerator__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enumerator__Group__1__Impl
	rule__Enumerator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumerator__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumeratorAccess().getEnumConstAssignment_1()); }
	(rule__Enumerator__EnumConstAssignment_1)
	{ after(grammarAccess.getEnumeratorAccess().getEnumConstAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumerator__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enumerator__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumerator__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumeratorAccess().getGroup_2()); }
	(rule__Enumerator__Group_2__0)?
	{ after(grammarAccess.getEnumeratorAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Enumerator__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enumerator__Group_2__0__Impl
	rule__Enumerator__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumerator__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumeratorAccess().getEqualsSignKeyword_2_0()); }
	'='
	{ after(grammarAccess.getEnumeratorAccess().getEqualsSignKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumerator__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enumerator__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumerator__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumeratorAccess().getExpAssignment_2_1()); }
	(rule__Enumerator__ExpAssignment_2_1)
	{ after(grammarAccess.getEnumeratorAccess().getExpAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicTypeSpecifier__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicTypeSpecifier__Group__0__Impl
	rule__AtomicTypeSpecifier__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicTypeSpecifier__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicTypeSpecifierAccess().get_AtomicKeyword_0()); }
	'_Atomic'
	{ after(grammarAccess.getAtomicTypeSpecifierAccess().get_AtomicKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicTypeSpecifier__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicTypeSpecifier__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicTypeSpecifier__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicTypeSpecifierAccess().getCastRuleParserRuleCall_1()); }
	ruleCastRule
	{ after(grammarAccess.getAtomicTypeSpecifierAccess().getCastRuleParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AlignmentSpecifier__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlignmentSpecifier__Group__0__Impl
	rule__AlignmentSpecifier__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AlignmentSpecifier__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlignmentSpecifierAccess().getAlignmentAction_0()); }
	()
	{ after(grammarAccess.getAlignmentSpecifierAccess().getAlignmentAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlignmentSpecifier__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlignmentSpecifier__Group__1__Impl
	rule__AlignmentSpecifier__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AlignmentSpecifier__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlignmentSpecifierAccess().getAlignasParserRuleCall_1()); }
	ruleAlignas
	{ after(grammarAccess.getAlignmentSpecifierAccess().getAlignasParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlignmentSpecifier__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlignmentSpecifier__Group__2__Impl
	rule__AlignmentSpecifier__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AlignmentSpecifier__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlignmentSpecifierAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getAlignmentSpecifierAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlignmentSpecifier__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlignmentSpecifier__Group__3__Impl
	rule__AlignmentSpecifier__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AlignmentSpecifier__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlignmentSpecifierAccess().getAlternatives_3()); }
	(rule__AlignmentSpecifier__Alternatives_3)
	{ after(grammarAccess.getAlignmentSpecifierAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlignmentSpecifier__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlignmentSpecifier__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AlignmentSpecifier__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlignmentSpecifierAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getAlignmentSpecifierAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Declarator__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declarator__Group__0__Impl
	rule__Declarator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarator__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclaratorAccess().getPointAssignment_0()); }
	(rule__Declarator__PointAssignment_0)?
	{ after(grammarAccess.getDeclaratorAccess().getPointAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarator__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declarator__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarator__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclaratorAccess().getDirectDeclAssignment_1()); }
	(rule__Declarator__DirectDeclAssignment_1)
	{ after(grammarAccess.getDeclaratorAccess().getDirectDeclAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DirectDeclarator__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectDeclarator__Group__0__Impl
	rule__DirectDeclarator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectDeclaratorAccess().getDirectDeclaratorAction_0()); }
	()
	{ after(grammarAccess.getDirectDeclaratorAccess().getDirectDeclaratorAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectDeclarator__Group__1__Impl
	rule__DirectDeclarator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectDeclaratorAccess().getAlternatives_1()); }
	(rule__DirectDeclarator__Alternatives_1)
	{ after(grammarAccess.getDirectDeclaratorAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectDeclarator__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectDeclaratorAccess().getDeclarator2Assignment_2()); }
	(rule__DirectDeclarator__Declarator2Assignment_2)*
	{ after(grammarAccess.getDirectDeclaratorAccess().getDeclarator2Assignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DirectDeclarator__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectDeclarator__Group_1_1__0__Impl
	rule__DirectDeclarator__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectDeclaratorAccess().getLeftParenthesisKeyword_1_1_0()); }
	'('
	{ after(grammarAccess.getDirectDeclaratorAccess().getLeftParenthesisKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectDeclarator__Group_1_1__1__Impl
	rule__DirectDeclarator__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectDeclaratorAccess().getDcAssignment_1_1_1()); }
	(rule__DirectDeclarator__DcAssignment_1_1_1)?
	{ after(grammarAccess.getDirectDeclaratorAccess().getDcAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectDeclarator__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectDeclaratorAccess().getRightParenthesisKeyword_1_1_2()); }
	')'
	{ after(grammarAccess.getDirectDeclaratorAccess().getRightParenthesisKeyword_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DirectDeclarator2__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectDeclarator2__Group_0__0__Impl
	rule__DirectDeclarator2__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectDeclarator2Access().getD2Action_0_0()); }
	()
	{ after(grammarAccess.getDirectDeclarator2Access().getD2Action_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectDeclarator2__Group_0__1__Impl
	rule__DirectDeclarator2__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectDeclarator2Access().getLeftSquareBracketKeyword_0_1()); }
	'['
	{ after(grammarAccess.getDirectDeclarator2Access().getLeftSquareBracketKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectDeclarator2__Group_0__2__Impl
	rule__DirectDeclarator2__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectDeclarator2Access().getAsteriskKeyword_0_2()); }
	('*')?
	{ after(grammarAccess.getDirectDeclarator2Access().getAsteriskKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectDeclarator2__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectDeclarator2Access().getRightSquareBracketKeyword_0_3()); }
	']'
	{ after(grammarAccess.getDirectDeclarator2Access().getRightSquareBracketKeyword_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DirectDeclarator2__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectDeclarator2__Group_1__0__Impl
	rule__DirectDeclarator2__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectDeclarator2Access().getD3Action_1_0()); }
	()
	{ after(grammarAccess.getDirectDeclarator2Access().getD3Action_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectDeclarator2__Group_1__1__Impl
	rule__DirectDeclarator2__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectDeclarator2Access().getLeftSquareBracketKeyword_1_1()); }
	'['
	{ after(grammarAccess.getDirectDeclarator2Access().getLeftSquareBracketKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectDeclarator2__Group_1__2__Impl
	rule__DirectDeclarator2__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectDeclarator2Access().getStaticKeyword_1_2()); }
	'static'
	{ after(grammarAccess.getDirectDeclarator2Access().getStaticKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectDeclarator2__Group_1__3__Impl
	rule__DirectDeclarator2__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectDeclarator2Access().getTypeQualListAssignment_1_3()); }
	(rule__DirectDeclarator2__TypeQualListAssignment_1_3)
	{ after(grammarAccess.getDirectDeclarator2Access().getTypeQualListAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectDeclarator2__Group_1__4__Impl
	rule__DirectDeclarator2__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectDeclarator2Access().getExpAssignment_1_4()); }
	(rule__DirectDeclarator2__ExpAssignment_1_4)
	{ after(grammarAccess.getDirectDeclarator2Access().getExpAssignment_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectDeclarator2__Group_1__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectDeclarator2Access().getRightSquareBracketKeyword_1_5()); }
	']'
	{ after(grammarAccess.getDirectDeclarator2Access().getRightSquareBracketKeyword_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DirectDeclarator2__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectDeclarator2__Group_2__0__Impl
	rule__DirectDeclarator2__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectDeclarator2Access().getD4Action_2_0()); }
	()
	{ after(grammarAccess.getDirectDeclarator2Access().getD4Action_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectDeclarator2__Group_2__1__Impl
	rule__DirectDeclarator2__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectDeclarator2Access().getLeftSquareBracketKeyword_2_1()); }
	'['
	{ after(grammarAccess.getDirectDeclarator2Access().getLeftSquareBracketKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectDeclarator2__Group_2__2__Impl
	rule__DirectDeclarator2__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectDeclarator2Access().getStaticKeyword_2_2()); }
	'static'
	{ after(grammarAccess.getDirectDeclarator2Access().getStaticKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectDeclarator2__Group_2__3__Impl
	rule__DirectDeclarator2__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectDeclarator2Access().getExpAssignment_2_3()); }
	(rule__DirectDeclarator2__ExpAssignment_2_3)
	{ after(grammarAccess.getDirectDeclarator2Access().getExpAssignment_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectDeclarator2__Group_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectDeclarator2Access().getRightSquareBracketKeyword_2_4()); }
	']'
	{ after(grammarAccess.getDirectDeclarator2Access().getRightSquareBracketKeyword_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DirectDeclarator2__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectDeclarator2__Group_3__0__Impl
	rule__DirectDeclarator2__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectDeclarator2Access().getD5Action_3_0()); }
	()
	{ after(grammarAccess.getDirectDeclarator2Access().getD5Action_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectDeclarator2__Group_3__1__Impl
	rule__DirectDeclarator2__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectDeclarator2Access().getLeftSquareBracketKeyword_3_1()); }
	'['
	{ after(grammarAccess.getDirectDeclarator2Access().getLeftSquareBracketKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectDeclarator2__Group_3__2__Impl
	rule__DirectDeclarator2__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectDeclarator2Access().getTypeQualListAssignment_3_2()); }
	(rule__DirectDeclarator2__TypeQualListAssignment_3_2)
	{ after(grammarAccess.getDirectDeclarator2Access().getTypeQualListAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectDeclarator2__Group_3__3__Impl
	rule__DirectDeclarator2__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectDeclarator2Access().getAsteriskKeyword_3_3()); }
	'*'
	{ after(grammarAccess.getDirectDeclarator2Access().getAsteriskKeyword_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_3__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectDeclarator2__Group_3__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_3__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectDeclarator2Access().getRightSquareBracketKeyword_3_4()); }
	']'
	{ after(grammarAccess.getDirectDeclarator2Access().getRightSquareBracketKeyword_3_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DirectDeclarator2__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectDeclarator2__Group_4__0__Impl
	rule__DirectDeclarator2__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectDeclarator2Access().getD6Action_4_0()); }
	()
	{ after(grammarAccess.getDirectDeclarator2Access().getD6Action_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectDeclarator2__Group_4__1__Impl
	rule__DirectDeclarator2__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectDeclarator2Access().getLeftSquareBracketKeyword_4_1()); }
	'['
	{ after(grammarAccess.getDirectDeclarator2Access().getLeftSquareBracketKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectDeclarator2__Group_4__2__Impl
	rule__DirectDeclarator2__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectDeclarator2Access().getTypeQualListAssignment_4_2()); }
	(rule__DirectDeclarator2__TypeQualListAssignment_4_2)
	{ after(grammarAccess.getDirectDeclarator2Access().getTypeQualListAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectDeclarator2__Group_4__3__Impl
	rule__DirectDeclarator2__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectDeclarator2Access().getStaticKeyword_4_3()); }
	'static'
	{ after(grammarAccess.getDirectDeclarator2Access().getStaticKeyword_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_4__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectDeclarator2__Group_4__4__Impl
	rule__DirectDeclarator2__Group_4__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_4__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectDeclarator2Access().getExpAssignment_4_4()); }
	(rule__DirectDeclarator2__ExpAssignment_4_4)
	{ after(grammarAccess.getDirectDeclarator2Access().getExpAssignment_4_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_4__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectDeclarator2__Group_4__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_4__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectDeclarator2Access().getRightSquareBracketKeyword_4_5()); }
	']'
	{ after(grammarAccess.getDirectDeclarator2Access().getRightSquareBracketKeyword_4_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DirectDeclarator2__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectDeclarator2__Group_5__0__Impl
	rule__DirectDeclarator2__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectDeclarator2Access().getD7Action_5_0()); }
	()
	{ after(grammarAccess.getDirectDeclarator2Access().getD7Action_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectDeclarator2__Group_5__1__Impl
	rule__DirectDeclarator2__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectDeclarator2Access().getLeftSquareBracketKeyword_5_1()); }
	'['
	{ after(grammarAccess.getDirectDeclarator2Access().getLeftSquareBracketKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectDeclarator2__Group_5__2__Impl
	rule__DirectDeclarator2__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectDeclarator2Access().getTypeQualListAssignment_5_2()); }
	(rule__DirectDeclarator2__TypeQualListAssignment_5_2)
	{ after(grammarAccess.getDirectDeclarator2Access().getTypeQualListAssignment_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_5__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectDeclarator2__Group_5__3__Impl
	rule__DirectDeclarator2__Group_5__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_5__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectDeclarator2Access().getExpAssignment_5_3()); }
	(rule__DirectDeclarator2__ExpAssignment_5_3)
	{ after(grammarAccess.getDirectDeclarator2Access().getExpAssignment_5_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_5__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectDeclarator2__Group_5__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_5__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectDeclarator2Access().getRightSquareBracketKeyword_5_4()); }
	']'
	{ after(grammarAccess.getDirectDeclarator2Access().getRightSquareBracketKeyword_5_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DirectDeclarator2__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectDeclarator2__Group_6__0__Impl
	rule__DirectDeclarator2__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectDeclarator2Access().getD8Action_6_0()); }
	()
	{ after(grammarAccess.getDirectDeclarator2Access().getD8Action_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectDeclarator2__Group_6__1__Impl
	rule__DirectDeclarator2__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectDeclarator2Access().getLeftSquareBracketKeyword_6_1()); }
	'['
	{ after(grammarAccess.getDirectDeclarator2Access().getLeftSquareBracketKeyword_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_6__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectDeclarator2__Group_6__2__Impl
	rule__DirectDeclarator2__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_6__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectDeclarator2Access().getTypeQualListAssignment_6_2()); }
	(rule__DirectDeclarator2__TypeQualListAssignment_6_2)
	{ after(grammarAccess.getDirectDeclarator2Access().getTypeQualListAssignment_6_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_6__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectDeclarator2__Group_6__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_6__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectDeclarator2Access().getRightSquareBracketKeyword_6_3()); }
	']'
	{ after(grammarAccess.getDirectDeclarator2Access().getRightSquareBracketKeyword_6_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DirectDeclarator2__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectDeclarator2__Group_7__0__Impl
	rule__DirectDeclarator2__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectDeclarator2Access().getD9Action_7_0()); }
	()
	{ after(grammarAccess.getDirectDeclarator2Access().getD9Action_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectDeclarator2__Group_7__1__Impl
	rule__DirectDeclarator2__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectDeclarator2Access().getLeftSquareBracketKeyword_7_1()); }
	'['
	{ after(grammarAccess.getDirectDeclarator2Access().getLeftSquareBracketKeyword_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_7__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectDeclarator2__Group_7__2__Impl
	rule__DirectDeclarator2__Group_7__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_7__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectDeclarator2Access().getExpAssignment_7_2()); }
	(rule__DirectDeclarator2__ExpAssignment_7_2)
	{ after(grammarAccess.getDirectDeclarator2Access().getExpAssignment_7_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_7__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectDeclarator2__Group_7__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_7__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectDeclarator2Access().getRightSquareBracketKeyword_7_3()); }
	']'
	{ after(grammarAccess.getDirectDeclarator2Access().getRightSquareBracketKeyword_7_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DirectDeclarator2__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectDeclarator2__Group_8__0__Impl
	rule__DirectDeclarator2__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectDeclarator2Access().getFunctionParametersDeclAction_8_0()); }
	()
	{ after(grammarAccess.getDirectDeclarator2Access().getFunctionParametersDeclAction_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectDeclarator2__Group_8__1__Impl
	rule__DirectDeclarator2__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectDeclarator2Access().getLeftParenthesisKeyword_8_1()); }
	'('
	{ after(grammarAccess.getDirectDeclarator2Access().getLeftParenthesisKeyword_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_8__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectDeclarator2__Group_8__2__Impl
	rule__DirectDeclarator2__Group_8__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_8__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectDeclarator2Access().getAlternatives_8_2()); }
	(rule__DirectDeclarator2__Alternatives_8_2)?
	{ after(grammarAccess.getDirectDeclarator2Access().getAlternatives_8_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_8__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectDeclarator2__Group_8__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__Group_8__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectDeclarator2Access().getRightParenthesisKeyword_8_3()); }
	')'
	{ after(grammarAccess.getDirectDeclarator2Access().getRightParenthesisKeyword_8_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Pointer__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pointer__Group__0__Impl
	rule__Pointer__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointer__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointerAccess().getPointerRuleAction_0()); }
	()
	{ after(grammarAccess.getPointerAccess().getPointerRuleAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointer__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pointer__Group__1__Impl
	rule__Pointer__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointer__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointerAccess().getAsteriskKeyword_1()); }
	'*'
	{ after(grammarAccess.getPointerAccess().getAsteriskKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointer__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pointer__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointer__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointerAccess().getGroup_2()); }
	(rule__Pointer__Group_2__0)*
	{ after(grammarAccess.getPointerAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Pointer__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pointer__Group_2__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointer__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointerAccess().getAlternatives_2_0()); }
	(rule__Pointer__Alternatives_2_0)
	{ after(grammarAccess.getPointerAccess().getAlternatives_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterTypeList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterTypeList__Group__0__Impl
	rule__ParameterTypeList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterTypeList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterTypeListAccess().getParameterListParserRuleCall_0()); }
	ruleParameterList
	{ after(grammarAccess.getParameterTypeListAccess().getParameterListParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterTypeList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterTypeList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterTypeList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterTypeListAccess().getGroup_1()); }
	(rule__ParameterTypeList__Group_1__0)?
	{ after(grammarAccess.getParameterTypeListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterTypeList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterTypeList__Group_1__0__Impl
	rule__ParameterTypeList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterTypeList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterTypeListAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getParameterTypeListAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterTypeList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterTypeList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterTypeList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterTypeListAccess().getFullStopFullStopFullStopKeyword_1_1()); }
	'...'
	{ after(grammarAccess.getParameterTypeListAccess().getFullStopFullStopFullStopKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group__0__Impl
	rule__ParameterList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getParameterDeclarationParserRuleCall_0()); }
	ruleParameterDeclaration
	{ after(grammarAccess.getParameterListAccess().getParameterDeclarationParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getGroup_1()); }
	(rule__ParameterList__Group_1__0)*
	{ after(grammarAccess.getParameterListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group_1__0__Impl
	rule__ParameterList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getGroup_1_0()); }
	(rule__ParameterList__Group_1_0__0)
	{ after(grammarAccess.getParameterListAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getRightAssignment_1_1()); }
	(rule__ParameterList__RightAssignment_1_1)
	{ after(grammarAccess.getParameterListAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterList__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getGroup_1_0_0()); }
	(rule__ParameterList__Group_1_0_0__0)
	{ after(grammarAccess.getParameterListAccess().getGroup_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterList__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group_1_0_0__0__Impl
	rule__ParameterList__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getParameterDeclarationListLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getParameterListAccess().getParameterDeclarationListLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getCommaKeyword_1_0_0_1()); }
	','
	{ after(grammarAccess.getParameterListAccess().getCommaKeyword_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterDeclaration__Group__0__Impl
	rule__ParameterDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterDeclarationAccess().getDeclarationAbstractAction_0()); }
	()
	{ after(grammarAccess.getParameterDeclarationAccess().getDeclarationAbstractAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterDeclaration__Group__1__Impl
	rule__ParameterDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getParameterDeclarationAccess().getDeclarationSpecAssignment_1()); }
		(rule__ParameterDeclaration__DeclarationSpecAssignment_1)
		{ after(grammarAccess.getParameterDeclarationAccess().getDeclarationSpecAssignment_1()); }
	)
	(
		{ before(grammarAccess.getParameterDeclarationAccess().getDeclarationSpecAssignment_1()); }
		(rule__ParameterDeclaration__DeclarationSpecAssignment_1)*
		{ after(grammarAccess.getParameterDeclarationAccess().getDeclarationSpecAssignment_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterDeclarationAccess().getAlternatives_2()); }
	(rule__ParameterDeclaration__Alternatives_2)?
	{ after(grammarAccess.getParameterDeclarationAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IdentifierList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IdentifierList__Group__0__Impl
	rule__IdentifierList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifierListAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getIdentifierListAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IdentifierList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifierListAccess().getGroup_1()); }
	(rule__IdentifierList__Group_1__0)*
	{ after(grammarAccess.getIdentifierListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IdentifierList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IdentifierList__Group_1__0__Impl
	rule__IdentifierList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifierListAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getIdentifierListAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IdentifierList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifierListAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
	{ after(grammarAccess.getIdentifierListAccess().getIDTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeName__Group__0__Impl
	rule__TypeName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeNameAccess().getTypeNameRuleAction_0()); }
	()
	{ after(grammarAccess.getTypeNameAccess().getTypeNameRuleAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeName__Group__1__Impl
	rule__TypeName__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeNameAccess().getSpecifierQualListAssignment_1()); }
	(rule__TypeName__SpecifierQualListAssignment_1)
	{ after(grammarAccess.getTypeNameAccess().getSpecifierQualListAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeName__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeName__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeName__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeNameAccess().getAbsDeclaratorAssignment_2()); }
	(rule__TypeName__AbsDeclaratorAssignment_2)?
	{ after(grammarAccess.getTypeNameAccess().getAbsDeclaratorAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AbstractDeclarator__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractDeclarator__Group_0__0__Impl
	rule__AbstractDeclarator__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractDeclarator__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractDeclaratorAccess().getAbstractDeclaratorPointerAction_0_0()); }
	()
	{ after(grammarAccess.getAbstractDeclaratorAccess().getAbstractDeclaratorPointerAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractDeclarator__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractDeclarator__Group_0__1__Impl
	rule__AbstractDeclarator__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractDeclarator__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractDeclaratorAccess().getPointAssignment_0_1()); }
	(rule__AbstractDeclarator__PointAssignment_0_1)
	{ after(grammarAccess.getAbstractDeclaratorAccess().getPointAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractDeclarator__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractDeclarator__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractDeclarator__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractDeclaratorAccess().getAbstractDeclaratorAssignment_0_2()); }
	(rule__AbstractDeclarator__AbstractDeclaratorAssignment_0_2)?
	{ after(grammarAccess.getAbstractDeclaratorAccess().getAbstractDeclaratorAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DirectAbstractDeclarator__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectAbstractDeclarator__Group__0__Impl
	rule__DirectAbstractDeclarator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectAbstractDeclaratorAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getDirectAbstractDeclaratorAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectAbstractDeclarator__Group__1__Impl
	rule__DirectAbstractDeclarator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectAbstractDeclaratorAccess().getAbstractDeclaratorParserRuleCall_1()); }
	ruleAbstractDeclarator
	{ after(grammarAccess.getDirectAbstractDeclaratorAccess().getAbstractDeclaratorParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectAbstractDeclarator__Group__2__Impl
	rule__DirectAbstractDeclarator__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectAbstractDeclaratorAccess().getRightParenthesisKeyword_2()); }
	')'
	{ after(grammarAccess.getDirectAbstractDeclaratorAccess().getRightParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectAbstractDeclarator__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectAbstractDeclaratorAccess().getDirect_declarator2Assignment_3()); }
	(rule__DirectAbstractDeclarator__Direct_declarator2Assignment_3)*
	{ after(grammarAccess.getDirectAbstractDeclaratorAccess().getDirect_declarator2Assignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DirectAbstractDeclarator2__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectAbstractDeclarator2__Group__0__Impl
	rule__DirectAbstractDeclarator2__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator2__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectAbstractDeclarator2Access().getDirect_declarator2Action_0()); }
	()
	{ after(grammarAccess.getDirectAbstractDeclarator2Access().getDirect_declarator2Action_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator2__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectAbstractDeclarator2__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator2__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectAbstractDeclarator2Access().getAlternatives_1()); }
	(rule__DirectAbstractDeclarator2__Alternatives_1)
	{ after(grammarAccess.getDirectAbstractDeclarator2Access().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DirectAbstractDeclarator2__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectAbstractDeclarator2__Group_1_0__0__Impl
	rule__DirectAbstractDeclarator2__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator2__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectAbstractDeclarator2Access().getLeftSquareBracketKeyword_1_0_0()); }
	'['
	{ after(grammarAccess.getDirectAbstractDeclarator2Access().getLeftSquareBracketKeyword_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator2__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectAbstractDeclarator2__Group_1_0__1__Impl
	rule__DirectAbstractDeclarator2__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator2__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectAbstractDeclarator2Access().getAsteriskKeyword_1_0_1()); }
	('*')?
	{ after(grammarAccess.getDirectAbstractDeclarator2Access().getAsteriskKeyword_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator2__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectAbstractDeclarator2__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator2__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectAbstractDeclarator2Access().getRightSquareBracketKeyword_1_0_2()); }
	']'
	{ after(grammarAccess.getDirectAbstractDeclarator2Access().getRightSquareBracketKeyword_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DirectAbstractDeclarator2__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectAbstractDeclarator2__Group_1_1__0__Impl
	rule__DirectAbstractDeclarator2__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator2__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectAbstractDeclarator2Access().getLeftSquareBracketKeyword_1_1_0()); }
	'['
	{ after(grammarAccess.getDirectAbstractDeclarator2Access().getLeftSquareBracketKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator2__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectAbstractDeclarator2__Group_1_1__1__Impl
	rule__DirectAbstractDeclarator2__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator2__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectAbstractDeclarator2Access().getStaticKeyword_1_1_1()); }
	'static'
	{ after(grammarAccess.getDirectAbstractDeclarator2Access().getStaticKeyword_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator2__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectAbstractDeclarator2__Group_1_1__2__Impl
	rule__DirectAbstractDeclarator2__Group_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator2__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectAbstractDeclarator2Access().getTypeQualListAssignment_1_1_2()); }
	(rule__DirectAbstractDeclarator2__TypeQualListAssignment_1_1_2)
	{ after(grammarAccess.getDirectAbstractDeclarator2Access().getTypeQualListAssignment_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator2__Group_1_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectAbstractDeclarator2__Group_1_1__3__Impl
	rule__DirectAbstractDeclarator2__Group_1_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator2__Group_1_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectAbstractDeclarator2Access().getExpAssignment_1_1_3()); }
	(rule__DirectAbstractDeclarator2__ExpAssignment_1_1_3)
	{ after(grammarAccess.getDirectAbstractDeclarator2Access().getExpAssignment_1_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator2__Group_1_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectAbstractDeclarator2__Group_1_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator2__Group_1_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectAbstractDeclarator2Access().getRightSquareBracketKeyword_1_1_4()); }
	']'
	{ after(grammarAccess.getDirectAbstractDeclarator2Access().getRightSquareBracketKeyword_1_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DirectAbstractDeclarator2__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectAbstractDeclarator2__Group_1_2__0__Impl
	rule__DirectAbstractDeclarator2__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator2__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectAbstractDeclarator2Access().getLeftSquareBracketKeyword_1_2_0()); }
	'['
	{ after(grammarAccess.getDirectAbstractDeclarator2Access().getLeftSquareBracketKeyword_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator2__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectAbstractDeclarator2__Group_1_2__1__Impl
	rule__DirectAbstractDeclarator2__Group_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator2__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectAbstractDeclarator2Access().getStaticKeyword_1_2_1()); }
	'static'
	{ after(grammarAccess.getDirectAbstractDeclarator2Access().getStaticKeyword_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator2__Group_1_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectAbstractDeclarator2__Group_1_2__2__Impl
	rule__DirectAbstractDeclarator2__Group_1_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator2__Group_1_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectAbstractDeclarator2Access().getExpAssignment_1_2_2()); }
	(rule__DirectAbstractDeclarator2__ExpAssignment_1_2_2)
	{ after(grammarAccess.getDirectAbstractDeclarator2Access().getExpAssignment_1_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator2__Group_1_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectAbstractDeclarator2__Group_1_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator2__Group_1_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectAbstractDeclarator2Access().getRightSquareBracketKeyword_1_2_3()); }
	']'
	{ after(grammarAccess.getDirectAbstractDeclarator2Access().getRightSquareBracketKeyword_1_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DirectAbstractDeclarator2__Group_1_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectAbstractDeclarator2__Group_1_3__0__Impl
	rule__DirectAbstractDeclarator2__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator2__Group_1_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectAbstractDeclarator2Access().getLeftSquareBracketKeyword_1_3_0()); }
	'['
	{ after(grammarAccess.getDirectAbstractDeclarator2Access().getLeftSquareBracketKeyword_1_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator2__Group_1_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectAbstractDeclarator2__Group_1_3__1__Impl
	rule__DirectAbstractDeclarator2__Group_1_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator2__Group_1_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectAbstractDeclarator2Access().getTypeQualListAssignment_1_3_1()); }
	(rule__DirectAbstractDeclarator2__TypeQualListAssignment_1_3_1)
	{ after(grammarAccess.getDirectAbstractDeclarator2Access().getTypeQualListAssignment_1_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator2__Group_1_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectAbstractDeclarator2__Group_1_3__2__Impl
	rule__DirectAbstractDeclarator2__Group_1_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator2__Group_1_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectAbstractDeclarator2Access().getStaticKeyword_1_3_2()); }
	'static'
	{ after(grammarAccess.getDirectAbstractDeclarator2Access().getStaticKeyword_1_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator2__Group_1_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectAbstractDeclarator2__Group_1_3__3__Impl
	rule__DirectAbstractDeclarator2__Group_1_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator2__Group_1_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectAbstractDeclarator2Access().getExpAssignment_1_3_3()); }
	(rule__DirectAbstractDeclarator2__ExpAssignment_1_3_3)
	{ after(grammarAccess.getDirectAbstractDeclarator2Access().getExpAssignment_1_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator2__Group_1_3__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectAbstractDeclarator2__Group_1_3__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator2__Group_1_3__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectAbstractDeclarator2Access().getRightSquareBracketKeyword_1_3_4()); }
	']'
	{ after(grammarAccess.getDirectAbstractDeclarator2Access().getRightSquareBracketKeyword_1_3_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DirectAbstractDeclarator2__Group_1_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectAbstractDeclarator2__Group_1_4__0__Impl
	rule__DirectAbstractDeclarator2__Group_1_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator2__Group_1_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectAbstractDeclarator2Access().getLeftSquareBracketKeyword_1_4_0()); }
	'['
	{ after(grammarAccess.getDirectAbstractDeclarator2Access().getLeftSquareBracketKeyword_1_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator2__Group_1_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectAbstractDeclarator2__Group_1_4__1__Impl
	rule__DirectAbstractDeclarator2__Group_1_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator2__Group_1_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectAbstractDeclarator2Access().getTypeQualListAssignment_1_4_1()); }
	(rule__DirectAbstractDeclarator2__TypeQualListAssignment_1_4_1)
	{ after(grammarAccess.getDirectAbstractDeclarator2Access().getTypeQualListAssignment_1_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator2__Group_1_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectAbstractDeclarator2__Group_1_4__2__Impl
	rule__DirectAbstractDeclarator2__Group_1_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator2__Group_1_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectAbstractDeclarator2Access().getExpAssignment_1_4_2()); }
	(rule__DirectAbstractDeclarator2__ExpAssignment_1_4_2)
	{ after(grammarAccess.getDirectAbstractDeclarator2Access().getExpAssignment_1_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator2__Group_1_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectAbstractDeclarator2__Group_1_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator2__Group_1_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectAbstractDeclarator2Access().getRightSquareBracketKeyword_1_4_3()); }
	']'
	{ after(grammarAccess.getDirectAbstractDeclarator2Access().getRightSquareBracketKeyword_1_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DirectAbstractDeclarator2__Group_1_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectAbstractDeclarator2__Group_1_5__0__Impl
	rule__DirectAbstractDeclarator2__Group_1_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator2__Group_1_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectAbstractDeclarator2Access().getLeftSquareBracketKeyword_1_5_0()); }
	'['
	{ after(grammarAccess.getDirectAbstractDeclarator2Access().getLeftSquareBracketKeyword_1_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator2__Group_1_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectAbstractDeclarator2__Group_1_5__1__Impl
	rule__DirectAbstractDeclarator2__Group_1_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator2__Group_1_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectAbstractDeclarator2Access().getTypeQualListAssignment_1_5_1()); }
	(rule__DirectAbstractDeclarator2__TypeQualListAssignment_1_5_1)
	{ after(grammarAccess.getDirectAbstractDeclarator2Access().getTypeQualListAssignment_1_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator2__Group_1_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectAbstractDeclarator2__Group_1_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator2__Group_1_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectAbstractDeclarator2Access().getRightSquareBracketKeyword_1_5_2()); }
	']'
	{ after(grammarAccess.getDirectAbstractDeclarator2Access().getRightSquareBracketKeyword_1_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DirectAbstractDeclarator2__Group_1_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectAbstractDeclarator2__Group_1_6__0__Impl
	rule__DirectAbstractDeclarator2__Group_1_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator2__Group_1_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectAbstractDeclarator2Access().getLeftSquareBracketKeyword_1_6_0()); }
	'['
	{ after(grammarAccess.getDirectAbstractDeclarator2Access().getLeftSquareBracketKeyword_1_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator2__Group_1_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectAbstractDeclarator2__Group_1_6__1__Impl
	rule__DirectAbstractDeclarator2__Group_1_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator2__Group_1_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectAbstractDeclarator2Access().getExpAssignment_1_6_1()); }
	(rule__DirectAbstractDeclarator2__ExpAssignment_1_6_1)
	{ after(grammarAccess.getDirectAbstractDeclarator2Access().getExpAssignment_1_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator2__Group_1_6__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectAbstractDeclarator2__Group_1_6__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator2__Group_1_6__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectAbstractDeclarator2Access().getRightSquareBracketKeyword_1_6_2()); }
	']'
	{ after(grammarAccess.getDirectAbstractDeclarator2Access().getRightSquareBracketKeyword_1_6_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DirectAbstractDeclarator2__Group_1_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectAbstractDeclarator2__Group_1_7__0__Impl
	rule__DirectAbstractDeclarator2__Group_1_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator2__Group_1_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectAbstractDeclarator2Access().getLeftParenthesisKeyword_1_7_0()); }
	'('
	{ after(grammarAccess.getDirectAbstractDeclarator2Access().getLeftParenthesisKeyword_1_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator2__Group_1_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectAbstractDeclarator2__Group_1_7__1__Impl
	rule__DirectAbstractDeclarator2__Group_1_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator2__Group_1_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectAbstractDeclarator2Access().getParamListAssignment_1_7_1()); }
	(rule__DirectAbstractDeclarator2__ParamListAssignment_1_7_1)?
	{ after(grammarAccess.getDirectAbstractDeclarator2Access().getParamListAssignment_1_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator2__Group_1_7__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectAbstractDeclarator2__Group_1_7__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator2__Group_1_7__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectAbstractDeclarator2Access().getRightParenthesisKeyword_1_7_2()); }
	')'
	{ after(grammarAccess.getDirectAbstractDeclarator2Access().getRightParenthesisKeyword_1_7_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Initializer__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initializer__Group_0__0__Impl
	rule__Initializer__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitializerAccess().getInit_listAction_0_0()); }
	()
	{ after(grammarAccess.getInitializerAccess().getInit_listAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initializer__Group_0__1__Impl
	rule__Initializer__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitializerAccess().getLeftCurlyBracketKeyword_0_1()); }
	'{'
	{ after(grammarAccess.getInitializerAccess().getLeftCurlyBracketKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initializer__Group_0__2__Impl
	rule__Initializer__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitializerAccess().getInitAssignment_0_2()); }
	(rule__Initializer__InitAssignment_0_2)
	{ after(grammarAccess.getInitializerAccess().getInitAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initializer__Group_0__3__Impl
	rule__Initializer__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitializerAccess().getCommaKeyword_0_3()); }
	(',')?
	{ after(grammarAccess.getInitializerAccess().getCommaKeyword_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initializer__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitializerAccess().getRightCurlyBracketKeyword_0_4()); }
	'}'
	{ after(grammarAccess.getInitializerAccess().getRightCurlyBracketKeyword_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InitializerList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitializerList__Group__0__Impl
	rule__InitializerList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InitializerList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitializerListAccess().getInitializerList2ParserRuleCall_0()); }
	ruleInitializerList2
	{ after(grammarAccess.getInitializerListAccess().getInitializerList2ParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitializerList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitializerList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InitializerList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitializerListAccess().getGroup_1()); }
	(rule__InitializerList__Group_1__0)*
	{ after(grammarAccess.getInitializerListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InitializerList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitializerList__Group_1__0__Impl
	rule__InitializerList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InitializerList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitializerListAccess().getGroup_1_0()); }
	(rule__InitializerList__Group_1_0__0)
	{ after(grammarAccess.getInitializerListAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitializerList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitializerList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InitializerList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitializerListAccess().getRightAssignment_1_1()); }
	(rule__InitializerList__RightAssignment_1_1)
	{ after(grammarAccess.getInitializerListAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InitializerList__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitializerList__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InitializerList__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitializerListAccess().getGroup_1_0_0()); }
	(rule__InitializerList__Group_1_0_0__0)
	{ after(grammarAccess.getInitializerListAccess().getGroup_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InitializerList__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitializerList__Group_1_0_0__0__Impl
	rule__InitializerList__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InitializerList__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitializerListAccess().getInitLisLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getInitializerListAccess().getInitLisLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitializerList__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitializerList__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InitializerList__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitializerListAccess().getCommaKeyword_1_0_0_1()); }
	','
	{ after(grammarAccess.getInitializerListAccess().getCommaKeyword_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InitializerList2__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitializerList2__Group__0__Impl
	rule__InitializerList2__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InitializerList2__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitializerList2Access().getDesigAssignment_0()); }
	(rule__InitializerList2__DesigAssignment_0)?
	{ after(grammarAccess.getInitializerList2Access().getDesigAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitializerList2__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitializerList2__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InitializerList2__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitializerList2Access().getInitAssignment_1()); }
	(rule__InitializerList2__InitAssignment_1)
	{ after(grammarAccess.getInitializerList2Access().getInitAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Designation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Designation__Group__0__Impl
	rule__Designation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Designation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDesignationAccess().getDesignatorListParserRuleCall_0()); }
	ruleDesignatorList
	{ after(grammarAccess.getDesignationAccess().getDesignatorListParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Designation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Designation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Designation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDesignationAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getDesignationAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Designator__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Designator__Group_0__0__Impl
	rule__Designator__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Designator__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDesignatorAccess().getLeftSquareBracketKeyword_0_0()); }
	'['
	{ after(grammarAccess.getDesignatorAccess().getLeftSquareBracketKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Designator__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Designator__Group_0__1__Impl
	rule__Designator__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Designator__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDesignatorAccess().getConstExpAssignment_0_1()); }
	(rule__Designator__ConstExpAssignment_0_1)
	{ after(grammarAccess.getDesignatorAccess().getConstExpAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Designator__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Designator__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Designator__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDesignatorAccess().getRightSquareBracketKeyword_0_2()); }
	']'
	{ after(grammarAccess.getDesignatorAccess().getRightSquareBracketKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Designator__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Designator__Group_1__0__Impl
	rule__Designator__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Designator__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDesignatorAccess().getFullStopKeyword_1_0()); }
	('.')
	{ after(grammarAccess.getDesignatorAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Designator__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Designator__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Designator__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDesignatorAccess().get_IDAssignment_1_1()); }
	(rule__Designator___IDAssignment_1_1)
	{ after(grammarAccess.getDesignatorAccess().get_IDAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StaticAssertDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StaticAssertDeclaration__Group__0__Impl
	rule__StaticAssertDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticAssertDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStaticAssertDeclarationAccess().get_Static_assertKeyword_0()); }
	'_Static_assert'
	{ after(grammarAccess.getStaticAssertDeclarationAccess().get_Static_assertKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticAssertDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StaticAssertDeclaration__Group__1__Impl
	rule__StaticAssertDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticAssertDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStaticAssertDeclarationAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getStaticAssertDeclarationAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticAssertDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StaticAssertDeclaration__Group__2__Impl
	rule__StaticAssertDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticAssertDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStaticAssertDeclarationAccess().getConstExpAssignment_2()); }
	(rule__StaticAssertDeclaration__ConstExpAssignment_2)
	{ after(grammarAccess.getStaticAssertDeclarationAccess().getConstExpAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticAssertDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StaticAssertDeclaration__Group__3__Impl
	rule__StaticAssertDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticAssertDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStaticAssertDeclarationAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getStaticAssertDeclarationAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticAssertDeclaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StaticAssertDeclaration__Group__4__Impl
	rule__StaticAssertDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticAssertDeclaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStaticAssertDeclarationAccess().getLiteralAssignment_4()); }
	(rule__StaticAssertDeclaration__LiteralAssignment_4)
	{ after(grammarAccess.getStaticAssertDeclarationAccess().getLiteralAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticAssertDeclaration__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StaticAssertDeclaration__Group__5__Impl
	rule__StaticAssertDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticAssertDeclaration__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStaticAssertDeclarationAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getStaticAssertDeclarationAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticAssertDeclaration__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StaticAssertDeclaration__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticAssertDeclaration__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStaticAssertDeclarationAccess().getSemicolonKeyword_6()); }
	';'
	{ after(grammarAccess.getStaticAssertDeclarationAccess().getSemicolonKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LabeledStatement__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LabeledStatement__Group_0__0__Impl
	rule__LabeledStatement__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStatement__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabeledStatementAccess().getIDTerminalRuleCall_0_0()); }
	RULE_ID
	{ after(grammarAccess.getLabeledStatementAccess().getIDTerminalRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStatement__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LabeledStatement__Group_0__1__Impl
	rule__LabeledStatement__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStatement__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabeledStatementAccess().getColonKeyword_0_1()); }
	':'
	{ after(grammarAccess.getLabeledStatementAccess().getColonKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStatement__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LabeledStatement__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStatement__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabeledStatementAccess().getRightAssignment_0_2()); }
	(rule__LabeledStatement__RightAssignment_0_2)
	{ after(grammarAccess.getLabeledStatementAccess().getRightAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LabeledStatement__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LabeledStatement__Group_1__0__Impl
	rule__LabeledStatement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStatement__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabeledStatementAccess().getCaseKeyword_1_0()); }
	'case'
	{ after(grammarAccess.getLabeledStatementAccess().getCaseKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStatement__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LabeledStatement__Group_1__1__Impl
	rule__LabeledStatement__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStatement__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabeledStatementAccess().getExpAssignment_1_1()); }
	(rule__LabeledStatement__ExpAssignment_1_1)
	{ after(grammarAccess.getLabeledStatementAccess().getExpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStatement__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LabeledStatement__Group_1__2__Impl
	rule__LabeledStatement__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStatement__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabeledStatementAccess().getColonKeyword_1_2()); }
	':'
	{ after(grammarAccess.getLabeledStatementAccess().getColonKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStatement__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LabeledStatement__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStatement__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabeledStatementAccess().getRightAssignment_1_3()); }
	(rule__LabeledStatement__RightAssignment_1_3)
	{ after(grammarAccess.getLabeledStatementAccess().getRightAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LabeledStatement__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LabeledStatement__Group_2__0__Impl
	rule__LabeledStatement__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStatement__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabeledStatementAccess().getDefaultKeyword_2_0()); }
	'default'
	{ after(grammarAccess.getLabeledStatementAccess().getDefaultKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStatement__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LabeledStatement__Group_2__1__Impl
	rule__LabeledStatement__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStatement__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabeledStatementAccess().getColonKeyword_2_1()); }
	':'
	{ after(grammarAccess.getLabeledStatementAccess().getColonKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStatement__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LabeledStatement__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStatement__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabeledStatementAccess().getRightAssignment_2_2()); }
	(rule__LabeledStatement__RightAssignment_2_2)
	{ after(grammarAccess.getLabeledStatementAccess().getRightAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CompoundStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompoundStatement__Group__0__Impl
	rule__CompoundStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompoundStatementAccess().getCompoundStatementAction_0()); }
	()
	{ after(grammarAccess.getCompoundStatementAccess().getCompoundStatementAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompoundStatement__Group__1__Impl
	rule__CompoundStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompoundStatementAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getCompoundStatementAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompoundStatement__Group__2__Impl
	rule__CompoundStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompoundStatementAccess().getBlockListAssignment_2()); }
	(rule__CompoundStatement__BlockListAssignment_2)*
	{ after(grammarAccess.getCompoundStatementAccess().getBlockListAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompoundStatement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompoundStatementAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getCompoundStatementAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionStatement__Group__0__Impl
	rule__ExpressionStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionStatementAccess().getExpressionStatementAction_0()); }
	()
	{ after(grammarAccess.getExpressionStatementAccess().getExpressionStatementAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionStatement__Group__1__Impl
	rule__ExpressionStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionStatementAccess().getExpAssignment_1()); }
	(rule__ExpressionStatement__ExpAssignment_1)?
	{ after(grammarAccess.getExpressionStatementAccess().getExpAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionStatementAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getExpressionStatementAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__0__Impl
	rule__IfStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getIfStatementAction_0()); }
	()
	{ after(grammarAccess.getIfStatementAccess().getIfStatementAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__1__Impl
	rule__IfStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getIfKeyword_1()); }
	'if'
	{ after(grammarAccess.getIfStatementAccess().getIfKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__2__Impl
	rule__IfStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getIfStatementAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__3__Impl
	rule__IfStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getCondAssignment_3()); }
	(rule__IfStatement__CondAssignment_3)
	{ after(grammarAccess.getIfStatementAccess().getCondAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__4__Impl
	rule__IfStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getIfStatementAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__5__Impl
	rule__IfStatement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getThenAssignment_5()); }
	(rule__IfStatement__ThenAssignment_5)
	{ after(grammarAccess.getIfStatementAccess().getThenAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getGroup_6()); }
	(rule__IfStatement__Group_6__0)?
	{ after(grammarAccess.getIfStatementAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group_6__0__Impl
	rule__IfStatement__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getElseKeyword_6_0()); }
	('else')
	{ after(grammarAccess.getIfStatementAccess().getElseKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getElseAssignment_6_1()); }
	(rule__IfStatement__ElseAssignment_6_1)
	{ after(grammarAccess.getIfStatementAccess().getElseAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStatement__Group__0__Impl
	rule__SwitchStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStatementAccess().getSwitchStatementAction_0()); }
	()
	{ after(grammarAccess.getSwitchStatementAccess().getSwitchStatementAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStatement__Group__1__Impl
	rule__SwitchStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStatementAccess().getSwitchKeyword_1()); }
	'switch'
	{ after(grammarAccess.getSwitchStatementAccess().getSwitchKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStatement__Group__2__Impl
	rule__SwitchStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStatementAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getSwitchStatementAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStatement__Group__3__Impl
	rule__SwitchStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStatementAccess().getSwitchExpAssignment_3()); }
	(rule__SwitchStatement__SwitchExpAssignment_3)
	{ after(grammarAccess.getSwitchStatementAccess().getSwitchExpAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStatement__Group__4__Impl
	rule__SwitchStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStatementAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getSwitchStatementAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStatement__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStatementAccess().getStmtAssignment_5()); }
	(rule__SwitchStatement__StmtAssignment_5)
	{ after(grammarAccess.getSwitchStatementAccess().getStmtAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForLoop__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForLoop__Group__0__Impl
	rule__ForLoop__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForLoopAccess().getForLoopAction_0()); }
	()
	{ after(grammarAccess.getForLoopAccess().getForLoopAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForLoop__Group__1__Impl
	rule__ForLoop__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForLoopAccess().getForKeyword_1()); }
	'for'
	{ after(grammarAccess.getForLoopAccess().getForKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForLoop__Group__2__Impl
	rule__ForLoop__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForLoopAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getForLoopAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForLoop__Group__3__Impl
	rule__ForLoop__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForLoopAccess().getAlternatives_3()); }
	(rule__ForLoop__Alternatives_3)
	{ after(grammarAccess.getForLoopAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForLoop__Group__4__Impl
	rule__ForLoop__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForLoopAccess().getExp2Assignment_4()); }
	(rule__ForLoop__Exp2Assignment_4)
	{ after(grammarAccess.getForLoopAccess().getExp2Assignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForLoop__Group__5__Impl
	rule__ForLoop__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForLoopAccess().getExp3Assignment_5()); }
	(rule__ForLoop__Exp3Assignment_5)?
	{ after(grammarAccess.getForLoopAccess().getExp3Assignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForLoop__Group__6__Impl
	rule__ForLoop__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForLoopAccess().getRightParenthesisKeyword_6()); }
	')'
	{ after(grammarAccess.getForLoopAccess().getRightParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForLoop__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForLoopAccess().getBodyAssignment_7()); }
	(rule__ForLoop__BodyAssignment_7)
	{ after(grammarAccess.getForLoopAccess().getBodyAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WhileLoop__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileLoop__Group__0__Impl
	rule__WhileLoop__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileLoopAccess().getWhileLoopAction_0()); }
	()
	{ after(grammarAccess.getWhileLoopAccess().getWhileLoopAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileLoop__Group__1__Impl
	rule__WhileLoop__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileLoopAccess().getWhileKeyword_1()); }
	'while'
	{ after(grammarAccess.getWhileLoopAccess().getWhileKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileLoop__Group__2__Impl
	rule__WhileLoop__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileLoopAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getWhileLoopAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileLoop__Group__3__Impl
	rule__WhileLoop__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileLoopAccess().getCondAssignment_3()); }
	(rule__WhileLoop__CondAssignment_3)
	{ after(grammarAccess.getWhileLoopAccess().getCondAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileLoop__Group__4__Impl
	rule__WhileLoop__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileLoopAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getWhileLoopAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileLoop__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileLoopAccess().getBodyAssignment_5()); }
	(rule__WhileLoop__BodyAssignment_5)
	{ after(grammarAccess.getWhileLoopAccess().getBodyAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DoWhileLoop__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DoWhileLoop__Group__0__Impl
	rule__DoWhileLoop__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DoWhileLoop__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoWhileLoopAccess().getDoWhileLoopAction_0()); }
	()
	{ after(grammarAccess.getDoWhileLoopAccess().getDoWhileLoopAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoWhileLoop__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DoWhileLoop__Group__1__Impl
	rule__DoWhileLoop__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DoWhileLoop__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoWhileLoopAccess().getDoKeyword_1()); }
	'do'
	{ after(grammarAccess.getDoWhileLoopAccess().getDoKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoWhileLoop__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DoWhileLoop__Group__2__Impl
	rule__DoWhileLoop__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DoWhileLoop__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoWhileLoopAccess().getBodyAssignment_2()); }
	(rule__DoWhileLoop__BodyAssignment_2)
	{ after(grammarAccess.getDoWhileLoopAccess().getBodyAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoWhileLoop__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DoWhileLoop__Group__3__Impl
	rule__DoWhileLoop__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DoWhileLoop__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoWhileLoopAccess().getWhileKeyword_3()); }
	'while'
	{ after(grammarAccess.getDoWhileLoopAccess().getWhileKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoWhileLoop__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DoWhileLoop__Group__4__Impl
	rule__DoWhileLoop__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DoWhileLoop__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoWhileLoopAccess().getLeftParenthesisKeyword_4()); }
	'('
	{ after(grammarAccess.getDoWhileLoopAccess().getLeftParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoWhileLoop__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DoWhileLoop__Group__5__Impl
	rule__DoWhileLoop__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DoWhileLoop__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoWhileLoopAccess().getCondAssignment_5()); }
	(rule__DoWhileLoop__CondAssignment_5)
	{ after(grammarAccess.getDoWhileLoopAccess().getCondAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoWhileLoop__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DoWhileLoop__Group__6__Impl
	rule__DoWhileLoop__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__DoWhileLoop__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoWhileLoopAccess().getRightParenthesisKeyword_6()); }
	')'
	{ after(grammarAccess.getDoWhileLoopAccess().getRightParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoWhileLoop__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DoWhileLoop__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DoWhileLoop__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoWhileLoopAccess().getSemicolonKeyword_7()); }
	';'
	{ after(grammarAccess.getDoWhileLoopAccess().getSemicolonKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JumpStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JumpStatement__Group__0__Impl
	rule__JumpStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JumpStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJumpStatementAccess().getJumpStatementAction_0()); }
	()
	{ after(grammarAccess.getJumpStatementAccess().getJumpStatementAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JumpStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JumpStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JumpStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJumpStatementAccess().getAlternatives_1()); }
	(rule__JumpStatement__Alternatives_1)
	{ after(grammarAccess.getJumpStatementAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JumpStatement__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JumpStatement__Group_1_0__0__Impl
	rule__JumpStatement__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JumpStatement__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJumpStatementAccess().getGotoKeyword_1_0_0()); }
	'goto'
	{ after(grammarAccess.getJumpStatementAccess().getGotoKeyword_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JumpStatement__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JumpStatement__Group_1_0__1__Impl
	rule__JumpStatement__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JumpStatement__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJumpStatementAccess().getIDTerminalRuleCall_1_0_1()); }
	RULE_ID
	{ after(grammarAccess.getJumpStatementAccess().getIDTerminalRuleCall_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JumpStatement__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JumpStatement__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JumpStatement__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJumpStatementAccess().getSemicolonKeyword_1_0_2()); }
	';'
	{ after(grammarAccess.getJumpStatementAccess().getSemicolonKeyword_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JumpStatement__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JumpStatement__Group_1_1__0__Impl
	rule__JumpStatement__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JumpStatement__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJumpStatementAccess().getContinueKeyword_1_1_0()); }
	'continue'
	{ after(grammarAccess.getJumpStatementAccess().getContinueKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JumpStatement__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JumpStatement__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JumpStatement__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJumpStatementAccess().getSemicolonKeyword_1_1_1()); }
	';'
	{ after(grammarAccess.getJumpStatementAccess().getSemicolonKeyword_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JumpStatement__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JumpStatement__Group_1_2__0__Impl
	rule__JumpStatement__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JumpStatement__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJumpStatementAccess().getBreakKeyword_1_2_0()); }
	'break'
	{ after(grammarAccess.getJumpStatementAccess().getBreakKeyword_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JumpStatement__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JumpStatement__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JumpStatement__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJumpStatementAccess().getSemicolonKeyword_1_2_1()); }
	';'
	{ after(grammarAccess.getJumpStatementAccess().getSemicolonKeyword_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CReturn__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CReturn__Group__0__Impl
	rule__CReturn__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CReturn__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCReturnAccess().getCReturnAction_0()); }
	()
	{ after(grammarAccess.getCReturnAccess().getCReturnAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CReturn__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CReturn__Group__1__Impl
	rule__CReturn__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CReturn__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCReturnAccess().getReturnKeyword_1()); }
	'return'
	{ after(grammarAccess.getCReturnAccess().getReturnKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CReturn__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CReturn__Group__2__Impl
	rule__CReturn__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CReturn__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCReturnAccess().getExpRAssignment_2()); }
	(rule__CReturn__ExpRAssignment_2)?
	{ after(grammarAccess.getCReturnAccess().getExpRAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CReturn__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CReturn__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CReturn__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCReturnAccess().getSemicolonKeyword_3()); }
	';'
	{ after(grammarAccess.getCReturnAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__GreetingsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getGreetingsTranslationUnitParserRuleCall_0()); }
		ruleTranslationUnit
		{ after(grammarAccess.getModelAccess().getGreetingsTranslationUnitParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TranslationUnit__ExDeclarationAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTranslationUnitAccess().getExDeclarationExternalDeclarationParserRuleCall_0()); }
		ruleExternalDeclaration
		{ after(grammarAccess.getTranslationUnitAccess().getExDeclarationExternalDeclarationParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__DeclarationSpecAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionDefinitionAccess().getDeclarationSpecDeclarationSpecifierParserRuleCall_0_0()); }
		ruleDeclarationSpecifier
		{ after(grammarAccess.getFunctionDefinitionAccess().getDeclarationSpecDeclarationSpecifierParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__DeclaAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionDefinitionAccess().getDeclaDeclaratorParserRuleCall_1_0()); }
		ruleDeclarator
		{ after(grammarAccess.getFunctionDefinitionAccess().getDeclaDeclaratorParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__DeclaListAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionDefinitionAccess().getDeclaListDeclarationParserRuleCall_2_0()); }
		ruleDeclaration
		{ after(grammarAccess.getFunctionDefinitionAccess().getDeclaListDeclarationParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__BodyAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionDefinitionAccess().getBodyCompoundStatementParserRuleCall_3_0()); }
		ruleCompoundStatement
		{ after(grammarAccess.getFunctionDefinitionAccess().getBodyCompoundStatementParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionC__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionCAccess().getRightAssignmentExpressionParserRuleCall_1_1_0()); }
		ruleAssignmentExpression
		{ after(grammarAccess.getExpressionCAccess().getRightAssignmentExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentExpression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentExpressionAccess().getRightConditionalExpressionParserRuleCall_1_2_0()); }
		ruleConditionalExpression
		{ after(grammarAccess.getAssignmentExpressionAccess().getRightConditionalExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__SecondAssignment_1_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalExpressionAccess().getSecondExpressionCParserRuleCall_1_1_0_1_0()); }
		ruleExpressionC
		{ after(grammarAccess.getConditionalExpressionAccess().getSecondExpressionCParserRuleCall_1_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__ThirdAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalExpressionAccess().getThirdConditionalExpressionParserRuleCall_1_3_0()); }
		ruleConditionalExpression
		{ after(grammarAccess.getConditionalExpressionAccess().getThirdConditionalExpressionParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpression__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalOrExpressionAccess().getRightLogicalAndExpressionParserRuleCall_1_1_0()); }
		ruleLogicalAndExpression
		{ after(grammarAccess.getLogicalOrExpressionAccess().getRightLogicalAndExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpression__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalAndExpressionAccess().getRightInclusiveOrExpressionParserRuleCall_1_1_0()); }
		ruleInclusiveOrExpression
		{ after(grammarAccess.getLogicalAndExpressionAccess().getRightInclusiveOrExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InclusiveOrExpression__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInclusiveOrExpressionAccess().getRightExclusiveOrExpressionParserRuleCall_1_1_0()); }
		ruleExclusiveOrExpression
		{ after(grammarAccess.getInclusiveOrExpressionAccess().getRightExclusiveOrExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExclusiveOrExpression__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExclusiveOrExpressionAccess().getRightAndExpressionParserRuleCall_1_1_0()); }
		ruleAndExpression
		{ after(grammarAccess.getExclusiveOrExpressionAccess().getRightAndExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndExpressionAccess().getRightEqualityExpressionParserRuleCall_1_1_0()); }
		ruleEqualityExpression
		{ after(grammarAccess.getAndExpressionAccess().getRightEqualityExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityExpressionAccess().getRightRelationalExpressionParserRuleCall_1_1_0()); }
		ruleRelationalExpression
		{ after(grammarAccess.getEqualityExpressionAccess().getRightRelationalExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationalExpressionAccess().getRightShiftExpressionParserRuleCall_1_1_0()); }
		ruleShiftExpression
		{ after(grammarAccess.getRelationalExpressionAccess().getRightShiftExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpression__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShiftExpressionAccess().getRightAdditiveExpressionParserRuleCall_1_1_0()); }
		ruleAdditiveExpression
		{ after(grammarAccess.getShiftExpressionAccess().getRightAdditiveExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditiveExpressionAccess().getRightMultiplicativeExpressionParserRuleCall_1_1_0()); }
		ruleMultiplicativeExpression
		{ after(grammarAccess.getAdditiveExpressionAccess().getRightMultiplicativeExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicativeExpressionAccess().getRightUnaryExpressionParserRuleCall_1_1_0()); }
		ruleUnaryExpression
		{ after(grammarAccess.getMultiplicativeExpressionAccess().getRightUnaryExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__PostExpAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getPostExpPostfixExpressionParserRuleCall_0_0()); }
		rulePostfixExpression
		{ after(grammarAccess.getUnaryExpressionAccess().getPostExpPostfixExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__CAssignment_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getCCastRuleParserRuleCall_1_0_0_0()); }
		ruleCastRule
		{ after(grammarAccess.getUnaryExpressionAccess().getCCastRuleParserRuleCall_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__UnExpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getUnExpUnaryExpressionParserRuleCall_1_1_0()); }
		ruleUnaryExpression
		{ after(grammarAccess.getUnaryExpressionAccess().getUnExpUnaryExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CastRule__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCastRuleAccess().getTypeTypesParserRuleCall_1_0()); }
		ruleTypes
		{ after(grammarAccess.getCastRuleAccess().getTypeTypesParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__PrimaryExpAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostfixExpressionAccess().getPrimaryExpPrimaryExpressionParserRuleCall_1_0_0()); }
		rulePrimaryExpression
		{ after(grammarAccess.getPostfixExpressionAccess().getPrimaryExpPrimaryExpressionParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__PostTypeAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostfixExpressionAccess().getPostTypePostfixTypeParserRuleCall_1_1_0()); }
		rulePostfixType
		{ after(grammarAccess.getPostfixExpressionAccess().getPostTypePostfixTypeParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Postfix2Assignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostfixExpressionAccess().getPostfix2PostfixExpression2ParserRuleCall_2_0()); }
		rulePostfixExpression2
		{ after(grammarAccess.getPostfixExpressionAccess().getPostfix2PostfixExpression2ParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression2__ExppostAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostfixExpression2Access().getExppostExpressionCParserRuleCall_0_2_0()); }
		ruleExpressionC
		{ after(grammarAccess.getPostfixExpression2Access().getExppostExpressionCParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression2__ArgumentExpListAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostfixExpression2Access().getArgumentExpListArgumentExpressionListParserRuleCall_1_2_0()); }
		ruleArgumentExpressionList
		{ after(grammarAccess.getPostfixExpression2Access().getArgumentExpListArgumentExpressionListParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression2__NameAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostfixExpression2Access().getNameIDTerminalRuleCall_2_2_0()); }
		RULE_ID
		{ after(grammarAccess.getPostfixExpression2Access().getNameIDTerminalRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression2__NameAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostfixExpression2Access().getNameIDTerminalRuleCall_3_2_0()); }
		RULE_ID
		{ after(grammarAccess.getPostfixExpression2Access().getNameIDTerminalRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression2__OpAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostfixExpression2Access().getOpOpIncParserRuleCall_4_1_0()); }
		ruleOpInc
		{ after(grammarAccess.getPostfixExpression2Access().getOpOpIncParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixType__InitAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostfixTypeAccess().getInitInitializerListParserRuleCall_2_0()); }
		ruleInitializerList
		{ after(grammarAccess.getPostfixTypeAccess().getInitInitializerListParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__ChAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getChCHARTerminalRuleCall_0_1_0()); }
		RULE_CHAR
		{ after(grammarAccess.getPrimaryExpressionAccess().getChCHARTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__StrAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getStrSTRINGCTerminalRuleCall_1_1_0()); }
		RULE_STRINGC
		{ after(grammarAccess.getPrimaryExpressionAccess().getStrSTRINGCTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__NameAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getNameIDTerminalRuleCall_3_1_0()); }
		RULE_ID
		{ after(grammarAccess.getPrimaryExpressionAccess().getNameIDTerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentExpressionList__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentExpressionListAccess().getRightAssignmentExpressionParserRuleCall_1_1_0()); }
		ruleAssignmentExpression
		{ after(grammarAccess.getArgumentExpressionListAccess().getRightAssignmentExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__IntCAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantAccess().getIntCI_CONSTANTTerminalRuleCall_0_1_0()); }
		RULE_I_CONSTANT
		{ after(grammarAccess.getConstantAccess().getIntCI_CONSTANTTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__FloatCAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantAccess().getFloatCF_CONSTANTTerminalRuleCall_1_1_0()); }
		RULE_F_CONSTANT
		{ after(grammarAccess.getConstantAccess().getFloatCF_CONSTANTTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationConstant___IDAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumerationConstantAccess().get_IDIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getEnumerationConstantAccess().get_IDIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericSelection__ExpAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGenericSelectionAccess().getExpAssignmentExpressionParserRuleCall_2_0()); }
		ruleAssignmentExpression
		{ after(grammarAccess.getGenericSelectionAccess().getExpAssignmentExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericSelection__GenericAssocListAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGenericSelectionAccess().getGenericAssocListGenericAssocListParserRuleCall_4_0()); }
		ruleGenericAssocList
		{ after(grammarAccess.getGenericSelectionAccess().getGenericAssocListGenericAssocListParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericAssocList__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGenericAssocListAccess().getRightGenericAssociationParserRuleCall_1_1_0()); }
		ruleGenericAssociation
		{ after(grammarAccess.getGenericAssocListAccess().getRightGenericAssociationParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericAssociation__TypeAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGenericAssociationAccess().getTypeTypeNameParserRuleCall_0_0_0()); }
		ruleTypeName
		{ after(grammarAccess.getGenericAssociationAccess().getTypeTypeNameParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericAssociation__AssExpAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGenericAssociationAccess().getAssExpAssignmentExpressionParserRuleCall_0_2_0()); }
		ruleAssignmentExpression
		{ after(grammarAccess.getGenericAssociationAccess().getAssExpAssignmentExpressionParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericAssociation__ExpAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGenericAssociationAccess().getExpAssignmentExpressionParserRuleCall_1_2_0()); }
		ruleAssignmentExpression
		{ after(grammarAccess.getGenericAssociationAccess().getExpAssignmentExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__DeclarationSpecAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclarationAccess().getDeclarationSpecDeclarationSpecifierParserRuleCall_0_1_0()); }
		ruleDeclarationSpecifier
		{ after(grammarAccess.getDeclarationAccess().getDeclarationSpecDeclarationSpecifierParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__DeclaratorListAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclarationAccess().getDeclaratorListInitDeclaratorListParserRuleCall_0_2_0()); }
		ruleInitDeclaratorList
		{ after(grammarAccess.getDeclarationAccess().getDeclaratorListInitDeclaratorListParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarationSpecifier__StoreClassAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclarationSpecifierAccess().getStoreClassStorageClassSpecifierParserRuleCall_0_0()); }
		ruleStorageClassSpecifier
		{ after(grammarAccess.getDeclarationSpecifierAccess().getStoreClassStorageClassSpecifierParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarationSpecifier__FuncSpecAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclarationSpecifierAccess().getFuncSpecFunctionSpecifierParserRuleCall_2_0()); }
		ruleFunctionSpecifier
		{ after(grammarAccess.getDeclarationSpecifierAccess().getFuncSpecFunctionSpecifierParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitDeclaratorList__IniDecAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitDeclaratorListAccess().getIniDecInitDeclaratorParserRuleCall_0_0()); }
		ruleInitDeclarator
		{ after(grammarAccess.getInitDeclaratorListAccess().getIniDecInitDeclaratorParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitDeclaratorList__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitDeclaratorListAccess().getRightInitDeclaratorParserRuleCall_1_1_0()); }
		ruleInitDeclarator
		{ after(grammarAccess.getInitDeclaratorListAccess().getRightInitDeclaratorParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitDeclarator__DecAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitDeclaratorAccess().getDecDeclaratorParserRuleCall_0_0()); }
		ruleDeclarator
		{ after(grammarAccess.getInitDeclaratorAccess().getDecDeclaratorParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitDeclarator__InitAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitDeclaratorAccess().getInitInitializerParserRuleCall_1_1_0()); }
		ruleInitializer
		{ after(grammarAccess.getInitDeclaratorAccess().getInitInitializerParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__TypeAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeSpecifierAccess().getTypeTypesParserRuleCall_1_0_0()); }
		ruleTypes
		{ after(grammarAccess.getTypeSpecifierAccess().getTypeTypesParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__AtomicTypeAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeSpecifierAccess().getAtomicTypeAtomicTypeSpecifierParserRuleCall_1_1_0()); }
		ruleAtomicTypeSpecifier
		{ after(grammarAccess.getTypeSpecifierAccess().getAtomicTypeAtomicTypeSpecifierParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__StructSpecAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeSpecifierAccess().getStructSpecStructOrUnionSpecifierParserRuleCall_1_2_0()); }
		ruleStructOrUnionSpecifier
		{ after(grammarAccess.getTypeSpecifierAccess().getStructSpecStructOrUnionSpecifierParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__EnumSpecAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeSpecifierAccess().getEnumSpecEnumSpecifierParserRuleCall_1_3_0()); }
		ruleEnumSpecifier
		{ after(grammarAccess.getTypeSpecifierAccess().getEnumSpecEnumSpecifierParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructOrUnionSpecifier__StructListAssignment_2_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructOrUnionSpecifierAccess().getStructListStructDeclarationListParserRuleCall_2_0_1_0()); }
		ruleStructDeclarationList
		{ after(grammarAccess.getStructOrUnionSpecifierAccess().getStructListStructDeclarationListParserRuleCall_2_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructOrUnionSpecifier__StructListAssignment_2_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructOrUnionSpecifierAccess().getStructListStructDeclarationListParserRuleCall_2_1_1_1_0()); }
		ruleStructDeclarationList
		{ after(grammarAccess.getStructOrUnionSpecifierAccess().getStructListStructDeclarationListParserRuleCall_2_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclarationList__StructDeclarationAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructDeclarationListAccess().getStructDeclarationStructDeclarationParserRuleCall_0()); }
		ruleStructDeclaration
		{ after(grammarAccess.getStructDeclarationListAccess().getStructDeclarationStructDeclarationParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaration__SpecifierListAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructDeclarationAccess().getSpecifierListSpecifierQualifierListParserRuleCall_0_1_0()); }
		ruleSpecifierQualifierList
		{ after(grammarAccess.getStructDeclarationAccess().getSpecifierListSpecifierQualifierListParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaration__StructListAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructDeclarationAccess().getStructListStructDeclaratorListParserRuleCall_0_2_0()); }
		ruleStructDeclaratorList
		{ after(grammarAccess.getStructDeclarationAccess().getStructListStructDeclaratorListParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecifierQualifierList__TypeAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSpecifierQualifierListAccess().getTypeTypeSpecifierParserRuleCall_1_0_0()); }
		ruleTypeSpecifier
		{ after(grammarAccess.getSpecifierQualifierListAccess().getTypeTypeSpecifierParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecifierQualifierList__TypeQualAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSpecifierQualifierListAccess().getTypeQualTypeQualifierParserRuleCall_1_1_0()); }
		ruleTypeQualifier
		{ after(grammarAccess.getSpecifierQualifierListAccess().getTypeQualTypeQualifierParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaratorList__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructDeclaratorListAccess().getRightStructDeclaratorParserRuleCall_1_1_0()); }
		ruleStructDeclarator
		{ after(grammarAccess.getStructDeclaratorListAccess().getRightStructDeclaratorParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclarator__ConstantExpAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructDeclaratorAccess().getConstantExpConstantExpressionParserRuleCall_0_2_0()); }
		ruleConstantExpression
		{ after(grammarAccess.getStructDeclaratorAccess().getConstantExpConstantExpressionParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclarator__DeclAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructDeclaratorAccess().getDeclDeclaratorParserRuleCall_1_1_0()); }
		ruleDeclarator
		{ after(grammarAccess.getStructDeclaratorAccess().getDeclDeclaratorParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclarator__ConstantExpAssignment_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructDeclaratorAccess().getConstantExpConstantExpressionParserRuleCall_1_2_1_0()); }
		ruleConstantExpression
		{ after(grammarAccess.getStructDeclaratorAccess().getConstantExpConstantExpressionParserRuleCall_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumSpecifier__EnumListAssignment_2_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumSpecifierAccess().getEnumListEnumeratorListParserRuleCall_2_0_1_0()); }
		ruleEnumeratorList
		{ after(grammarAccess.getEnumSpecifierAccess().getEnumListEnumeratorListParserRuleCall_2_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumSpecifier__EnumListAssignment_2_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumSpecifierAccess().getEnumListEnumeratorListParserRuleCall_2_1_1_1_0()); }
		ruleEnumeratorList
		{ after(grammarAccess.getEnumSpecifierAccess().getEnumListEnumeratorListParserRuleCall_2_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratorList__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumeratorListAccess().getRightEnumeratorParserRuleCall_1_1_0()); }
		ruleEnumerator
		{ after(grammarAccess.getEnumeratorListAccess().getRightEnumeratorParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumerator__EnumConstAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumeratorAccess().getEnumConstEnumerationConstantParserRuleCall_1_0()); }
		ruleEnumerationConstant
		{ after(grammarAccess.getEnumeratorAccess().getEnumConstEnumerationConstantParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumerator__ExpAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumeratorAccess().getExpConstantExpressionParserRuleCall_2_1_0()); }
		ruleConstantExpression
		{ after(grammarAccess.getEnumeratorAccess().getExpConstantExpressionParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlignmentSpecifier__TypeAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlignmentSpecifierAccess().getTypeTypeNameParserRuleCall_3_0_0()); }
		ruleTypeName
		{ after(grammarAccess.getAlignmentSpecifierAccess().getTypeTypeNameParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlignmentSpecifier__ExpAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlignmentSpecifierAccess().getExpConstantExpressionParserRuleCall_3_1_0()); }
		ruleConstantExpression
		{ after(grammarAccess.getAlignmentSpecifierAccess().getExpConstantExpressionParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarator__PointAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclaratorAccess().getPointPointerParserRuleCall_0_0()); }
		rulePointer
		{ after(grammarAccess.getDeclaratorAccess().getPointPointerParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarator__DirectDeclAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclaratorAccess().getDirectDeclDirectDeclaratorParserRuleCall_1_0()); }
		ruleDirectDeclarator
		{ after(grammarAccess.getDeclaratorAccess().getDirectDeclDirectDeclaratorParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator__NameAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectDeclaratorAccess().getNameIDTerminalRuleCall_1_0_0()); }
		RULE_ID
		{ after(grammarAccess.getDirectDeclaratorAccess().getNameIDTerminalRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator__DcAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectDeclaratorAccess().getDcDeclaratorParserRuleCall_1_1_1_0()); }
		ruleDeclarator
		{ after(grammarAccess.getDirectDeclaratorAccess().getDcDeclaratorParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator__Declarator2Assignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectDeclaratorAccess().getDeclarator2DirectDeclarator2ParserRuleCall_2_0()); }
		ruleDirectDeclarator2
		{ after(grammarAccess.getDirectDeclaratorAccess().getDeclarator2DirectDeclarator2ParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__TypeQualListAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectDeclarator2Access().getTypeQualListTypeQualifierListParserRuleCall_1_3_0()); }
		ruleTypeQualifierList
		{ after(grammarAccess.getDirectDeclarator2Access().getTypeQualListTypeQualifierListParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__ExpAssignment_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectDeclarator2Access().getExpAssignmentExpressionParserRuleCall_1_4_0()); }
		ruleAssignmentExpression
		{ after(grammarAccess.getDirectDeclarator2Access().getExpAssignmentExpressionParserRuleCall_1_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__ExpAssignment_2_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectDeclarator2Access().getExpAssignmentExpressionParserRuleCall_2_3_0()); }
		ruleAssignmentExpression
		{ after(grammarAccess.getDirectDeclarator2Access().getExpAssignmentExpressionParserRuleCall_2_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__TypeQualListAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectDeclarator2Access().getTypeQualListTypeQualifierListParserRuleCall_3_2_0()); }
		ruleTypeQualifierList
		{ after(grammarAccess.getDirectDeclarator2Access().getTypeQualListTypeQualifierListParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__TypeQualListAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectDeclarator2Access().getTypeQualListTypeQualifierListParserRuleCall_4_2_0()); }
		ruleTypeQualifierList
		{ after(grammarAccess.getDirectDeclarator2Access().getTypeQualListTypeQualifierListParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__ExpAssignment_4_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectDeclarator2Access().getExpAssignmentExpressionParserRuleCall_4_4_0()); }
		ruleAssignmentExpression
		{ after(grammarAccess.getDirectDeclarator2Access().getExpAssignmentExpressionParserRuleCall_4_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__TypeQualListAssignment_5_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectDeclarator2Access().getTypeQualListTypeQualifierListParserRuleCall_5_2_0()); }
		ruleTypeQualifierList
		{ after(grammarAccess.getDirectDeclarator2Access().getTypeQualListTypeQualifierListParserRuleCall_5_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__ExpAssignment_5_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectDeclarator2Access().getExpAssignmentExpressionParserRuleCall_5_3_0()); }
		ruleAssignmentExpression
		{ after(grammarAccess.getDirectDeclarator2Access().getExpAssignmentExpressionParserRuleCall_5_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__TypeQualListAssignment_6_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectDeclarator2Access().getTypeQualListTypeQualifierListParserRuleCall_6_2_0()); }
		ruleTypeQualifierList
		{ after(grammarAccess.getDirectDeclarator2Access().getTypeQualListTypeQualifierListParserRuleCall_6_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__ExpAssignment_7_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectDeclarator2Access().getExpAssignmentExpressionParserRuleCall_7_2_0()); }
		ruleAssignmentExpression
		{ after(grammarAccess.getDirectDeclarator2Access().getExpAssignmentExpressionParserRuleCall_7_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__IdListAssignment_8_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectDeclarator2Access().getIdListIdentifierListParserRuleCall_8_2_0_0()); }
		ruleIdentifierList
		{ after(grammarAccess.getDirectDeclarator2Access().getIdListIdentifierListParserRuleCall_8_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator2__ParamListAssignment_8_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectDeclarator2Access().getParamListParameterTypeListParserRuleCall_8_2_1_0()); }
		ruleParameterTypeList
		{ after(grammarAccess.getDirectDeclarator2Access().getParamListParameterTypeListParserRuleCall_8_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointer__TypeQualListAssignment_2_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPointerAccess().getTypeQualListTypeQualifierParserRuleCall_2_0_0_0()); }
		ruleTypeQualifier
		{ after(grammarAccess.getPointerAccess().getTypeQualListTypeQualifierParserRuleCall_2_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeQualifierList__TypeQualListAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeQualifierListAccess().getTypeQualListTypeQualifierParserRuleCall_0()); }
		ruleTypeQualifier
		{ after(grammarAccess.getTypeQualifierListAccess().getTypeQualListTypeQualifierParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterListAccess().getRightParameterDeclarationParserRuleCall_1_1_0()); }
		ruleParameterDeclaration
		{ after(grammarAccess.getParameterListAccess().getRightParameterDeclarationParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__DeclarationSpecAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterDeclarationAccess().getDeclarationSpecDeclarationSpecifierParserRuleCall_1_0()); }
		ruleDeclarationSpecifier
		{ after(grammarAccess.getParameterDeclarationAccess().getDeclarationSpecDeclarationSpecifierParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__AbstractAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterDeclarationAccess().getAbstractAbstractDeclaratorParserRuleCall_2_0_0()); }
		ruleAbstractDeclarator
		{ after(grammarAccess.getParameterDeclarationAccess().getAbstractAbstractDeclaratorParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__DeclaratorAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterDeclarationAccess().getDeclaratorDeclaratorParserRuleCall_2_1_0()); }
		ruleDeclarator
		{ after(grammarAccess.getParameterDeclarationAccess().getDeclaratorDeclaratorParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeName__SpecifierQualListAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeNameAccess().getSpecifierQualListSpecifierQualifierListParserRuleCall_1_0()); }
		ruleSpecifierQualifierList
		{ after(grammarAccess.getTypeNameAccess().getSpecifierQualListSpecifierQualifierListParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeName__AbsDeclaratorAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeNameAccess().getAbsDeclaratorAbstractDeclaratorParserRuleCall_2_0()); }
		ruleAbstractDeclarator
		{ after(grammarAccess.getTypeNameAccess().getAbsDeclaratorAbstractDeclaratorParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractDeclarator__PointAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractDeclaratorAccess().getPointPointerParserRuleCall_0_1_0()); }
		rulePointer
		{ after(grammarAccess.getAbstractDeclaratorAccess().getPointPointerParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractDeclarator__AbstractDeclaratorAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractDeclaratorAccess().getAbstractDeclaratorDirectAbstractDeclaratorParserRuleCall_0_2_0()); }
		ruleDirectAbstractDeclarator
		{ after(grammarAccess.getAbstractDeclaratorAccess().getAbstractDeclaratorDirectAbstractDeclaratorParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractDeclarator__AbstractDeclaratorAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractDeclaratorAccess().getAbstractDeclaratorDirectAbstractDeclaratorParserRuleCall_1_0()); }
		ruleDirectAbstractDeclarator
		{ after(grammarAccess.getAbstractDeclaratorAccess().getAbstractDeclaratorDirectAbstractDeclaratorParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator__Direct_declarator2Assignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectAbstractDeclaratorAccess().getDirect_declarator2DirectAbstractDeclarator2ParserRuleCall_3_0()); }
		ruleDirectAbstractDeclarator2
		{ after(grammarAccess.getDirectAbstractDeclaratorAccess().getDirect_declarator2DirectAbstractDeclarator2ParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator2__TypeQualListAssignment_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectAbstractDeclarator2Access().getTypeQualListTypeQualifierListParserRuleCall_1_1_2_0()); }
		ruleTypeQualifierList
		{ after(grammarAccess.getDirectAbstractDeclarator2Access().getTypeQualListTypeQualifierListParserRuleCall_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator2__ExpAssignment_1_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectAbstractDeclarator2Access().getExpAssignmentExpressionParserRuleCall_1_1_3_0()); }
		ruleAssignmentExpression
		{ after(grammarAccess.getDirectAbstractDeclarator2Access().getExpAssignmentExpressionParserRuleCall_1_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator2__ExpAssignment_1_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectAbstractDeclarator2Access().getExpAssignmentExpressionParserRuleCall_1_2_2_0()); }
		ruleAssignmentExpression
		{ after(grammarAccess.getDirectAbstractDeclarator2Access().getExpAssignmentExpressionParserRuleCall_1_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator2__TypeQualListAssignment_1_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectAbstractDeclarator2Access().getTypeQualListTypeQualifierListParserRuleCall_1_3_1_0()); }
		ruleTypeQualifierList
		{ after(grammarAccess.getDirectAbstractDeclarator2Access().getTypeQualListTypeQualifierListParserRuleCall_1_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator2__ExpAssignment_1_3_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectAbstractDeclarator2Access().getExpAssignmentExpressionParserRuleCall_1_3_3_0()); }
		ruleAssignmentExpression
		{ after(grammarAccess.getDirectAbstractDeclarator2Access().getExpAssignmentExpressionParserRuleCall_1_3_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator2__TypeQualListAssignment_1_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectAbstractDeclarator2Access().getTypeQualListTypeQualifierListParserRuleCall_1_4_1_0()); }
		ruleTypeQualifierList
		{ after(grammarAccess.getDirectAbstractDeclarator2Access().getTypeQualListTypeQualifierListParserRuleCall_1_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator2__ExpAssignment_1_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectAbstractDeclarator2Access().getExpAssignmentExpressionParserRuleCall_1_4_2_0()); }
		ruleAssignmentExpression
		{ after(grammarAccess.getDirectAbstractDeclarator2Access().getExpAssignmentExpressionParserRuleCall_1_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator2__TypeQualListAssignment_1_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectAbstractDeclarator2Access().getTypeQualListTypeQualifierListParserRuleCall_1_5_1_0()); }
		ruleTypeQualifierList
		{ after(grammarAccess.getDirectAbstractDeclarator2Access().getTypeQualListTypeQualifierListParserRuleCall_1_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator2__ExpAssignment_1_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectAbstractDeclarator2Access().getExpAssignmentExpressionParserRuleCall_1_6_1_0()); }
		ruleAssignmentExpression
		{ after(grammarAccess.getDirectAbstractDeclarator2Access().getExpAssignmentExpressionParserRuleCall_1_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectAbstractDeclarator2__ParamListAssignment_1_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectAbstractDeclarator2Access().getParamListParameterTypeListParserRuleCall_1_7_1_0()); }
		ruleParameterTypeList
		{ after(grammarAccess.getDirectAbstractDeclarator2Access().getParamListParameterTypeListParserRuleCall_1_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer__InitAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitializerAccess().getInitInitializerListParserRuleCall_0_2_0()); }
		ruleInitializerList
		{ after(grammarAccess.getInitializerAccess().getInitInitializerListParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer__ExpAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitializerAccess().getExpAssignmentExpressionParserRuleCall_1_0()); }
		ruleAssignmentExpression
		{ after(grammarAccess.getInitializerAccess().getExpAssignmentExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitializerList__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitializerListAccess().getRightInitializerList2ParserRuleCall_1_1_0()); }
		ruleInitializerList2
		{ after(grammarAccess.getInitializerListAccess().getRightInitializerList2ParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitializerList2__DesigAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitializerList2Access().getDesigDesignationParserRuleCall_0_0()); }
		ruleDesignation
		{ after(grammarAccess.getInitializerList2Access().getDesigDesignationParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitializerList2__InitAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitializerList2Access().getInitInitializerParserRuleCall_1_0()); }
		ruleInitializer
		{ after(grammarAccess.getInitializerList2Access().getInitInitializerParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DesignatorList__DesignatorListAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDesignatorListAccess().getDesignatorListDesignatorParserRuleCall_0()); }
		ruleDesignator
		{ after(grammarAccess.getDesignatorListAccess().getDesignatorListDesignatorParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Designator__ConstExpAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDesignatorAccess().getConstExpConstantExpressionParserRuleCall_0_1_0()); }
		ruleConstantExpression
		{ after(grammarAccess.getDesignatorAccess().getConstExpConstantExpressionParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Designator___IDAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDesignatorAccess().get_IDIDTerminalRuleCall_1_1_0()); }
		RULE_ID
		{ after(grammarAccess.getDesignatorAccess().get_IDIDTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticAssertDeclaration__ConstExpAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStaticAssertDeclarationAccess().getConstExpConstantExpressionParserRuleCall_2_0()); }
		ruleConstantExpression
		{ after(grammarAccess.getStaticAssertDeclarationAccess().getConstExpConstantExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticAssertDeclaration__LiteralAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStaticAssertDeclarationAccess().getLiteralSTRINGCTerminalRuleCall_4_0()); }
		RULE_STRINGC
		{ after(grammarAccess.getStaticAssertDeclarationAccess().getLiteralSTRINGCTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStatement__RightAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLabeledStatementAccess().getRightStatementParserRuleCall_0_2_0()); }
		ruleStatement
		{ after(grammarAccess.getLabeledStatementAccess().getRightStatementParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStatement__ExpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLabeledStatementAccess().getExpConstantExpressionParserRuleCall_1_1_0()); }
		ruleConstantExpression
		{ after(grammarAccess.getLabeledStatementAccess().getExpConstantExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStatement__RightAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLabeledStatementAccess().getRightStatementParserRuleCall_1_3_0()); }
		ruleStatement
		{ after(grammarAccess.getLabeledStatementAccess().getRightStatementParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStatement__RightAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLabeledStatementAccess().getRightStatementParserRuleCall_2_2_0()); }
		ruleStatement
		{ after(grammarAccess.getLabeledStatementAccess().getRightStatementParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundStatement__BlockListAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompoundStatementAccess().getBlockListBlockItemParserRuleCall_2_0()); }
		ruleBlockItem
		{ after(grammarAccess.getCompoundStatementAccess().getBlockListBlockItemParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionStatement__ExpAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionStatementAccess().getExpExpressionCParserRuleCall_1_0()); }
		ruleExpressionC
		{ after(grammarAccess.getExpressionStatementAccess().getExpExpressionCParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__CondAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStatementAccess().getCondExpressionCParserRuleCall_3_0()); }
		ruleExpressionC
		{ after(grammarAccess.getIfStatementAccess().getCondExpressionCParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__ThenAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStatementAccess().getThenStatementParserRuleCall_5_0()); }
		ruleStatement
		{ after(grammarAccess.getIfStatementAccess().getThenStatementParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__ElseAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStatementAccess().getElseStatementParserRuleCall_6_1_0()); }
		ruleStatement
		{ after(grammarAccess.getIfStatementAccess().getElseStatementParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__SwitchExpAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSwitchStatementAccess().getSwitchExpExpressionCParserRuleCall_3_0()); }
		ruleExpressionC
		{ after(grammarAccess.getSwitchStatementAccess().getSwitchExpExpressionCParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__StmtAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSwitchStatementAccess().getStmtStatementParserRuleCall_5_0()); }
		ruleStatement
		{ after(grammarAccess.getSwitchStatementAccess().getStmtStatementParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Exp1Assignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForLoopAccess().getExp1ExpressionStatementParserRuleCall_3_0_0()); }
		ruleExpressionStatement
		{ after(grammarAccess.getForLoopAccess().getExp1ExpressionStatementParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__DeclarationAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForLoopAccess().getDeclarationDeclarationParserRuleCall_3_1_0()); }
		ruleDeclaration
		{ after(grammarAccess.getForLoopAccess().getDeclarationDeclarationParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Exp2Assignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForLoopAccess().getExp2ExpressionStatementParserRuleCall_4_0()); }
		ruleExpressionStatement
		{ after(grammarAccess.getForLoopAccess().getExp2ExpressionStatementParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Exp3Assignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForLoopAccess().getExp3ExpressionCParserRuleCall_5_0()); }
		ruleExpressionC
		{ after(grammarAccess.getForLoopAccess().getExp3ExpressionCParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__BodyAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForLoopAccess().getBodyStatementParserRuleCall_7_0()); }
		ruleStatement
		{ after(grammarAccess.getForLoopAccess().getBodyStatementParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__CondAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileLoopAccess().getCondExpressionCParserRuleCall_3_0()); }
		ruleExpressionC
		{ after(grammarAccess.getWhileLoopAccess().getCondExpressionCParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__BodyAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileLoopAccess().getBodyStatementParserRuleCall_5_0()); }
		ruleStatement
		{ after(grammarAccess.getWhileLoopAccess().getBodyStatementParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoWhileLoop__BodyAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDoWhileLoopAccess().getBodyStatementParserRuleCall_2_0()); }
		ruleStatement
		{ after(grammarAccess.getDoWhileLoopAccess().getBodyStatementParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoWhileLoop__CondAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDoWhileLoopAccess().getCondExpressionCParserRuleCall_5_0()); }
		ruleExpressionC
		{ after(grammarAccess.getDoWhileLoopAccess().getCondExpressionCParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JumpStatement__RetAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJumpStatementAccess().getRetCReturnParserRuleCall_1_3_0()); }
		ruleCReturn
		{ after(grammarAccess.getJumpStatementAccess().getRetCReturnParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CReturn__ExpRAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCReturnAccess().getExpRExpressionCParserRuleCall_2_0()); }
		ruleExpressionC
		{ after(grammarAccess.getCReturnAccess().getExpRExpressionCParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

fragment RULE_IS : (('u'|'U') ('l'|'L'|'ll'|'LL')?|('l'|'L'|'ll'|'LL') ('u'|'U')?);

fragment RULE_HP : '0' ('x'|'X');

fragment RULE_NZ : '1'..'9';

fragment RULE_H : ('a'..'f'|'A'..'F'|'0'..'9');

fragment RULE_E : ('E'|'e') ('+'|'-')? RULE_INT;

fragment RULE_P : ('P'|'p') ('+'|'-')? RULE_INT;

fragment RULE_FS : ('f'|'F'|'l'|'L');

RULE_I_CONSTANT : (RULE_HP ('a'..'f'|'A'..'F'|'0'..'9')+ RULE_IS?|RULE_NZ RULE_INT? RULE_IS?|'0' RULE_INT? RULE_IS?|('u'|'U'|'L')? '\'' ('^'|'\''|'\\'|'\n')+ '\'');

RULE_F_CONSTANT : (RULE_HP RULE_H+ RULE_IS?|RULE_INT? '.' RULE_INT RULE_E? RULE_FS?|RULE_INT '.' RULE_E? RULE_FS?|RULE_HP RULE_H+ RULE_P RULE_FS?|RULE_HP RULE_H* '.' RULE_H+ RULE_P RULE_FS?|RULE_HP RULE_H+ '.' RULE_P RULE_FS?);

RULE_CHAR : '\'' ~(('\\'|'\'')) '\'';

RULE_STRINGC : '"' ('\\' .|~(('\\'|'"')))* '"';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

fragment RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
